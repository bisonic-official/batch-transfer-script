{"id":"39e1208de7f7536252efb27633ca7ff8","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/ERC20Mock.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC20Mock is ERC20 {\n    uint8 private immutable _customDecimals;\n\n    constructor() ERC20(\"ERC20Mock\", \"ERC20M\") {\n        _customDecimals = 18;\n    }\n\n    function decimals() public view override returns (uint8) {\n        return _customDecimals;\n    }\n\n    function mint(address account, uint256 amount) external {\n        _mint(account, amount);\n    }\n\n    function burn(address account, uint256 amount) external {\n        _burn(account, amount);\n    }\n}\n"},"contracts/TokenBatchTransfer.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TokenBatchTransfer is Ownable {\n    /**\n     * @notice The token contract address.\n     * @notice Must be set during deployment.\n     */\n    IERC20 public token;\n\n    /**\n     * @notice Vault address.\n     * @notice This address will receive all the funds after withdrawal.\n     */\n    address public vaultAddress;\n\n    /**\n     * @dev Event to be emited on token withdrawal.\n     * @param sender address The address of the sender.\n     * @param amount unit256 The amount withdrawn.\n     */\n    event WithdrawToken(address indexed sender, uint256 amount);\n\n    /**\n     * @dev Event to be emited on token batch transfer.\n     * @param sender address The address of the sender.\n     * @param recipients address[] The address of the holders.\n     * @param amounts unit256[] The amounts sent.\n     */\n    event BatchTransfer(\n        address indexed sender,\n        address[] recipients,\n        uint256[] amounts\n    );\n\n    /**\n     * @dev Constructor function.\n     * @param _token address The address of the token contract.\n     */\n    constructor(address _token) Ownable(msg.sender) {\n        // Set the token contract address\n        token = IERC20(_token);\n\n        // Set the owner and vaultAddress as the contract creator\n        vaultAddress = payable(msg.sender);\n    }\n\n    /**\n     * @dev Set the vault address.\n     * @param _vaultAdress address The address of the vault.\n     */\n    function setVaultAddress(address _vaultAdress) external onlyOwner {\n        vaultAddress = payable(_vaultAdress);\n    }\n\n    /**\n     * @dev Function to return the sum of an array of uint256.\n     * @param amounts uint256[] The list of amount per address to transfer.\n     */\n    function sum(uint256[] memory amounts) public pure returns (uint256 total) {\n        for (uint256 i = 0; i < amounts.length; i++) {\n            // Solidity 0.8+ prevents overflow automatically\n            total += amounts[i];\n        }\n    }\n\n    /**\n     * @dev Function to transfer tokens from contract to the provided list\n     * of token holders with respective amount.\n     * @param tokenHolders address[] The list of addresses to transfer token.\n     * @param amounts uint256[] The list of amount per address to transfer.\n     */\n    function batchTransfer(\n        address[] calldata tokenHolders,\n        uint256[] calldata amounts\n    ) external onlyOwner {\n        // Validate array lengths\n        require(\n            tokenHolders.length == amounts.length,\n            \"Lengths of arrays do not match\"\n        );\n\n        // Check if contract has the required balance\n        uint256 totalAmount = sum(amounts);\n        require(\n            token.balanceOf(address(this)) >= totalAmount,\n            \"Not enough balance in the contract\"\n        );\n\n        // Transfer token to holders\n        for (uint256 index = 0; index < tokenHolders.length; index++) {\n            require(\n                token.transfer(tokenHolders[index], amounts[index]),\n                \"Unable to transfer token to the account\"\n            );\n        }\n\n        // Emit batch transfer event\n        emit BatchTransfer(msg.sender, tokenHolders, amounts);\n    }\n\n    /**\n     * @dev Withdraw funds to the vault using transferFrom.\n     * @param _amount uint256 The amount to withdraw.\n     */\n    function withdrawToken(uint256 _amount) external onlyOwner {\n        uint256 pixelBalance = token.balanceOf(address(this));\n        require(_amount > 0, \"Amount must be greater than 0\");\n        require(_amount <= pixelBalance, \"Insufficient contract balance\");\n\n        // Transfer token to vault address\n        bool success = token.transfer(vaultAddress, _amount);\n\n        require(success, \"Withdraw was not successful\");\n\n        // Emit withdrawal event\n        emit WithdrawToken(msg.sender, _amount);\n    }\n\n    /**\n     * @dev Withdraw all the PIXEL funds to the vaultAdress using call.\n     */\n    function withdrawAllToken() external onlyOwner {\n        uint256 _amount = token.balanceOf(address(this));\n        require(_amount > 0, \"Amount must be greater than 0\");\n\n        // Transfer token to vault address\n        bool success = token.transfer(vaultAddress, _amount);\n\n        require(success, \"Withdraw all was not successful\");\n\n        // Emit withdrawal event\n        emit WithdrawToken(msg.sender, _amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[933],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":934,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,933],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":934,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1133:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"1133:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1133:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1142:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1142:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1142:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1150:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1150:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1150:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1166:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1166:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,933],"name":"ERC20","nameLocation":"1124:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1185:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1201:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1245:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1261:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1288:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1335:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1385:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1370:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1396:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1638:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1648:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1656:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1648:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1681:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1671:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1425:152:2","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1608:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1594:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1615:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1638:0:2"},"scope":799,"src":"1582:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"1820:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1837:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"1830:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1701:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1773:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1805:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:2"},"scope":799,"src":"1760:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2024:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2041:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2034:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1855:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"1977:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2009:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:2"},"scope":799,"src":"1962:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"2744:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2754:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2061:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"2705:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2737:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:2"},"scope":799,"src":"2688:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"2891:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2908:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"2901:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2776:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2850:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"2882:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:2"},"scope":799,"src":"2830:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3059:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3076:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3086:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3069:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2933:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3012:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3004:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3050:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:2"},"scope":799,"src":"2985:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3371:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3389:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3381:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3397:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3436:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3419:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3419:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3456:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3107:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3322:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3314:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3334:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3326:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3365:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:2"},"scope":799,"src":"3296:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3621:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3638:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3650:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3657:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3631:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3480:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3559:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3551:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3574:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3566:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:2"},"scope":799,"src":"3532:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4058:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4076:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4068:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4084:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4115:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4122:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4131:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4106:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4106:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4147:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3678:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4004:7:2","nodeType":"VariableDeclaration","scope":450,"src":"3996:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4021:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4013:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4052:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:2"},"scope":799,"src":"3979:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"4850:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"4868:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4860:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4878:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4916:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4922:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4931:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4900:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"4900:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4957:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4963:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4967:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4947:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4947:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"4983:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4171:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"4787:4:2","nodeType":"VariableDeclaration","scope":482,"src":"4779:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"4801:2:2","nodeType":"VariableDeclaration","scope":482,"src":"4793:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"4813:5:2","nodeType":"VariableDeclaration","scope":482,"src":"4805:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4844:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:2"},"scope":799,"src":"4757:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5443:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5457:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5453:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5477:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5498:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":504,"nodeType":"RevertStatement","src":"5491:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5552:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5548:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5570:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5591:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":519,"nodeType":"RevertStatement","src":"5584:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5651:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5657:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5661:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5643:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5643:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5007:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5401:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5393:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5415:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5407:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5427:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5419:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5443:0:2"},"scope":799,"src":"5374:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6064:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6078:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6252:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6266:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6288:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6298:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6321:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6335:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6317:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6342:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6392:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6398:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6411:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6367:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":564,"nodeType":"RevertStatement","src":"6360:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6445:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6552:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6562:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6570:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6584:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6552:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6074:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6098:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6214:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6230:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6214:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6628:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"6843:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"6857:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7002:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7012:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7019:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7002:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6624:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6646:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6660:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6791:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6807:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"6791:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7073:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7079:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7083:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7064:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7059:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5680:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6014:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6006:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6028:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6020:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6040:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6032:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6064:0:2"},"scope":799,"src":"5989:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7495:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7509:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7505:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7532:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7553:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":626,"nodeType":"RevertStatement","src":"7546:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7625:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7634:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7605:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7605:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7102:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7462:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7454:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7479:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7471:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7495:0:2"},"scope":799,"src":"7439:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8021:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8035:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8031:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8058:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8079:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":659,"nodeType":"RevertStatement","src":"8072:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8137:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8158:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8129:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8129:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7653:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"7988:7:2","nodeType":"VariableDeclaration","scope":672,"src":"7980:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8005:5:2","nodeType":"VariableDeclaration","scope":672,"src":"7997:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8021:0:2"},"scope":799,"src":"7965:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"8781:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8800:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8807:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8816:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"8791:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"8791:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8177:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"8733:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8725:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"8748:7:2","nodeType":"VariableDeclaration","scope":690,"src":"8740:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"8765:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8757:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"8781:0:2"},"scope":799,"src":"8707:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"9780:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9794:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"9790:89:2","trueBody":{"id":715,"nodeType":"Block","src":"9815:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9836:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":714,"nodeType":"RevertStatement","src":"9829:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"9892:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"9888:90:2","trueBody":{"id":730,"nodeType":"Block","src":"9915:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9936:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":729,"nodeType":"RevertStatement","src":"9929:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"9987:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9999:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10017:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"9987:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10036:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10032:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10047:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10075:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10082:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10091:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10066:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10061:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"8841:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9708:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9700:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9723:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9715:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"9740:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9732:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:2","nodeType":"VariableDeclaration","scope":750,"src":"9747:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"9780:0:2"},"scope":799,"src":"9682:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10485:387:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10495:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10532:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10539:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10522:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10561:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:2","memberName":"max","nodeType":"MemberAccess","src":"10580:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10557:309:2","trueBody":{"id":795,"nodeType":"Block","src":"10599:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10617:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10636:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10613:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10643:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10695:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10704:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10722:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10668:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":782,"nodeType":"RevertStatement","src":"10661:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"10756:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10793:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10800:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10809:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10828:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"10784:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"10784:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10120:271:2","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10429:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10421:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10444:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10436:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10461:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10453:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10485:0:2"},"scope":799,"src":"10396:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1106:9768:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:10770:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"214:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"227:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"396:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:3","nodeType":"VariableDeclaration","scope":811,"src":"405:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:3","nodeType":"VariableDeclaration","scope":811,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:3","nodeType":"VariableDeclaration","scope":811,"src":"447:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:3"},"src":"390:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"468:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"627:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:3","nodeType":"VariableDeclaration","scope":820,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:3","nodeType":"VariableDeclaration","scope":820,"src":"659:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:3","nodeType":"VariableDeclaration","scope":820,"src":"684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:3"},"src":"621:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"705:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"795:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:3"},"scope":877,"src":"775:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"836:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":834,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":877,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"986:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1242:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1234:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1267:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:3"},"scope":877,"src":"1204:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1279:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1575:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1567:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1590:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1622:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:3"},"scope":877,"src":"1548:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1637:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2334:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2326:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2351:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2376:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:3"},"scope":877,"src":"2309:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2388:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2720:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2712:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2734:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2726:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2746:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2771:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:3"},"scope":877,"src":"2690:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"204:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2674:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["306:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"306:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"306:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:87:4","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"288:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"319:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"391:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"417:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:4"},"scope":903,"src":"378:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"438:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"514:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"540:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:4"},"scope":903,"src":"499:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"561:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"648:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"674:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:4"},"scope":903,"src":"631:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"278:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:559:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":933,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":933,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":928,"id":930,"nodeType":"Return","src":"945:8:5"}]},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":933,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":934,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"contracts/ERC20Mock.sol":{"ast":{"absolutePath":"contracts/ERC20Mock.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"ERC20Mock":[988],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":989,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":989,"sourceUnit":800,"src":"64:55:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":937,"name":"ERC20","nameLocations":["143:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"143:5:6"},"id":938,"nodeType":"InheritanceSpecifier","src":"143:5:6"}],"canonicalName":"ERC20Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":988,"linearizedBaseContracts":[988,799,189,903,877,933],"name":"ERC20Mock","nameLocation":"130:9:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":940,"mutability":"immutable","name":"_customDecimals","nameLocation":"179:15:6","nodeType":"VariableDeclaration","scope":988,"src":"155:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":939,"name":"uint8","nodeType":"ElementaryTypeName","src":"155:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":951,"nodeType":"Block","src":"244:37:6","statements":[{"expression":{"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":947,"name":"_customDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"254:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"272:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"254:20:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":950,"nodeType":"ExpressionStatement","src":"254:20:6"}]},"id":952,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"45524332304d6f636b","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"221:11:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_33e204670039f8eeeb54743b50a42c4eacdfe9c2a99e7c90a68653a84d2870ae","typeString":"literal_string \"ERC20Mock\""},"value":"ERC20Mock"},{"hexValue":"45524332304d","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"234:8:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_29371903f5338e13340b03bced97a86233113bd36dc005a4be5558d1eca005be","typeString":"literal_string \"ERC20M\""},"value":"ERC20M"}],"id":945,"kind":"baseConstructorSpecifier","modifierName":{"id":942,"name":"ERC20","nameLocations":["215:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"215:5:6"},"nodeType":"ModifierInvocation","src":"215:28:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"212:2:6"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"244:0:6"},"scope":988,"src":"201:80:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[363],"body":{"id":960,"nodeType":"Block","src":"344:39:6","statements":[{"expression":{"id":958,"name":"_customDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"361:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":957,"id":959,"nodeType":"Return","src":"354:22:6"}]},"functionSelector":"313ce567","id":961,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"296:8:6","nodeType":"FunctionDefinition","overrides":{"id":954,"nodeType":"OverrideSpecifier","overrides":[],"src":"319:8:6"},"parameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"304:2:6"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":961,"src":"337:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":955,"name":"uint8","nodeType":"ElementaryTypeName","src":"337:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"336:7:6"},"scope":988,"src":"287:96:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":973,"nodeType":"Block","src":"445:39:6","statements":[{"expression":{"arguments":[{"id":969,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"461:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"470:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":968,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"455:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"455:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"455:22:6"}]},"functionSelector":"40c10f19","id":974,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"398:4:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"account","nameLocation":"411:7:6","nodeType":"VariableDeclaration","scope":974,"src":"403:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"amount","nameLocation":"428:6:6","nodeType":"VariableDeclaration","scope":974,"src":"420:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:33:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"445:0:6"},"scope":988,"src":"389:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":986,"nodeType":"Block","src":"546:39:6","statements":[{"expression":{"arguments":[{"id":982,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"562:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":983,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"571:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":981,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"556:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"556:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"556:22:6"}]},"functionSelector":"9dc29fac","id":987,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"499:4:6","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"account","nameLocation":"512:7:6","nodeType":"VariableDeclaration","scope":987,"src":"504:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"504:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"amount","nameLocation":"529:6:6","nodeType":"VariableDeclaration","scope":987,"src":"521:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:33:6"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"546:0:6"},"scope":988,"src":"490:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":989,"src":"121:466:6","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"39:549:6"},"id":6},"contracts/TokenBatchTransfer.sol":{"ast":{"absolutePath":"contracts/TokenBatchTransfer.sol","exportedSymbols":{"Context":[933],"IERC20":[877],"Ownable":[147],"TokenBatchTransfer":[1259]},"id":1260,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":990,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1260,"sourceUnit":878,"src":"64:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1260,"sourceUnit":148,"src":"121:52:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":993,"name":"Ownable","nameLocations":["206:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"206:7:7"},"id":994,"nodeType":"InheritanceSpecifier","src":"206:7:7"}],"canonicalName":"TokenBatchTransfer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1259,"linearizedBaseContracts":[1259,147,933],"name":"TokenBatchTransfer","nameLocation":"184:18:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"220:100:7","text":" @notice The token contract address.\n @notice Must be set during deployment."},"functionSelector":"fc0c546a","id":998,"mutability":"mutable","name":"token","nameLocation":"339:5:7","nodeType":"VariableDeclaration","scope":1259,"src":"325:19:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":997,"nodeType":"UserDefinedTypeName","pathNode":{"id":996,"name":"IERC20","nameLocations":["325:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"325:6:7"},"referencedDeclaration":877,"src":"325:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"351:114:7","text":" @notice Vault address.\n @notice This address will receive all the funds after withdrawal."},"functionSelector":"430bf08a","id":1001,"mutability":"mutable","name":"vaultAddress","nameLocation":"485:12:7","nodeType":"VariableDeclaration","scope":1259,"src":"470:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"504:170:7","text":" @dev Event to be emited on token withdrawal.\n @param sender address The address of the sender.\n @param amount unit256 The amount withdrawn."},"eventSelector":"992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a9","id":1008,"name":"WithdrawToken","nameLocation":"685:13:7","nodeType":"EventDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"715:6:7","nodeType":"VariableDeclaration","scope":1008,"src":"699:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"731:6:7","nodeType":"VariableDeclaration","scope":1008,"src":"723:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:40:7"},"src":"679:60:7"},{"anonymous":false,"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"745:236:7","text":" @dev Event to be emited on token batch transfer.\n @param sender address The address of the sender.\n @param recipients address[] The address of the holders.\n @param amounts unit256[] The amounts sent."},"eventSelector":"d76871a3b9b205c530f73884df11af482cc4ac28f71bdb2f15a98e79a3a79076","id":1019,"name":"BatchTransfer","nameLocation":"992:13:7","nodeType":"EventDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1031:6:7","nodeType":"VariableDeclaration","scope":1019,"src":"1015:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"indexed":false,"mutability":"mutable","name":"recipients","nameLocation":"1057:10:7","nodeType":"VariableDeclaration","scope":1019,"src":"1047:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1013,"nodeType":"ArrayTypeName","src":"1047:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":false,"mutability":"mutable","name":"amounts","nameLocation":"1087:7:7","nodeType":"VariableDeclaration","scope":1019,"src":"1077:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1077:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1016,"nodeType":"ArrayTypeName","src":"1077:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1005:95:7"},"src":"986:115:7"},{"body":{"id":1043,"nodeType":"Block","src":"1269:192:7","statements":[{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1321:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1031,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1336:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1030,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"1329:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1329:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"src":"1321:22:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1034,"nodeType":"ExpressionStatement","src":"1321:22:7"},{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1035,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1420:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1443:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1447:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1443:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1435:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"1435:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1420:34:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1042,"nodeType":"ExpressionStatement","src":"1420:34:7"}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"1107:109:7","text":" @dev Constructor function.\n @param _token address The address of the token contract."},"id":1044,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1257:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1261:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1257:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1027,"kind":"baseConstructorSpecifier","modifierName":{"id":1024,"name":"Ownable","nameLocations":["1249:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1249:7:7"},"nodeType":"ModifierInvocation","src":"1249:19:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"_token","nameLocation":"1241:6:7","nodeType":"VariableDeclaration","scope":1044,"src":"1233:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1232:16:7"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[],"src":"1269:0:7"},"scope":1259,"src":"1221:240:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1059,"nodeType":"Block","src":"1645:53:7","statements":[{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1052,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1655:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1055,"name":"_vaultAdress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"1678:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1670:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"1670:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1670:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1655:36:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1058,"nodeType":"ExpressionStatement","src":"1655:36:7"}]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"1467:107:7","text":" @dev Set the vault address.\n @param _vaultAdress address The address of the vault."},"functionSelector":"85535cc5","id":1060,"implemented":true,"kind":"function","modifiers":[{"id":1050,"kind":"modifierInvocation","modifierName":{"id":1049,"name":"onlyOwner","nameLocations":["1635:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1635:9:7"},"nodeType":"ModifierInvocation","src":"1635:9:7"}],"name":"setVaultAddress","nameLocation":"1588:15:7","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"_vaultAdress","nameLocation":"1612:12:7","nodeType":"VariableDeclaration","scope":1060,"src":"1604:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"1604:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1603:22:7"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"1645:0:7"},"scope":1259,"src":"1579:119:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1088,"nodeType":"Block","src":"1934:166:7","statements":[{"body":{"id":1086,"nodeType":"Block","src":"1989:105:7","statements":[{"expression":{"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1080,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2064:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1081,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"2073:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1083,"indexExpression":{"id":1082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2081:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2073:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2064:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1085,"nodeType":"ExpressionStatement","src":"2064:19:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1964:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1074,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1968:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1976:6:7","memberName":"length","nodeType":"MemberAccess","src":"1968:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1964:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"initializationExpression":{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"i","nameLocation":"1957:1:7","nodeType":"VariableDeclaration","scope":1087,"src":"1949:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1072,"initialValue":{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1949:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1984:3:7","subExpression":{"id":1077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1984:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1079,"nodeType":"ExpressionStatement","src":"1984:3:7"},"nodeType":"ForStatement","src":"1944:150:7"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"1704:150:7","text":" @dev Function to return the sum of an array of uint256.\n @param amounts uint256[] The list of amount per address to transfer."},"functionSelector":"0194db8e","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"sum","nameLocation":"1868:3:7","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"amounts","nameLocation":"1889:7:7","nodeType":"VariableDeclaration","scope":1089,"src":"1872:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ArrayTypeName","src":"1872:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1871:26:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"total","nameLocation":"1927:5:7","nodeType":"VariableDeclaration","scope":1089,"src":"1919:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1918:15:7"},"scope":1259,"src":"1859:241:7","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1162,"nodeType":"Block","src":"2524:784:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1102,"name":"tokenHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2589:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2602:6:7","memberName":"length","nodeType":"MemberAccess","src":"2589:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1104,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2612:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2620:6:7","memberName":"length","nodeType":"MemberAccess","src":"2612:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2589:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e67746873206f662061727261797320646f206e6f74206d61746368","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2640:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa03b6ea72e227ce35a48715f1d81ef0396ad12fd8f4c133eb73c8d550363fc0","typeString":"literal_string \"Lengths of arrays do not match\""},"value":"Lengths of arrays do not match"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa03b6ea72e227ce35a48715f1d81ef0396ad12fd8f4c133eb73c8d550363fc0","typeString":"literal_string \"Lengths of arrays do not match\""}],"id":1101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2568:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2568:114:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"2568:114:7"},{"assignments":[1111],"declarations":[{"constant":false,"id":1111,"mutability":"mutable","name":"totalAmount","nameLocation":"2755:11:7","nodeType":"VariableDeclaration","scope":1162,"src":"2747:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1115,"initialValue":{"arguments":[{"id":1113,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2773:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":1112,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2769:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2769:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2747:34:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1121,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2836:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBatchTransfer_$1259","typeString":"contract TokenBatchTransfer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBatchTransfer_$1259","typeString":"contract TokenBatchTransfer"}],"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2828:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"2828:7:7","typeDescriptions":{}}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2828:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1117,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2812:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2818:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"2812:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1124,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"2846:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2812:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682062616c616e636520696e2074686520636f6e7472616374","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2871:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab9f3546ec28940a6d6a885255bfad9360ca83920aa49c0a028cffeff1b19e5c","typeString":"literal_string \"Not enough balance in the contract\""},"value":"Not enough balance in the contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab9f3546ec28940a6d6a885255bfad9360ca83920aa49c0a028cffeff1b19e5c","typeString":"literal_string \"Not enough balance in the contract\""}],"id":1116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2791:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:126:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"2791:126:7"},{"body":{"id":1153,"nodeType":"Block","src":"3027:174:7","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":1143,"name":"tokenHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3081:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1145,"indexExpression":{"id":1144,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3094:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3081:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1146,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3102:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1148,"indexExpression":{"id":1147,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3110:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3102:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1141,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3066:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3072:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"3066:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e61626c6520746f207472616e7366657220746f6b656e20746f20746865206163636f756e74","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3135:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c32e7268a4b8f21bf2436ce677b8c5dd11e6fb2f6c4046e21c82c90c0c1b20b","typeString":"literal_string \"Unable to transfer token to the account\""},"value":"Unable to transfer token to the account"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c32e7268a4b8f21bf2436ce677b8c5dd11e6fb2f6c4046e21c82c90c0c1b20b","typeString":"literal_string \"Unable to transfer token to the account\""}],"id":1140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3041:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3041:149:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1152,"nodeType":"ExpressionStatement","src":"3041:149:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2989:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1134,"name":"tokenHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2997:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3010:6:7","memberName":"length","nodeType":"MemberAccess","src":"2997:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2989:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1154,"initializationExpression":{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"index","nameLocation":"2978:5:7","nodeType":"VariableDeclaration","scope":1154,"src":"2970:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1132,"initialValue":{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2986:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2970:17:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3018:7:7","subExpression":{"id":1137,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3018:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ExpressionStatement","src":"3018:7:7"},"nodeType":"ForStatement","src":"2965:236:7"},{"eventCall":{"arguments":[{"expression":{"id":1156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3267:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3267:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"tokenHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3279:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":1159,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3293:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":1155,"name":"BatchTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3253:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory,uint256[] memory)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"EmitStatement","src":"3248:53:7"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"2106:288:7","text":" @dev Function to transfer tokens from contract to the provided list\n of token holders with respective amount.\n @param tokenHolders address[] The list of addresses to transfer token.\n @param amounts uint256[] The list of amount per address to transfer."},"functionSelector":"88d695b2","id":1163,"implemented":true,"kind":"function","modifiers":[{"id":1099,"kind":"modifierInvocation","modifierName":{"id":1098,"name":"onlyOwner","nameLocations":["2514:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2514:9:7"},"nodeType":"ModifierInvocation","src":"2514:9:7"}],"name":"batchTransfer","nameLocation":"2408:13:7","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"tokenHolders","nameLocation":"2450:12:7","nodeType":"VariableDeclaration","scope":1163,"src":"2431:31:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"2431:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1092,"nodeType":"ArrayTypeName","src":"2431:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"amounts","nameLocation":"2491:7:7","nodeType":"VariableDeclaration","scope":1163,"src":"2472:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2472:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1095,"nodeType":"ArrayTypeName","src":"2472:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2421:83:7"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"2524:0:7"},"scope":1259,"src":"2399:909:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1214,"nodeType":"Block","src":"3503:455:7","statements":[{"assignments":[1172],"declarations":[{"constant":false,"id":1172,"mutability":"mutable","name":"pixelBalance","nameLocation":"3521:12:7","nodeType":"VariableDeclaration","scope":1214,"src":"3513:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3513:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1180,"initialValue":{"arguments":[{"arguments":[{"id":1177,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3560:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBatchTransfer_$1259","typeString":"contract TokenBatchTransfer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBatchTransfer_$1259","typeString":"contract TokenBatchTransfer"}],"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"3552:7:7","typeDescriptions":{}}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1173,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3536:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3542:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"3536:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3536:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3513:53:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3584:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3594:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3584:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3597:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":1181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3576:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"3576:53:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1189,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3647:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1190,"name":"pixelBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"3658:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3647:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6e74726163742062616c616e6365","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3672:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""},"value":"Insufficient contract balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""}],"id":1188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3639:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3639:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"ExpressionStatement","src":"3639:65:7"},{"assignments":[1196],"declarations":[{"constant":false,"id":1196,"mutability":"mutable","name":"success","nameLocation":"3763:7:7","nodeType":"VariableDeclaration","scope":1214,"src":"3758:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1195,"name":"bool","nodeType":"ElementaryTypeName","src":"3758:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1202,"initialValue":{"arguments":[{"id":1199,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3788:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1197,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3773:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3779:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"3773:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3758:52:7"},{"expression":{"arguments":[{"id":1204,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3829:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720776173206e6f74207375636365737366756c","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:29:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcdbd0a79fce88b738eb2b21f26091c667c14f193cecf0fa3d9b5d94ed4d488a","typeString":"literal_string \"Withdraw was not successful\""},"value":"Withdraw was not successful"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bcdbd0a79fce88b738eb2b21f26091c667c14f193cecf0fa3d9b5d94ed4d488a","typeString":"literal_string \"Withdraw was not successful\""}],"id":1203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3821:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1207,"nodeType":"ExpressionStatement","src":"3821:47:7"},{"eventCall":{"arguments":[{"expression":{"id":1209,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3931:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3935:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3931:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3943:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1208,"name":"WithdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3917:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"EmitStatement","src":"3912:39:7"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"3314:125:7","text":" @dev Withdraw funds to the vault using transferFrom.\n @param _amount uint256 The amount to withdraw."},"functionSelector":"50baa622","id":1215,"implemented":true,"kind":"function","modifiers":[{"id":1169,"kind":"modifierInvocation","modifierName":{"id":1168,"name":"onlyOwner","nameLocations":["3493:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3493:9:7"},"nodeType":"ModifierInvocation","src":"3493:9:7"}],"name":"withdrawToken","nameLocation":"3453:13:7","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"_amount","nameLocation":"3475:7:7","nodeType":"VariableDeclaration","scope":1215,"src":"3467:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3466:17:7"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"3503:0:7"},"scope":1259,"src":"3444:514:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1257,"nodeType":"Block","src":"4099:379:7","statements":[{"assignments":[1222],"declarations":[{"constant":false,"id":1222,"mutability":"mutable","name":"_amount","nameLocation":"4117:7:7","nodeType":"VariableDeclaration","scope":1257,"src":"4109:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4109:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1230,"initialValue":{"arguments":[{"arguments":[{"id":1227,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4151:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBatchTransfer_$1259","typeString":"contract TokenBatchTransfer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBatchTransfer_$1259","typeString":"contract TokenBatchTransfer"}],"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4143:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"4143:7:7","typeDescriptions":{}}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4143:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1223,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"4127:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4133:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"4127:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4109:48:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4175:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4185:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4175:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4188:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":1231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4167:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"4167:53:7"},{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"success","nameLocation":"4279:7:7","nodeType":"VariableDeclaration","scope":1257,"src":"4274:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"4274:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1245,"initialValue":{"arguments":[{"id":1242,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4304:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4318:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1240,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"4289:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4295:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"4289:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4289:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4274:52:7"},{"expression":{"arguments":[{"id":1247,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4345:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720616c6c20776173206e6f74207375636365737366756c","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4354:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d19e9a50265a9fdef5462eabd5cfd283435423cee1a1dd9ecc3e25e903b7d47e","typeString":"literal_string \"Withdraw all was not successful\""},"value":"Withdraw all was not successful"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d19e9a50265a9fdef5462eabd5cfd283435423cee1a1dd9ecc3e25e903b7d47e","typeString":"literal_string \"Withdraw all was not successful\""}],"id":1246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4337:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"ExpressionStatement","src":"4337:51:7"},{"eventCall":{"arguments":[{"expression":{"id":1252,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4451:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4455:6:7","memberName":"sender","nodeType":"MemberAccess","src":"4451:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4463:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"WithdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4437:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4437:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1256,"nodeType":"EmitStatement","src":"4432:39:7"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3964:83:7","text":" @dev Withdraw all the PIXEL funds to the vaultAdress using call."},"functionSelector":"14870d2c","id":1258,"implemented":true,"kind":"function","modifiers":[{"id":1219,"kind":"modifierInvocation","modifierName":{"id":1218,"name":"onlyOwner","nameLocations":["4089:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4089:9:7"},"nodeType":"ModifierInvocation","src":"4089:9:7"}],"name":"withdrawAllToken","nameLocation":"4061:16:7","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"4077:2:7"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"4099:0:7"},"scope":1259,"src":"4052:426:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1260,"src":"175:4305:7","usedErrors":[13,18],"usedEvents":[24,1008,1019]}],"src":"39:4442:7"},"id":7}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":307,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":313,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":315,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":317,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":319,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC-20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ERC20Mock.sol":{"ERC20Mock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_952":{"entryPoint":null,"id":952,"parameterSlots":0,"returnSlots":0},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":203,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":282,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":145,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":123,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2652:8","nodeType":"YulBlock","src":"0:2652:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"46:95:8","nodeType":"YulBlock","src":"46:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:8","nodeType":"YulLiteral","src":"63:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:8","nodeType":"YulLiteral","src":"70:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:8","nodeType":"YulLiteral","src":"75:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:8","nodeType":"YulIdentifier","src":"66:3:8"},"nativeSrc":"66:20:8","nodeType":"YulFunctionCall","src":"66:20:8"}],"functionName":{"name":"mstore","nativeSrc":"56:6:8","nodeType":"YulIdentifier","src":"56:6:8"},"nativeSrc":"56:31:8","nodeType":"YulFunctionCall","src":"56:31:8"},"nativeSrc":"56:31:8","nodeType":"YulExpressionStatement","src":"56:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:8","nodeType":"YulLiteral","src":"103:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:8","nodeType":"YulLiteral","src":"106:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:8","nodeType":"YulIdentifier","src":"96:6:8"},"nativeSrc":"96:15:8","nodeType":"YulFunctionCall","src":"96:15:8"},"nativeSrc":"96:15:8","nodeType":"YulExpressionStatement","src":"96:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:8","nodeType":"YulLiteral","src":"127:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:8","nodeType":"YulLiteral","src":"130:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:8","nodeType":"YulIdentifier","src":"120:6:8"},"nativeSrc":"120:15:8","nodeType":"YulFunctionCall","src":"120:15:8"},"nativeSrc":"120:15:8","nodeType":"YulExpressionStatement","src":"120:15:8"}]},"name":"panic_error_0x41","nativeSrc":"14:127:8","nodeType":"YulFunctionDefinition","src":"14:127:8"},{"body":{"nativeSrc":"201:325:8","nodeType":"YulBlock","src":"201:325:8","statements":[{"nativeSrc":"211:22:8","nodeType":"YulAssignment","src":"211:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"225:1:8","nodeType":"YulLiteral","src":"225:1:8","type":"","value":"1"},{"name":"data","nativeSrc":"228:4:8","nodeType":"YulIdentifier","src":"228:4:8"}],"functionName":{"name":"shr","nativeSrc":"221:3:8","nodeType":"YulIdentifier","src":"221:3:8"},"nativeSrc":"221:12:8","nodeType":"YulFunctionCall","src":"221:12:8"},"variableNames":[{"name":"length","nativeSrc":"211:6:8","nodeType":"YulIdentifier","src":"211:6:8"}]},{"nativeSrc":"242:38:8","nodeType":"YulVariableDeclaration","src":"242:38:8","value":{"arguments":[{"name":"data","nativeSrc":"272:4:8","nodeType":"YulIdentifier","src":"272:4:8"},{"kind":"number","nativeSrc":"278:1:8","nodeType":"YulLiteral","src":"278:1:8","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"268:3:8","nodeType":"YulIdentifier","src":"268:3:8"},"nativeSrc":"268:12:8","nodeType":"YulFunctionCall","src":"268:12:8"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"246:18:8","nodeType":"YulTypedName","src":"246:18:8","type":""}]},{"body":{"nativeSrc":"319:31:8","nodeType":"YulBlock","src":"319:31:8","statements":[{"nativeSrc":"321:27:8","nodeType":"YulAssignment","src":"321:27:8","value":{"arguments":[{"name":"length","nativeSrc":"335:6:8","nodeType":"YulIdentifier","src":"335:6:8"},{"kind":"number","nativeSrc":"343:4:8","nodeType":"YulLiteral","src":"343:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"331:3:8","nodeType":"YulIdentifier","src":"331:3:8"},"nativeSrc":"331:17:8","nodeType":"YulFunctionCall","src":"331:17:8"},"variableNames":[{"name":"length","nativeSrc":"321:6:8","nodeType":"YulIdentifier","src":"321:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"299:18:8","nodeType":"YulIdentifier","src":"299:18:8"}],"functionName":{"name":"iszero","nativeSrc":"292:6:8","nodeType":"YulIdentifier","src":"292:6:8"},"nativeSrc":"292:26:8","nodeType":"YulFunctionCall","src":"292:26:8"},"nativeSrc":"289:61:8","nodeType":"YulIf","src":"289:61:8"},{"body":{"nativeSrc":"409:111:8","nodeType":"YulBlock","src":"409:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"430:1:8","nodeType":"YulLiteral","src":"430:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"437:3:8","nodeType":"YulLiteral","src":"437:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"442:10:8","nodeType":"YulLiteral","src":"442:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"433:3:8","nodeType":"YulIdentifier","src":"433:3:8"},"nativeSrc":"433:20:8","nodeType":"YulFunctionCall","src":"433:20:8"}],"functionName":{"name":"mstore","nativeSrc":"423:6:8","nodeType":"YulIdentifier","src":"423:6:8"},"nativeSrc":"423:31:8","nodeType":"YulFunctionCall","src":"423:31:8"},"nativeSrc":"423:31:8","nodeType":"YulExpressionStatement","src":"423:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"474:1:8","nodeType":"YulLiteral","src":"474:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"477:4:8","nodeType":"YulLiteral","src":"477:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"467:6:8","nodeType":"YulIdentifier","src":"467:6:8"},"nativeSrc":"467:15:8","nodeType":"YulFunctionCall","src":"467:15:8"},"nativeSrc":"467:15:8","nodeType":"YulExpressionStatement","src":"467:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"502:1:8","nodeType":"YulLiteral","src":"502:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"505:4:8","nodeType":"YulLiteral","src":"505:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"495:6:8","nodeType":"YulIdentifier","src":"495:6:8"},"nativeSrc":"495:15:8","nodeType":"YulFunctionCall","src":"495:15:8"},"nativeSrc":"495:15:8","nodeType":"YulExpressionStatement","src":"495:15:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"365:18:8","nodeType":"YulIdentifier","src":"365:18:8"},{"arguments":[{"name":"length","nativeSrc":"388:6:8","nodeType":"YulIdentifier","src":"388:6:8"},{"kind":"number","nativeSrc":"396:2:8","nodeType":"YulLiteral","src":"396:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"385:2:8","nodeType":"YulIdentifier","src":"385:2:8"},"nativeSrc":"385:14:8","nodeType":"YulFunctionCall","src":"385:14:8"}],"functionName":{"name":"eq","nativeSrc":"362:2:8","nodeType":"YulIdentifier","src":"362:2:8"},"nativeSrc":"362:38:8","nodeType":"YulFunctionCall","src":"362:38:8"},"nativeSrc":"359:161:8","nodeType":"YulIf","src":"359:161:8"}]},"name":"extract_byte_array_length","nativeSrc":"146:380:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"181:4:8","nodeType":"YulTypedName","src":"181:4:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"190:6:8","nodeType":"YulTypedName","src":"190:6:8","type":""}],"src":"146:380:8"},{"body":{"nativeSrc":"587:65:8","nodeType":"YulBlock","src":"587:65:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"604:1:8","nodeType":"YulLiteral","src":"604:1:8","type":"","value":"0"},{"name":"ptr","nativeSrc":"607:3:8","nodeType":"YulIdentifier","src":"607:3:8"}],"functionName":{"name":"mstore","nativeSrc":"597:6:8","nodeType":"YulIdentifier","src":"597:6:8"},"nativeSrc":"597:14:8","nodeType":"YulFunctionCall","src":"597:14:8"},"nativeSrc":"597:14:8","nodeType":"YulExpressionStatement","src":"597:14:8"},{"nativeSrc":"620:26:8","nodeType":"YulAssignment","src":"620:26:8","value":{"arguments":[{"kind":"number","nativeSrc":"638:1:8","nodeType":"YulLiteral","src":"638:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"641:4:8","nodeType":"YulLiteral","src":"641:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"628:9:8","nodeType":"YulIdentifier","src":"628:9:8"},"nativeSrc":"628:18:8","nodeType":"YulFunctionCall","src":"628:18:8"},"variableNames":[{"name":"data","nativeSrc":"620:4:8","nodeType":"YulIdentifier","src":"620:4:8"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"531:121:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"570:3:8","nodeType":"YulTypedName","src":"570:3:8","type":""}],"returnVariables":[{"name":"data","nativeSrc":"578:4:8","nodeType":"YulTypedName","src":"578:4:8","type":""}],"src":"531:121:8"},{"body":{"nativeSrc":"738:437:8","nodeType":"YulBlock","src":"738:437:8","statements":[{"body":{"nativeSrc":"771:398:8","nodeType":"YulBlock","src":"771:398:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"792:1:8","nodeType":"YulLiteral","src":"792:1:8","type":"","value":"0"},{"name":"array","nativeSrc":"795:5:8","nodeType":"YulIdentifier","src":"795:5:8"}],"functionName":{"name":"mstore","nativeSrc":"785:6:8","nodeType":"YulIdentifier","src":"785:6:8"},"nativeSrc":"785:16:8","nodeType":"YulFunctionCall","src":"785:16:8"},"nativeSrc":"785:16:8","nodeType":"YulExpressionStatement","src":"785:16:8"},{"nativeSrc":"814:30:8","nodeType":"YulVariableDeclaration","src":"814:30:8","value":{"arguments":[{"kind":"number","nativeSrc":"836:1:8","nodeType":"YulLiteral","src":"836:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"839:4:8","nodeType":"YulLiteral","src":"839:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"826:9:8","nodeType":"YulIdentifier","src":"826:9:8"},"nativeSrc":"826:18:8","nodeType":"YulFunctionCall","src":"826:18:8"},"variables":[{"name":"data","nativeSrc":"818:4:8","nodeType":"YulTypedName","src":"818:4:8","type":""}]},{"nativeSrc":"857:57:8","nodeType":"YulVariableDeclaration","src":"857:57:8","value":{"arguments":[{"name":"data","nativeSrc":"880:4:8","nodeType":"YulIdentifier","src":"880:4:8"},{"arguments":[{"kind":"number","nativeSrc":"890:1:8","nodeType":"YulLiteral","src":"890:1:8","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"897:10:8","nodeType":"YulIdentifier","src":"897:10:8"},{"kind":"number","nativeSrc":"909:2:8","nodeType":"YulLiteral","src":"909:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"893:3:8","nodeType":"YulIdentifier","src":"893:3:8"},"nativeSrc":"893:19:8","nodeType":"YulFunctionCall","src":"893:19:8"}],"functionName":{"name":"shr","nativeSrc":"886:3:8","nodeType":"YulIdentifier","src":"886:3:8"},"nativeSrc":"886:27:8","nodeType":"YulFunctionCall","src":"886:27:8"}],"functionName":{"name":"add","nativeSrc":"876:3:8","nodeType":"YulIdentifier","src":"876:3:8"},"nativeSrc":"876:38:8","nodeType":"YulFunctionCall","src":"876:38:8"},"variables":[{"name":"deleteStart","nativeSrc":"861:11:8","nodeType":"YulTypedName","src":"861:11:8","type":""}]},{"body":{"nativeSrc":"951:23:8","nodeType":"YulBlock","src":"951:23:8","statements":[{"nativeSrc":"953:19:8","nodeType":"YulAssignment","src":"953:19:8","value":{"name":"data","nativeSrc":"968:4:8","nodeType":"YulIdentifier","src":"968:4:8"},"variableNames":[{"name":"deleteStart","nativeSrc":"953:11:8","nodeType":"YulIdentifier","src":"953:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"933:10:8","nodeType":"YulIdentifier","src":"933:10:8"},{"kind":"number","nativeSrc":"945:4:8","nodeType":"YulLiteral","src":"945:4:8","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"930:2:8","nodeType":"YulIdentifier","src":"930:2:8"},"nativeSrc":"930:20:8","nodeType":"YulFunctionCall","src":"930:20:8"},"nativeSrc":"927:47:8","nodeType":"YulIf","src":"927:47:8"},{"nativeSrc":"987:41:8","nodeType":"YulVariableDeclaration","src":"987:41:8","value":{"arguments":[{"name":"data","nativeSrc":"1001:4:8","nodeType":"YulIdentifier","src":"1001:4:8"},{"arguments":[{"kind":"number","nativeSrc":"1011:1:8","nodeType":"YulLiteral","src":"1011:1:8","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1018:3:8","nodeType":"YulIdentifier","src":"1018:3:8"},{"kind":"number","nativeSrc":"1023:2:8","nodeType":"YulLiteral","src":"1023:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1014:3:8","nodeType":"YulIdentifier","src":"1014:3:8"},"nativeSrc":"1014:12:8","nodeType":"YulFunctionCall","src":"1014:12:8"}],"functionName":{"name":"shr","nativeSrc":"1007:3:8","nodeType":"YulIdentifier","src":"1007:3:8"},"nativeSrc":"1007:20:8","nodeType":"YulFunctionCall","src":"1007:20:8"}],"functionName":{"name":"add","nativeSrc":"997:3:8","nodeType":"YulIdentifier","src":"997:3:8"},"nativeSrc":"997:31:8","nodeType":"YulFunctionCall","src":"997:31:8"},"variables":[{"name":"_1","nativeSrc":"991:2:8","nodeType":"YulTypedName","src":"991:2:8","type":""}]},{"nativeSrc":"1041:24:8","nodeType":"YulVariableDeclaration","src":"1041:24:8","value":{"name":"deleteStart","nativeSrc":"1054:11:8","nodeType":"YulIdentifier","src":"1054:11:8"},"variables":[{"name":"start","nativeSrc":"1045:5:8","nodeType":"YulTypedName","src":"1045:5:8","type":""}]},{"body":{"nativeSrc":"1139:20:8","nodeType":"YulBlock","src":"1139:20:8","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1148:5:8","nodeType":"YulIdentifier","src":"1148:5:8"},{"kind":"number","nativeSrc":"1155:1:8","nodeType":"YulLiteral","src":"1155:1:8","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1141:6:8","nodeType":"YulIdentifier","src":"1141:6:8"},"nativeSrc":"1141:16:8","nodeType":"YulFunctionCall","src":"1141:16:8"},"nativeSrc":"1141:16:8","nodeType":"YulExpressionStatement","src":"1141:16:8"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1089:5:8","nodeType":"YulIdentifier","src":"1089:5:8"},{"name":"_1","nativeSrc":"1096:2:8","nodeType":"YulIdentifier","src":"1096:2:8"}],"functionName":{"name":"lt","nativeSrc":"1086:2:8","nodeType":"YulIdentifier","src":"1086:2:8"},"nativeSrc":"1086:13:8","nodeType":"YulFunctionCall","src":"1086:13:8"},"nativeSrc":"1078:81:8","nodeType":"YulForLoop","post":{"nativeSrc":"1100:26:8","nodeType":"YulBlock","src":"1100:26:8","statements":[{"nativeSrc":"1102:22:8","nodeType":"YulAssignment","src":"1102:22:8","value":{"arguments":[{"name":"start","nativeSrc":"1115:5:8","nodeType":"YulIdentifier","src":"1115:5:8"},{"kind":"number","nativeSrc":"1122:1:8","nodeType":"YulLiteral","src":"1122:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1111:3:8","nodeType":"YulIdentifier","src":"1111:3:8"},"nativeSrc":"1111:13:8","nodeType":"YulFunctionCall","src":"1111:13:8"},"variableNames":[{"name":"start","nativeSrc":"1102:5:8","nodeType":"YulIdentifier","src":"1102:5:8"}]}]},"pre":{"nativeSrc":"1082:3:8","nodeType":"YulBlock","src":"1082:3:8","statements":[]},"src":"1078:81:8"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"754:3:8","nodeType":"YulIdentifier","src":"754:3:8"},{"kind":"number","nativeSrc":"759:2:8","nodeType":"YulLiteral","src":"759:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"751:2:8","nodeType":"YulIdentifier","src":"751:2:8"},"nativeSrc":"751:11:8","nodeType":"YulFunctionCall","src":"751:11:8"},"nativeSrc":"748:421:8","nodeType":"YulIf","src":"748:421:8"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"657:518:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"710:5:8","nodeType":"YulTypedName","src":"710:5:8","type":""},{"name":"len","nativeSrc":"717:3:8","nodeType":"YulTypedName","src":"717:3:8","type":""},{"name":"startIndex","nativeSrc":"722:10:8","nodeType":"YulTypedName","src":"722:10:8","type":""}],"src":"657:518:8"},{"body":{"nativeSrc":"1265:81:8","nodeType":"YulBlock","src":"1265:81:8","statements":[{"nativeSrc":"1275:65:8","nodeType":"YulAssignment","src":"1275:65:8","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1290:4:8","nodeType":"YulIdentifier","src":"1290:4:8"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1308:1:8","nodeType":"YulLiteral","src":"1308:1:8","type":"","value":"3"},{"name":"len","nativeSrc":"1311:3:8","nodeType":"YulIdentifier","src":"1311:3:8"}],"functionName":{"name":"shl","nativeSrc":"1304:3:8","nodeType":"YulIdentifier","src":"1304:3:8"},"nativeSrc":"1304:11:8","nodeType":"YulFunctionCall","src":"1304:11:8"},{"arguments":[{"kind":"number","nativeSrc":"1321:1:8","nodeType":"YulLiteral","src":"1321:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1317:3:8","nodeType":"YulIdentifier","src":"1317:3:8"},"nativeSrc":"1317:6:8","nodeType":"YulFunctionCall","src":"1317:6:8"}],"functionName":{"name":"shr","nativeSrc":"1300:3:8","nodeType":"YulIdentifier","src":"1300:3:8"},"nativeSrc":"1300:24:8","nodeType":"YulFunctionCall","src":"1300:24:8"}],"functionName":{"name":"not","nativeSrc":"1296:3:8","nodeType":"YulIdentifier","src":"1296:3:8"},"nativeSrc":"1296:29:8","nodeType":"YulFunctionCall","src":"1296:29:8"}],"functionName":{"name":"and","nativeSrc":"1286:3:8","nodeType":"YulIdentifier","src":"1286:3:8"},"nativeSrc":"1286:40:8","nodeType":"YulFunctionCall","src":"1286:40:8"},{"arguments":[{"kind":"number","nativeSrc":"1332:1:8","nodeType":"YulLiteral","src":"1332:1:8","type":"","value":"1"},{"name":"len","nativeSrc":"1335:3:8","nodeType":"YulIdentifier","src":"1335:3:8"}],"functionName":{"name":"shl","nativeSrc":"1328:3:8","nodeType":"YulIdentifier","src":"1328:3:8"},"nativeSrc":"1328:11:8","nodeType":"YulFunctionCall","src":"1328:11:8"}],"functionName":{"name":"or","nativeSrc":"1283:2:8","nodeType":"YulIdentifier","src":"1283:2:8"},"nativeSrc":"1283:57:8","nodeType":"YulFunctionCall","src":"1283:57:8"},"variableNames":[{"name":"used","nativeSrc":"1275:4:8","nodeType":"YulIdentifier","src":"1275:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1180:166:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1242:4:8","nodeType":"YulTypedName","src":"1242:4:8","type":""},{"name":"len","nativeSrc":"1248:3:8","nodeType":"YulTypedName","src":"1248:3:8","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1256:4:8","nodeType":"YulTypedName","src":"1256:4:8","type":""}],"src":"1180:166:8"},{"body":{"nativeSrc":"1447:1203:8","nodeType":"YulBlock","src":"1447:1203:8","statements":[{"nativeSrc":"1457:24:8","nodeType":"YulVariableDeclaration","src":"1457:24:8","value":{"arguments":[{"name":"src","nativeSrc":"1477:3:8","nodeType":"YulIdentifier","src":"1477:3:8"}],"functionName":{"name":"mload","nativeSrc":"1471:5:8","nodeType":"YulIdentifier","src":"1471:5:8"},"nativeSrc":"1471:10:8","nodeType":"YulFunctionCall","src":"1471:10:8"},"variables":[{"name":"newLen","nativeSrc":"1461:6:8","nodeType":"YulTypedName","src":"1461:6:8","type":""}]},{"body":{"nativeSrc":"1524:22:8","nodeType":"YulBlock","src":"1524:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1526:16:8","nodeType":"YulIdentifier","src":"1526:16:8"},"nativeSrc":"1526:18:8","nodeType":"YulFunctionCall","src":"1526:18:8"},"nativeSrc":"1526:18:8","nodeType":"YulExpressionStatement","src":"1526:18:8"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1496:6:8","nodeType":"YulIdentifier","src":"1496:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1512:2:8","nodeType":"YulLiteral","src":"1512:2:8","type":"","value":"64"},{"kind":"number","nativeSrc":"1516:1:8","nodeType":"YulLiteral","src":"1516:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1508:3:8","nodeType":"YulIdentifier","src":"1508:3:8"},"nativeSrc":"1508:10:8","nodeType":"YulFunctionCall","src":"1508:10:8"},{"kind":"number","nativeSrc":"1520:1:8","nodeType":"YulLiteral","src":"1520:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1504:3:8","nodeType":"YulIdentifier","src":"1504:3:8"},"nativeSrc":"1504:18:8","nodeType":"YulFunctionCall","src":"1504:18:8"}],"functionName":{"name":"gt","nativeSrc":"1493:2:8","nodeType":"YulIdentifier","src":"1493:2:8"},"nativeSrc":"1493:30:8","nodeType":"YulFunctionCall","src":"1493:30:8"},"nativeSrc":"1490:56:8","nodeType":"YulIf","src":"1490:56:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1599:4:8","nodeType":"YulIdentifier","src":"1599:4:8"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1637:4:8","nodeType":"YulIdentifier","src":"1637:4:8"}],"functionName":{"name":"sload","nativeSrc":"1631:5:8","nodeType":"YulIdentifier","src":"1631:5:8"},"nativeSrc":"1631:11:8","nodeType":"YulFunctionCall","src":"1631:11:8"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1605:25:8","nodeType":"YulIdentifier","src":"1605:25:8"},"nativeSrc":"1605:38:8","nodeType":"YulFunctionCall","src":"1605:38:8"},{"name":"newLen","nativeSrc":"1645:6:8","nodeType":"YulIdentifier","src":"1645:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1555:43:8","nodeType":"YulIdentifier","src":"1555:43:8"},"nativeSrc":"1555:97:8","nodeType":"YulFunctionCall","src":"1555:97:8"},"nativeSrc":"1555:97:8","nodeType":"YulExpressionStatement","src":"1555:97:8"},{"nativeSrc":"1661:18:8","nodeType":"YulVariableDeclaration","src":"1661:18:8","value":{"kind":"number","nativeSrc":"1678:1:8","nodeType":"YulLiteral","src":"1678:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1665:9:8","nodeType":"YulTypedName","src":"1665:9:8","type":""}]},{"nativeSrc":"1688:17:8","nodeType":"YulAssignment","src":"1688:17:8","value":{"kind":"number","nativeSrc":"1701:4:8","nodeType":"YulLiteral","src":"1701:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1688:9:8","nodeType":"YulIdentifier","src":"1688:9:8"}]},{"cases":[{"body":{"nativeSrc":"1751:642:8","nodeType":"YulBlock","src":"1751:642:8","statements":[{"nativeSrc":"1765:35:8","nodeType":"YulVariableDeclaration","src":"1765:35:8","value":{"arguments":[{"name":"newLen","nativeSrc":"1784:6:8","nodeType":"YulIdentifier","src":"1784:6:8"},{"arguments":[{"kind":"number","nativeSrc":"1796:2:8","nodeType":"YulLiteral","src":"1796:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1792:3:8","nodeType":"YulIdentifier","src":"1792:3:8"},"nativeSrc":"1792:7:8","nodeType":"YulFunctionCall","src":"1792:7:8"}],"functionName":{"name":"and","nativeSrc":"1780:3:8","nodeType":"YulIdentifier","src":"1780:3:8"},"nativeSrc":"1780:20:8","nodeType":"YulFunctionCall","src":"1780:20:8"},"variables":[{"name":"loopEnd","nativeSrc":"1769:7:8","nodeType":"YulTypedName","src":"1769:7:8","type":""}]},{"nativeSrc":"1813:49:8","nodeType":"YulVariableDeclaration","src":"1813:49:8","value":{"arguments":[{"name":"slot","nativeSrc":"1857:4:8","nodeType":"YulIdentifier","src":"1857:4:8"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"1827:29:8","nodeType":"YulIdentifier","src":"1827:29:8"},"nativeSrc":"1827:35:8","nodeType":"YulFunctionCall","src":"1827:35:8"},"variables":[{"name":"dstPtr","nativeSrc":"1817:6:8","nodeType":"YulTypedName","src":"1817:6:8","type":""}]},{"nativeSrc":"1875:10:8","nodeType":"YulVariableDeclaration","src":"1875:10:8","value":{"kind":"number","nativeSrc":"1884:1:8","nodeType":"YulLiteral","src":"1884:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1879:1:8","nodeType":"YulTypedName","src":"1879:1:8","type":""}]},{"body":{"nativeSrc":"1955:165:8","nodeType":"YulBlock","src":"1955:165:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"1980:6:8","nodeType":"YulIdentifier","src":"1980:6:8"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1998:3:8","nodeType":"YulIdentifier","src":"1998:3:8"},{"name":"srcOffset","nativeSrc":"2003:9:8","nodeType":"YulIdentifier","src":"2003:9:8"}],"functionName":{"name":"add","nativeSrc":"1994:3:8","nodeType":"YulIdentifier","src":"1994:3:8"},"nativeSrc":"1994:19:8","nodeType":"YulFunctionCall","src":"1994:19:8"}],"functionName":{"name":"mload","nativeSrc":"1988:5:8","nodeType":"YulIdentifier","src":"1988:5:8"},"nativeSrc":"1988:26:8","nodeType":"YulFunctionCall","src":"1988:26:8"}],"functionName":{"name":"sstore","nativeSrc":"1973:6:8","nodeType":"YulIdentifier","src":"1973:6:8"},"nativeSrc":"1973:42:8","nodeType":"YulFunctionCall","src":"1973:42:8"},"nativeSrc":"1973:42:8","nodeType":"YulExpressionStatement","src":"1973:42:8"},{"nativeSrc":"2032:24:8","nodeType":"YulAssignment","src":"2032:24:8","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2046:6:8","nodeType":"YulIdentifier","src":"2046:6:8"},{"kind":"number","nativeSrc":"2054:1:8","nodeType":"YulLiteral","src":"2054:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2042:3:8","nodeType":"YulIdentifier","src":"2042:3:8"},"nativeSrc":"2042:14:8","nodeType":"YulFunctionCall","src":"2042:14:8"},"variableNames":[{"name":"dstPtr","nativeSrc":"2032:6:8","nodeType":"YulIdentifier","src":"2032:6:8"}]},{"nativeSrc":"2073:33:8","nodeType":"YulAssignment","src":"2073:33:8","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2090:9:8","nodeType":"YulIdentifier","src":"2090:9:8"},{"kind":"number","nativeSrc":"2101:4:8","nodeType":"YulLiteral","src":"2101:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2086:3:8","nodeType":"YulIdentifier","src":"2086:3:8"},"nativeSrc":"2086:20:8","nodeType":"YulFunctionCall","src":"2086:20:8"},"variableNames":[{"name":"srcOffset","nativeSrc":"2073:9:8","nodeType":"YulIdentifier","src":"2073:9:8"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1909:1:8","nodeType":"YulIdentifier","src":"1909:1:8"},{"name":"loopEnd","nativeSrc":"1912:7:8","nodeType":"YulIdentifier","src":"1912:7:8"}],"functionName":{"name":"lt","nativeSrc":"1906:2:8","nodeType":"YulIdentifier","src":"1906:2:8"},"nativeSrc":"1906:14:8","nodeType":"YulFunctionCall","src":"1906:14:8"},"nativeSrc":"1898:222:8","nodeType":"YulForLoop","post":{"nativeSrc":"1921:21:8","nodeType":"YulBlock","src":"1921:21:8","statements":[{"nativeSrc":"1923:17:8","nodeType":"YulAssignment","src":"1923:17:8","value":{"arguments":[{"name":"i","nativeSrc":"1932:1:8","nodeType":"YulIdentifier","src":"1932:1:8"},{"kind":"number","nativeSrc":"1935:4:8","nodeType":"YulLiteral","src":"1935:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1928:3:8","nodeType":"YulIdentifier","src":"1928:3:8"},"nativeSrc":"1928:12:8","nodeType":"YulFunctionCall","src":"1928:12:8"},"variableNames":[{"name":"i","nativeSrc":"1923:1:8","nodeType":"YulIdentifier","src":"1923:1:8"}]}]},"pre":{"nativeSrc":"1902:3:8","nodeType":"YulBlock","src":"1902:3:8","statements":[]},"src":"1898:222:8"},{"body":{"nativeSrc":"2168:166:8","nodeType":"YulBlock","src":"2168:166:8","statements":[{"nativeSrc":"2186:43:8","nodeType":"YulVariableDeclaration","src":"2186:43:8","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2213:3:8","nodeType":"YulIdentifier","src":"2213:3:8"},{"name":"srcOffset","nativeSrc":"2218:9:8","nodeType":"YulIdentifier","src":"2218:9:8"}],"functionName":{"name":"add","nativeSrc":"2209:3:8","nodeType":"YulIdentifier","src":"2209:3:8"},"nativeSrc":"2209:19:8","nodeType":"YulFunctionCall","src":"2209:19:8"}],"functionName":{"name":"mload","nativeSrc":"2203:5:8","nodeType":"YulIdentifier","src":"2203:5:8"},"nativeSrc":"2203:26:8","nodeType":"YulFunctionCall","src":"2203:26:8"},"variables":[{"name":"lastValue","nativeSrc":"2190:9:8","nodeType":"YulTypedName","src":"2190:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2253:6:8","nodeType":"YulIdentifier","src":"2253:6:8"},{"arguments":[{"name":"lastValue","nativeSrc":"2265:9:8","nodeType":"YulIdentifier","src":"2265:9:8"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2292:1:8","nodeType":"YulLiteral","src":"2292:1:8","type":"","value":"3"},{"name":"newLen","nativeSrc":"2295:6:8","nodeType":"YulIdentifier","src":"2295:6:8"}],"functionName":{"name":"shl","nativeSrc":"2288:3:8","nodeType":"YulIdentifier","src":"2288:3:8"},"nativeSrc":"2288:14:8","nodeType":"YulFunctionCall","src":"2288:14:8"},{"kind":"number","nativeSrc":"2304:3:8","nodeType":"YulLiteral","src":"2304:3:8","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2284:3:8","nodeType":"YulIdentifier","src":"2284:3:8"},"nativeSrc":"2284:24:8","nodeType":"YulFunctionCall","src":"2284:24:8"},{"arguments":[{"kind":"number","nativeSrc":"2314:1:8","nodeType":"YulLiteral","src":"2314:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2310:3:8","nodeType":"YulIdentifier","src":"2310:3:8"},"nativeSrc":"2310:6:8","nodeType":"YulFunctionCall","src":"2310:6:8"}],"functionName":{"name":"shr","nativeSrc":"2280:3:8","nodeType":"YulIdentifier","src":"2280:3:8"},"nativeSrc":"2280:37:8","nodeType":"YulFunctionCall","src":"2280:37:8"}],"functionName":{"name":"not","nativeSrc":"2276:3:8","nodeType":"YulIdentifier","src":"2276:3:8"},"nativeSrc":"2276:42:8","nodeType":"YulFunctionCall","src":"2276:42:8"}],"functionName":{"name":"and","nativeSrc":"2261:3:8","nodeType":"YulIdentifier","src":"2261:3:8"},"nativeSrc":"2261:58:8","nodeType":"YulFunctionCall","src":"2261:58:8"}],"functionName":{"name":"sstore","nativeSrc":"2246:6:8","nodeType":"YulIdentifier","src":"2246:6:8"},"nativeSrc":"2246:74:8","nodeType":"YulFunctionCall","src":"2246:74:8"},"nativeSrc":"2246:74:8","nodeType":"YulExpressionStatement","src":"2246:74:8"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2139:7:8","nodeType":"YulIdentifier","src":"2139:7:8"},{"name":"newLen","nativeSrc":"2148:6:8","nodeType":"YulIdentifier","src":"2148:6:8"}],"functionName":{"name":"lt","nativeSrc":"2136:2:8","nodeType":"YulIdentifier","src":"2136:2:8"},"nativeSrc":"2136:19:8","nodeType":"YulFunctionCall","src":"2136:19:8"},"nativeSrc":"2133:201:8","nodeType":"YulIf","src":"2133:201:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2354:4:8","nodeType":"YulIdentifier","src":"2354:4:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2368:1:8","nodeType":"YulLiteral","src":"2368:1:8","type":"","value":"1"},{"name":"newLen","nativeSrc":"2371:6:8","nodeType":"YulIdentifier","src":"2371:6:8"}],"functionName":{"name":"shl","nativeSrc":"2364:3:8","nodeType":"YulIdentifier","src":"2364:3:8"},"nativeSrc":"2364:14:8","nodeType":"YulFunctionCall","src":"2364:14:8"},{"kind":"number","nativeSrc":"2380:1:8","nodeType":"YulLiteral","src":"2380:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2360:3:8","nodeType":"YulIdentifier","src":"2360:3:8"},"nativeSrc":"2360:22:8","nodeType":"YulFunctionCall","src":"2360:22:8"}],"functionName":{"name":"sstore","nativeSrc":"2347:6:8","nodeType":"YulIdentifier","src":"2347:6:8"},"nativeSrc":"2347:36:8","nodeType":"YulFunctionCall","src":"2347:36:8"},"nativeSrc":"2347:36:8","nodeType":"YulExpressionStatement","src":"2347:36:8"}]},"nativeSrc":"1744:649:8","nodeType":"YulCase","src":"1744:649:8","value":{"kind":"number","nativeSrc":"1749:1:8","nodeType":"YulLiteral","src":"1749:1:8","type":"","value":"1"}},{"body":{"nativeSrc":"2410:234:8","nodeType":"YulBlock","src":"2410:234:8","statements":[{"nativeSrc":"2424:14:8","nodeType":"YulVariableDeclaration","src":"2424:14:8","value":{"kind":"number","nativeSrc":"2437:1:8","nodeType":"YulLiteral","src":"2437:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2428:5:8","nodeType":"YulTypedName","src":"2428:5:8","type":""}]},{"body":{"nativeSrc":"2473:67:8","nodeType":"YulBlock","src":"2473:67:8","statements":[{"nativeSrc":"2491:35:8","nodeType":"YulAssignment","src":"2491:35:8","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2510:3:8","nodeType":"YulIdentifier","src":"2510:3:8"},{"name":"srcOffset","nativeSrc":"2515:9:8","nodeType":"YulIdentifier","src":"2515:9:8"}],"functionName":{"name":"add","nativeSrc":"2506:3:8","nodeType":"YulIdentifier","src":"2506:3:8"},"nativeSrc":"2506:19:8","nodeType":"YulFunctionCall","src":"2506:19:8"}],"functionName":{"name":"mload","nativeSrc":"2500:5:8","nodeType":"YulIdentifier","src":"2500:5:8"},"nativeSrc":"2500:26:8","nodeType":"YulFunctionCall","src":"2500:26:8"},"variableNames":[{"name":"value","nativeSrc":"2491:5:8","nodeType":"YulIdentifier","src":"2491:5:8"}]}]},"condition":{"name":"newLen","nativeSrc":"2454:6:8","nodeType":"YulIdentifier","src":"2454:6:8"},"nativeSrc":"2451:89:8","nodeType":"YulIf","src":"2451:89:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2560:4:8","nodeType":"YulIdentifier","src":"2560:4:8"},{"arguments":[{"name":"value","nativeSrc":"2619:5:8","nodeType":"YulIdentifier","src":"2619:5:8"},{"name":"newLen","nativeSrc":"2626:6:8","nodeType":"YulIdentifier","src":"2626:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2566:52:8","nodeType":"YulIdentifier","src":"2566:52:8"},"nativeSrc":"2566:67:8","nodeType":"YulFunctionCall","src":"2566:67:8"}],"functionName":{"name":"sstore","nativeSrc":"2553:6:8","nodeType":"YulIdentifier","src":"2553:6:8"},"nativeSrc":"2553:81:8","nodeType":"YulFunctionCall","src":"2553:81:8"},"nativeSrc":"2553:81:8","nodeType":"YulExpressionStatement","src":"2553:81:8"}]},"nativeSrc":"2402:242:8","nodeType":"YulCase","src":"2402:242:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"1724:6:8","nodeType":"YulIdentifier","src":"1724:6:8"},{"kind":"number","nativeSrc":"1732:2:8","nodeType":"YulLiteral","src":"1732:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1721:2:8","nodeType":"YulIdentifier","src":"1721:2:8"},"nativeSrc":"1721:14:8","nodeType":"YulFunctionCall","src":"1721:14:8"},"nativeSrc":"1714:930:8","nodeType":"YulSwitch","src":"1714:930:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1351:1299:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1432:4:8","nodeType":"YulTypedName","src":"1432:4:8","type":""},{"name":"src","nativeSrc":"1438:3:8","nodeType":"YulTypedName","src":"1438:3:8","type":""}],"src":"1351:1299:8"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b506040518060400160405280600981526020016845524332304d6f636b60b81b8152506040518060400160405280600681526020016545524332304d60d01b8152508160039081610061919061011a565b50600461006e828261011a565b50506012608052506101d8565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a557607f821691505b6020821081036100c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011557806000526020600020601f840160051c810160208510156100f25750805b601f840160051c820191505b8181101561011257600081556001016100fe565b50505b505050565b81516001600160401b038111156101335761013361007b565b610147816101418454610091565b846100cb565b6020601f82116001811461017b57600083156101635750848201515b600019600385901b1c1916600184901b178455610112565b600084815260208120601f198516915b828110156101ab578785015182556020948501946001909201910161018b565b50848210156101c95786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6080516108066101f3600039600061011b01526108066000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461014557806370a082311461015a57806395d89b41146101835780639dc29fac1461018b578063a9059cbb1461019e578063dd62ed3e146101b157600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101ea565b6040516100c3919061064f565b60405180910390f35b6100df6100da3660046106b9565b61027c565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106e3565b610296565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6101586101533660046106b9565b6102ba565b005b6100f3610168366004610720565b6001600160a01b031660009081526020819052604090205490565b6100b66102c8565b6101586101993660046106b9565b6102d7565b6100df6101ac3660046106b9565b6102e1565b6100f36101bf366004610742565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f990610775565b80601f016020809104026020016040519081016040528092919081815260200182805461022590610775565b80156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b5050505050905090565b60003361028a8185856102ef565b60019150505b92915050565b6000336102a4858285610301565b6102af858585610385565b506001949350505050565b6102c482826103e4565b5050565b6060600480546101f990610775565b6102c4828261041a565b60003361028a818585610385565b6102fc8383836001610450565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561037f578181101561037057604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61037f84848484036000610450565b50505050565b6001600160a01b0383166103af57604051634b637e8f60e11b815260006004820152602401610367565b6001600160a01b0382166103d95760405163ec442f0560e01b815260006004820152602401610367565b6102fc838383610525565b6001600160a01b03821661040e5760405163ec442f0560e01b815260006004820152602401610367565b6102c460008383610525565b6001600160a01b03821661044457604051634b637e8f60e11b815260006004820152602401610367565b6102c482600083610525565b6001600160a01b03841661047a5760405163e602df0560e01b815260006004820152602401610367565b6001600160a01b0383166104a457604051634a1406b160e11b815260006004820152602401610367565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561037f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161051791815260200190565b60405180910390a350505050565b6001600160a01b03831661055057806002600082825461054591906107af565b909155506105c29050565b6001600160a01b038316600090815260208190526040902054818110156105a35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610367565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105de576002805482900390556105fd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161064291815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561067d5760208186018101516040868401015201610660565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106b457600080fd5b919050565b600080604083850312156106cc57600080fd5b6106d58361069d565b946020939093013593505050565b6000806000606084860312156106f857600080fd5b6107018461069d565b925061070f6020850161069d565b929592945050506040919091013590565b60006020828403121561073257600080fd5b61073b8261069d565b9392505050565b6000806040838503121561075557600080fd5b61075e8361069d565b915061076c6020840161069d565b90509250929050565b600181811c9082168061078957607f821691505b6020821081036107a957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029057634e487b7160e01b600052601160045260246000fdfea264697066735822122096d78c7010d6dc35c8766493b6e9fdec897b092e25d71fa4442084c08d34dca064736f6c634300081b0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x45524332304D6F636B PUSH1 0xB8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x45524332304D PUSH1 0xD0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x11A JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x6E DUP3 DUP3 PUSH2 0x11A JUMP JUMPDEST POP POP PUSH1 0x12 PUSH1 0x80 MSTORE POP PUSH2 0x1D8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x115 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xF2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x133 JUMPI PUSH2 0x133 PUSH2 0x7B JUMP JUMPDEST PUSH2 0x147 DUP2 PUSH2 0x141 DUP5 SLOAD PUSH2 0x91 JUMP JUMPDEST DUP5 PUSH2 0xCB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x17B JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x163 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x112 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1AB JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x18B JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1C9 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x806 PUSH2 0x1F3 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x11B ADD MSTORE PUSH2 0x806 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F9 SWAP1 PUSH2 0x775 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x225 SWAP1 PUSH2 0x775 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x272 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x247 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x272 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x255 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x28A DUP2 DUP6 DUP6 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A4 DUP6 DUP3 DUP6 PUSH2 0x301 JUMP JUMPDEST PUSH2 0x2AF DUP6 DUP6 DUP6 PUSH2 0x385 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2C4 DUP3 DUP3 PUSH2 0x3E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F9 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x2C4 DUP3 DUP3 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x28A DUP2 DUP6 DUP6 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x2FC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x450 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x37F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37F DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x450 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2FC DUP4 DUP4 DUP4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2C4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2C4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x37F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x517 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x550 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5C2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5DE JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x660 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP4 PUSH2 0x69D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x701 DUP5 PUSH2 0x69D JUMP JUMPDEST SWAP3 POP PUSH2 0x70F PUSH1 0x20 DUP6 ADD PUSH2 0x69D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73B DUP3 PUSH2 0x69D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75E DUP4 PUSH2 0x69D JUMP JUMPDEST SWAP2 POP PUSH2 0x76C PUSH1 0x20 DUP5 ADD PUSH2 0x69D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x789 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x290 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xD7 DUP13 PUSH17 0x10D6DC35C8766493B6E9FDEC897B092E25 0xD7 0x1F LOG4 PREVRANDAO KECCAK256 DUP5 0xC0 DUP14 CALLVALUE 0xDC LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"121:466:6:-:0;;;201:80;;;;;;;;;;1582:113:2;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;272:2:6::1;254:20;::::0;-1:-1:-1;121:466:6;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:8;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:8;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:8;;;2500:26;2451:89;-1:-1:-1;;1308:1:8;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:8;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:8;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:8;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:8:o;:::-;121:466:6;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":751,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1104,"id":750,"parameterSlots":4,"returnSlots":0},"@_burn_672":{"entryPoint":1050,"id":672,"parameterSlots":2,"returnSlots":0},"@_mint_639":{"entryPoint":996,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_915":{"entryPoint":null,"id":915,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":769,"id":798,"parameterSlots":3,"returnSlots":0},"@_transfer_529":{"entryPoint":901,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":1317,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":null,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":636,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":null,"id":385,"parameterSlots":1,"returnSlots":1},"@burn_987":{"entryPoint":727,"id":987,"parameterSlots":2,"returnSlots":0},"@decimals_961":{"entryPoint":null,"id":961,"parameterSlots":0,"returnSlots":1},"@mint_974":{"entryPoint":698,"id":974,"parameterSlots":2,"returnSlots":0},"@name_345":{"entryPoint":490,"id":345,"parameterSlots":0,"returnSlots":1},"@symbol_354":{"entryPoint":712,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":null,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":662,"id":482,"parameterSlots":3,"returnSlots":1},"@transfer_409":{"entryPoint":737,"id":409,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1693,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1824,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1858,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1763,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1721,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1967,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1909,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:3594:8","nodeType":"YulBlock","src":"0:3594:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"135:406:8","nodeType":"YulBlock","src":"135:406:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"152:9:8","nodeType":"YulIdentifier","src":"152:9:8"},{"kind":"number","nativeSrc":"163:2:8","nodeType":"YulLiteral","src":"163:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"145:6:8","nodeType":"YulIdentifier","src":"145:6:8"},"nativeSrc":"145:21:8","nodeType":"YulFunctionCall","src":"145:21:8"},"nativeSrc":"145:21:8","nodeType":"YulExpressionStatement","src":"145:21:8"},{"nativeSrc":"175:27:8","nodeType":"YulVariableDeclaration","src":"175:27:8","value":{"arguments":[{"name":"value0","nativeSrc":"195:6:8","nodeType":"YulIdentifier","src":"195:6:8"}],"functionName":{"name":"mload","nativeSrc":"189:5:8","nodeType":"YulIdentifier","src":"189:5:8"},"nativeSrc":"189:13:8","nodeType":"YulFunctionCall","src":"189:13:8"},"variables":[{"name":"length","nativeSrc":"179:6:8","nodeType":"YulTypedName","src":"179:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"222:9:8","nodeType":"YulIdentifier","src":"222:9:8"},{"kind":"number","nativeSrc":"233:2:8","nodeType":"YulLiteral","src":"233:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"218:3:8","nodeType":"YulIdentifier","src":"218:3:8"},"nativeSrc":"218:18:8","nodeType":"YulFunctionCall","src":"218:18:8"},{"name":"length","nativeSrc":"238:6:8","nodeType":"YulIdentifier","src":"238:6:8"}],"functionName":{"name":"mstore","nativeSrc":"211:6:8","nodeType":"YulIdentifier","src":"211:6:8"},"nativeSrc":"211:34:8","nodeType":"YulFunctionCall","src":"211:34:8"},"nativeSrc":"211:34:8","nodeType":"YulExpressionStatement","src":"211:34:8"},{"nativeSrc":"254:10:8","nodeType":"YulVariableDeclaration","src":"254:10:8","value":{"kind":"number","nativeSrc":"263:1:8","nodeType":"YulLiteral","src":"263:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"258:1:8","nodeType":"YulTypedName","src":"258:1:8","type":""}]},{"body":{"nativeSrc":"323:90:8","nodeType":"YulBlock","src":"323:90:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"352:9:8","nodeType":"YulIdentifier","src":"352:9:8"},{"name":"i","nativeSrc":"363:1:8","nodeType":"YulIdentifier","src":"363:1:8"}],"functionName":{"name":"add","nativeSrc":"348:3:8","nodeType":"YulIdentifier","src":"348:3:8"},"nativeSrc":"348:17:8","nodeType":"YulFunctionCall","src":"348:17:8"},{"kind":"number","nativeSrc":"367:2:8","nodeType":"YulLiteral","src":"367:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"344:3:8","nodeType":"YulIdentifier","src":"344:3:8"},"nativeSrc":"344:26:8","nodeType":"YulFunctionCall","src":"344:26:8"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"386:6:8","nodeType":"YulIdentifier","src":"386:6:8"},{"name":"i","nativeSrc":"394:1:8","nodeType":"YulIdentifier","src":"394:1:8"}],"functionName":{"name":"add","nativeSrc":"382:3:8","nodeType":"YulIdentifier","src":"382:3:8"},"nativeSrc":"382:14:8","nodeType":"YulFunctionCall","src":"382:14:8"},{"kind":"number","nativeSrc":"398:2:8","nodeType":"YulLiteral","src":"398:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"378:3:8","nodeType":"YulIdentifier","src":"378:3:8"},"nativeSrc":"378:23:8","nodeType":"YulFunctionCall","src":"378:23:8"}],"functionName":{"name":"mload","nativeSrc":"372:5:8","nodeType":"YulIdentifier","src":"372:5:8"},"nativeSrc":"372:30:8","nodeType":"YulFunctionCall","src":"372:30:8"}],"functionName":{"name":"mstore","nativeSrc":"337:6:8","nodeType":"YulIdentifier","src":"337:6:8"},"nativeSrc":"337:66:8","nodeType":"YulFunctionCall","src":"337:66:8"},"nativeSrc":"337:66:8","nodeType":"YulExpressionStatement","src":"337:66:8"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"284:1:8","nodeType":"YulIdentifier","src":"284:1:8"},{"name":"length","nativeSrc":"287:6:8","nodeType":"YulIdentifier","src":"287:6:8"}],"functionName":{"name":"lt","nativeSrc":"281:2:8","nodeType":"YulIdentifier","src":"281:2:8"},"nativeSrc":"281:13:8","nodeType":"YulFunctionCall","src":"281:13:8"},"nativeSrc":"273:140:8","nodeType":"YulForLoop","post":{"nativeSrc":"295:19:8","nodeType":"YulBlock","src":"295:19:8","statements":[{"nativeSrc":"297:15:8","nodeType":"YulAssignment","src":"297:15:8","value":{"arguments":[{"name":"i","nativeSrc":"306:1:8","nodeType":"YulIdentifier","src":"306:1:8"},{"kind":"number","nativeSrc":"309:2:8","nodeType":"YulLiteral","src":"309:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"302:3:8","nodeType":"YulIdentifier","src":"302:3:8"},"nativeSrc":"302:10:8","nodeType":"YulFunctionCall","src":"302:10:8"},"variableNames":[{"name":"i","nativeSrc":"297:1:8","nodeType":"YulIdentifier","src":"297:1:8"}]}]},"pre":{"nativeSrc":"277:3:8","nodeType":"YulBlock","src":"277:3:8","statements":[]},"src":"273:140:8"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"437:9:8","nodeType":"YulIdentifier","src":"437:9:8"},{"name":"length","nativeSrc":"448:6:8","nodeType":"YulIdentifier","src":"448:6:8"}],"functionName":{"name":"add","nativeSrc":"433:3:8","nodeType":"YulIdentifier","src":"433:3:8"},"nativeSrc":"433:22:8","nodeType":"YulFunctionCall","src":"433:22:8"},{"kind":"number","nativeSrc":"457:2:8","nodeType":"YulLiteral","src":"457:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"429:3:8","nodeType":"YulIdentifier","src":"429:3:8"},"nativeSrc":"429:31:8","nodeType":"YulFunctionCall","src":"429:31:8"},{"kind":"number","nativeSrc":"462:1:8","nodeType":"YulLiteral","src":"462:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"422:6:8","nodeType":"YulIdentifier","src":"422:6:8"},"nativeSrc":"422:42:8","nodeType":"YulFunctionCall","src":"422:42:8"},"nativeSrc":"422:42:8","nodeType":"YulExpressionStatement","src":"422:42:8"},{"nativeSrc":"473:62:8","nodeType":"YulAssignment","src":"473:62:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"489:9:8","nodeType":"YulIdentifier","src":"489:9:8"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"508:6:8","nodeType":"YulIdentifier","src":"508:6:8"},{"kind":"number","nativeSrc":"516:2:8","nodeType":"YulLiteral","src":"516:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"504:3:8","nodeType":"YulIdentifier","src":"504:3:8"},"nativeSrc":"504:15:8","nodeType":"YulFunctionCall","src":"504:15:8"},{"arguments":[{"kind":"number","nativeSrc":"525:2:8","nodeType":"YulLiteral","src":"525:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"521:3:8","nodeType":"YulIdentifier","src":"521:3:8"},"nativeSrc":"521:7:8","nodeType":"YulFunctionCall","src":"521:7:8"}],"functionName":{"name":"and","nativeSrc":"500:3:8","nodeType":"YulIdentifier","src":"500:3:8"},"nativeSrc":"500:29:8","nodeType":"YulFunctionCall","src":"500:29:8"}],"functionName":{"name":"add","nativeSrc":"485:3:8","nodeType":"YulIdentifier","src":"485:3:8"},"nativeSrc":"485:45:8","nodeType":"YulFunctionCall","src":"485:45:8"},{"kind":"number","nativeSrc":"532:2:8","nodeType":"YulLiteral","src":"532:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"481:3:8","nodeType":"YulIdentifier","src":"481:3:8"},"nativeSrc":"481:54:8","nodeType":"YulFunctionCall","src":"481:54:8"},"variableNames":[{"name":"tail","nativeSrc":"473:4:8","nodeType":"YulIdentifier","src":"473:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:527:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:8","nodeType":"YulTypedName","src":"104:9:8","type":""},{"name":"value0","nativeSrc":"115:6:8","nodeType":"YulTypedName","src":"115:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:8","nodeType":"YulTypedName","src":"126:4:8","type":""}],"src":"14:527:8"},{"body":{"nativeSrc":"595:124:8","nodeType":"YulBlock","src":"595:124:8","statements":[{"nativeSrc":"605:29:8","nodeType":"YulAssignment","src":"605:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"627:6:8","nodeType":"YulIdentifier","src":"627:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"614:12:8","nodeType":"YulIdentifier","src":"614:12:8"},"nativeSrc":"614:20:8","nodeType":"YulFunctionCall","src":"614:20:8"},"variableNames":[{"name":"value","nativeSrc":"605:5:8","nodeType":"YulIdentifier","src":"605:5:8"}]},{"body":{"nativeSrc":"697:16:8","nodeType":"YulBlock","src":"697:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"706:1:8","nodeType":"YulLiteral","src":"706:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"709:1:8","nodeType":"YulLiteral","src":"709:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"699:6:8","nodeType":"YulIdentifier","src":"699:6:8"},"nativeSrc":"699:12:8","nodeType":"YulFunctionCall","src":"699:12:8"},"nativeSrc":"699:12:8","nodeType":"YulExpressionStatement","src":"699:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:8","nodeType":"YulIdentifier","src":"656:5:8"},{"arguments":[{"name":"value","nativeSrc":"667:5:8","nodeType":"YulIdentifier","src":"667:5:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"682:3:8","nodeType":"YulLiteral","src":"682:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"687:1:8","nodeType":"YulLiteral","src":"687:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"678:3:8","nodeType":"YulIdentifier","src":"678:3:8"},"nativeSrc":"678:11:8","nodeType":"YulFunctionCall","src":"678:11:8"},{"kind":"number","nativeSrc":"691:1:8","nodeType":"YulLiteral","src":"691:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"674:3:8","nodeType":"YulIdentifier","src":"674:3:8"},"nativeSrc":"674:19:8","nodeType":"YulFunctionCall","src":"674:19:8"}],"functionName":{"name":"and","nativeSrc":"663:3:8","nodeType":"YulIdentifier","src":"663:3:8"},"nativeSrc":"663:31:8","nodeType":"YulFunctionCall","src":"663:31:8"}],"functionName":{"name":"eq","nativeSrc":"653:2:8","nodeType":"YulIdentifier","src":"653:2:8"},"nativeSrc":"653:42:8","nodeType":"YulFunctionCall","src":"653:42:8"}],"functionName":{"name":"iszero","nativeSrc":"646:6:8","nodeType":"YulIdentifier","src":"646:6:8"},"nativeSrc":"646:50:8","nodeType":"YulFunctionCall","src":"646:50:8"},"nativeSrc":"643:70:8","nodeType":"YulIf","src":"643:70:8"}]},"name":"abi_decode_address","nativeSrc":"546:173:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"574:6:8","nodeType":"YulTypedName","src":"574:6:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"585:5:8","nodeType":"YulTypedName","src":"585:5:8","type":""}],"src":"546:173:8"},{"body":{"nativeSrc":"811:213:8","nodeType":"YulBlock","src":"811:213:8","statements":[{"body":{"nativeSrc":"857:16:8","nodeType":"YulBlock","src":"857:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"866:1:8","nodeType":"YulLiteral","src":"866:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"869:1:8","nodeType":"YulLiteral","src":"869:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"859:6:8","nodeType":"YulIdentifier","src":"859:6:8"},"nativeSrc":"859:12:8","nodeType":"YulFunctionCall","src":"859:12:8"},"nativeSrc":"859:12:8","nodeType":"YulExpressionStatement","src":"859:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"832:7:8","nodeType":"YulIdentifier","src":"832:7:8"},{"name":"headStart","nativeSrc":"841:9:8","nodeType":"YulIdentifier","src":"841:9:8"}],"functionName":{"name":"sub","nativeSrc":"828:3:8","nodeType":"YulIdentifier","src":"828:3:8"},"nativeSrc":"828:23:8","nodeType":"YulFunctionCall","src":"828:23:8"},{"kind":"number","nativeSrc":"853:2:8","nodeType":"YulLiteral","src":"853:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"824:3:8","nodeType":"YulIdentifier","src":"824:3:8"},"nativeSrc":"824:32:8","nodeType":"YulFunctionCall","src":"824:32:8"},"nativeSrc":"821:52:8","nodeType":"YulIf","src":"821:52:8"},{"nativeSrc":"882:39:8","nodeType":"YulAssignment","src":"882:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"911:9:8","nodeType":"YulIdentifier","src":"911:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"892:18:8","nodeType":"YulIdentifier","src":"892:18:8"},"nativeSrc":"892:29:8","nodeType":"YulFunctionCall","src":"892:29:8"},"variableNames":[{"name":"value0","nativeSrc":"882:6:8","nodeType":"YulIdentifier","src":"882:6:8"}]},{"nativeSrc":"930:14:8","nodeType":"YulVariableDeclaration","src":"930:14:8","value":{"kind":"number","nativeSrc":"943:1:8","nodeType":"YulLiteral","src":"943:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"934:5:8","nodeType":"YulTypedName","src":"934:5:8","type":""}]},{"nativeSrc":"953:41:8","nodeType":"YulAssignment","src":"953:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"979:9:8","nodeType":"YulIdentifier","src":"979:9:8"},{"kind":"number","nativeSrc":"990:2:8","nodeType":"YulLiteral","src":"990:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"975:3:8","nodeType":"YulIdentifier","src":"975:3:8"},"nativeSrc":"975:18:8","nodeType":"YulFunctionCall","src":"975:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"962:12:8","nodeType":"YulIdentifier","src":"962:12:8"},"nativeSrc":"962:32:8","nodeType":"YulFunctionCall","src":"962:32:8"},"variableNames":[{"name":"value","nativeSrc":"953:5:8","nodeType":"YulIdentifier","src":"953:5:8"}]},{"nativeSrc":"1003:15:8","nodeType":"YulAssignment","src":"1003:15:8","value":{"name":"value","nativeSrc":"1013:5:8","nodeType":"YulIdentifier","src":"1013:5:8"},"variableNames":[{"name":"value1","nativeSrc":"1003:6:8","nodeType":"YulIdentifier","src":"1003:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"724:300:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"769:9:8","nodeType":"YulTypedName","src":"769:9:8","type":""},{"name":"dataEnd","nativeSrc":"780:7:8","nodeType":"YulTypedName","src":"780:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"792:6:8","nodeType":"YulTypedName","src":"792:6:8","type":""},{"name":"value1","nativeSrc":"800:6:8","nodeType":"YulTypedName","src":"800:6:8","type":""}],"src":"724:300:8"},{"body":{"nativeSrc":"1124:92:8","nodeType":"YulBlock","src":"1124:92:8","statements":[{"nativeSrc":"1134:26:8","nodeType":"YulAssignment","src":"1134:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1146:9:8","nodeType":"YulIdentifier","src":"1146:9:8"},{"kind":"number","nativeSrc":"1157:2:8","nodeType":"YulLiteral","src":"1157:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1142:3:8","nodeType":"YulIdentifier","src":"1142:3:8"},"nativeSrc":"1142:18:8","nodeType":"YulFunctionCall","src":"1142:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1134:4:8","nodeType":"YulIdentifier","src":"1134:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1176:9:8","nodeType":"YulIdentifier","src":"1176:9:8"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1201:6:8","nodeType":"YulIdentifier","src":"1201:6:8"}],"functionName":{"name":"iszero","nativeSrc":"1194:6:8","nodeType":"YulIdentifier","src":"1194:6:8"},"nativeSrc":"1194:14:8","nodeType":"YulFunctionCall","src":"1194:14:8"}],"functionName":{"name":"iszero","nativeSrc":"1187:6:8","nodeType":"YulIdentifier","src":"1187:6:8"},"nativeSrc":"1187:22:8","nodeType":"YulFunctionCall","src":"1187:22:8"}],"functionName":{"name":"mstore","nativeSrc":"1169:6:8","nodeType":"YulIdentifier","src":"1169:6:8"},"nativeSrc":"1169:41:8","nodeType":"YulFunctionCall","src":"1169:41:8"},"nativeSrc":"1169:41:8","nodeType":"YulExpressionStatement","src":"1169:41:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1029:187:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1093:9:8","nodeType":"YulTypedName","src":"1093:9:8","type":""},{"name":"value0","nativeSrc":"1104:6:8","nodeType":"YulTypedName","src":"1104:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1115:4:8","nodeType":"YulTypedName","src":"1115:4:8","type":""}],"src":"1029:187:8"},{"body":{"nativeSrc":"1322:76:8","nodeType":"YulBlock","src":"1322:76:8","statements":[{"nativeSrc":"1332:26:8","nodeType":"YulAssignment","src":"1332:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1344:9:8","nodeType":"YulIdentifier","src":"1344:9:8"},{"kind":"number","nativeSrc":"1355:2:8","nodeType":"YulLiteral","src":"1355:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1340:3:8","nodeType":"YulIdentifier","src":"1340:3:8"},"nativeSrc":"1340:18:8","nodeType":"YulFunctionCall","src":"1340:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1332:4:8","nodeType":"YulIdentifier","src":"1332:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1374:9:8","nodeType":"YulIdentifier","src":"1374:9:8"},{"name":"value0","nativeSrc":"1385:6:8","nodeType":"YulIdentifier","src":"1385:6:8"}],"functionName":{"name":"mstore","nativeSrc":"1367:6:8","nodeType":"YulIdentifier","src":"1367:6:8"},"nativeSrc":"1367:25:8","nodeType":"YulFunctionCall","src":"1367:25:8"},"nativeSrc":"1367:25:8","nodeType":"YulExpressionStatement","src":"1367:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1221:177:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1291:9:8","nodeType":"YulTypedName","src":"1291:9:8","type":""},{"name":"value0","nativeSrc":"1302:6:8","nodeType":"YulTypedName","src":"1302:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1313:4:8","nodeType":"YulTypedName","src":"1313:4:8","type":""}],"src":"1221:177:8"},{"body":{"nativeSrc":"1507:270:8","nodeType":"YulBlock","src":"1507:270:8","statements":[{"body":{"nativeSrc":"1553:16:8","nodeType":"YulBlock","src":"1553:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1562:1:8","nodeType":"YulLiteral","src":"1562:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1565:1:8","nodeType":"YulLiteral","src":"1565:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1555:6:8","nodeType":"YulIdentifier","src":"1555:6:8"},"nativeSrc":"1555:12:8","nodeType":"YulFunctionCall","src":"1555:12:8"},"nativeSrc":"1555:12:8","nodeType":"YulExpressionStatement","src":"1555:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1528:7:8","nodeType":"YulIdentifier","src":"1528:7:8"},{"name":"headStart","nativeSrc":"1537:9:8","nodeType":"YulIdentifier","src":"1537:9:8"}],"functionName":{"name":"sub","nativeSrc":"1524:3:8","nodeType":"YulIdentifier","src":"1524:3:8"},"nativeSrc":"1524:23:8","nodeType":"YulFunctionCall","src":"1524:23:8"},{"kind":"number","nativeSrc":"1549:2:8","nodeType":"YulLiteral","src":"1549:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1520:3:8","nodeType":"YulIdentifier","src":"1520:3:8"},"nativeSrc":"1520:32:8","nodeType":"YulFunctionCall","src":"1520:32:8"},"nativeSrc":"1517:52:8","nodeType":"YulIf","src":"1517:52:8"},{"nativeSrc":"1578:39:8","nodeType":"YulAssignment","src":"1578:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1607:9:8","nodeType":"YulIdentifier","src":"1607:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1588:18:8","nodeType":"YulIdentifier","src":"1588:18:8"},"nativeSrc":"1588:29:8","nodeType":"YulFunctionCall","src":"1588:29:8"},"variableNames":[{"name":"value0","nativeSrc":"1578:6:8","nodeType":"YulIdentifier","src":"1578:6:8"}]},{"nativeSrc":"1626:48:8","nodeType":"YulAssignment","src":"1626:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1659:9:8","nodeType":"YulIdentifier","src":"1659:9:8"},{"kind":"number","nativeSrc":"1670:2:8","nodeType":"YulLiteral","src":"1670:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1655:3:8","nodeType":"YulIdentifier","src":"1655:3:8"},"nativeSrc":"1655:18:8","nodeType":"YulFunctionCall","src":"1655:18:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1636:18:8","nodeType":"YulIdentifier","src":"1636:18:8"},"nativeSrc":"1636:38:8","nodeType":"YulFunctionCall","src":"1636:38:8"},"variableNames":[{"name":"value1","nativeSrc":"1626:6:8","nodeType":"YulIdentifier","src":"1626:6:8"}]},{"nativeSrc":"1683:14:8","nodeType":"YulVariableDeclaration","src":"1683:14:8","value":{"kind":"number","nativeSrc":"1696:1:8","nodeType":"YulLiteral","src":"1696:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1687:5:8","nodeType":"YulTypedName","src":"1687:5:8","type":""}]},{"nativeSrc":"1706:41:8","nodeType":"YulAssignment","src":"1706:41:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1732:9:8","nodeType":"YulIdentifier","src":"1732:9:8"},{"kind":"number","nativeSrc":"1743:2:8","nodeType":"YulLiteral","src":"1743:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1728:3:8","nodeType":"YulIdentifier","src":"1728:3:8"},"nativeSrc":"1728:18:8","nodeType":"YulFunctionCall","src":"1728:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"1715:12:8","nodeType":"YulIdentifier","src":"1715:12:8"},"nativeSrc":"1715:32:8","nodeType":"YulFunctionCall","src":"1715:32:8"},"variableNames":[{"name":"value","nativeSrc":"1706:5:8","nodeType":"YulIdentifier","src":"1706:5:8"}]},{"nativeSrc":"1756:15:8","nodeType":"YulAssignment","src":"1756:15:8","value":{"name":"value","nativeSrc":"1766:5:8","nodeType":"YulIdentifier","src":"1766:5:8"},"variableNames":[{"name":"value2","nativeSrc":"1756:6:8","nodeType":"YulIdentifier","src":"1756:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1403:374:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1457:9:8","nodeType":"YulTypedName","src":"1457:9:8","type":""},{"name":"dataEnd","nativeSrc":"1468:7:8","nodeType":"YulTypedName","src":"1468:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1480:6:8","nodeType":"YulTypedName","src":"1480:6:8","type":""},{"name":"value1","nativeSrc":"1488:6:8","nodeType":"YulTypedName","src":"1488:6:8","type":""},{"name":"value2","nativeSrc":"1496:6:8","nodeType":"YulTypedName","src":"1496:6:8","type":""}],"src":"1403:374:8"},{"body":{"nativeSrc":"1879:87:8","nodeType":"YulBlock","src":"1879:87:8","statements":[{"nativeSrc":"1889:26:8","nodeType":"YulAssignment","src":"1889:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1901:9:8","nodeType":"YulIdentifier","src":"1901:9:8"},{"kind":"number","nativeSrc":"1912:2:8","nodeType":"YulLiteral","src":"1912:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1897:3:8","nodeType":"YulIdentifier","src":"1897:3:8"},"nativeSrc":"1897:18:8","nodeType":"YulFunctionCall","src":"1897:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1889:4:8","nodeType":"YulIdentifier","src":"1889:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1931:9:8","nodeType":"YulIdentifier","src":"1931:9:8"},{"arguments":[{"name":"value0","nativeSrc":"1946:6:8","nodeType":"YulIdentifier","src":"1946:6:8"},{"kind":"number","nativeSrc":"1954:4:8","nodeType":"YulLiteral","src":"1954:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1942:3:8","nodeType":"YulIdentifier","src":"1942:3:8"},"nativeSrc":"1942:17:8","nodeType":"YulFunctionCall","src":"1942:17:8"}],"functionName":{"name":"mstore","nativeSrc":"1924:6:8","nodeType":"YulIdentifier","src":"1924:6:8"},"nativeSrc":"1924:36:8","nodeType":"YulFunctionCall","src":"1924:36:8"},"nativeSrc":"1924:36:8","nodeType":"YulExpressionStatement","src":"1924:36:8"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1782:184:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1848:9:8","nodeType":"YulTypedName","src":"1848:9:8","type":""},{"name":"value0","nativeSrc":"1859:6:8","nodeType":"YulTypedName","src":"1859:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1870:4:8","nodeType":"YulTypedName","src":"1870:4:8","type":""}],"src":"1782:184:8"},{"body":{"nativeSrc":"2041:116:8","nodeType":"YulBlock","src":"2041:116:8","statements":[{"body":{"nativeSrc":"2087:16:8","nodeType":"YulBlock","src":"2087:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2096:1:8","nodeType":"YulLiteral","src":"2096:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2099:1:8","nodeType":"YulLiteral","src":"2099:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2089:6:8","nodeType":"YulIdentifier","src":"2089:6:8"},"nativeSrc":"2089:12:8","nodeType":"YulFunctionCall","src":"2089:12:8"},"nativeSrc":"2089:12:8","nodeType":"YulExpressionStatement","src":"2089:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2062:7:8","nodeType":"YulIdentifier","src":"2062:7:8"},{"name":"headStart","nativeSrc":"2071:9:8","nodeType":"YulIdentifier","src":"2071:9:8"}],"functionName":{"name":"sub","nativeSrc":"2058:3:8","nodeType":"YulIdentifier","src":"2058:3:8"},"nativeSrc":"2058:23:8","nodeType":"YulFunctionCall","src":"2058:23:8"},{"kind":"number","nativeSrc":"2083:2:8","nodeType":"YulLiteral","src":"2083:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2054:3:8","nodeType":"YulIdentifier","src":"2054:3:8"},"nativeSrc":"2054:32:8","nodeType":"YulFunctionCall","src":"2054:32:8"},"nativeSrc":"2051:52:8","nodeType":"YulIf","src":"2051:52:8"},{"nativeSrc":"2112:39:8","nodeType":"YulAssignment","src":"2112:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2141:9:8","nodeType":"YulIdentifier","src":"2141:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2122:18:8","nodeType":"YulIdentifier","src":"2122:18:8"},"nativeSrc":"2122:29:8","nodeType":"YulFunctionCall","src":"2122:29:8"},"variableNames":[{"name":"value0","nativeSrc":"2112:6:8","nodeType":"YulIdentifier","src":"2112:6:8"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1971:186:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2007:9:8","nodeType":"YulTypedName","src":"2007:9:8","type":""},{"name":"dataEnd","nativeSrc":"2018:7:8","nodeType":"YulTypedName","src":"2018:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2030:6:8","nodeType":"YulTypedName","src":"2030:6:8","type":""}],"src":"1971:186:8"},{"body":{"nativeSrc":"2249:173:8","nodeType":"YulBlock","src":"2249:173:8","statements":[{"body":{"nativeSrc":"2295:16:8","nodeType":"YulBlock","src":"2295:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2304:1:8","nodeType":"YulLiteral","src":"2304:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2307:1:8","nodeType":"YulLiteral","src":"2307:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2297:6:8","nodeType":"YulIdentifier","src":"2297:6:8"},"nativeSrc":"2297:12:8","nodeType":"YulFunctionCall","src":"2297:12:8"},"nativeSrc":"2297:12:8","nodeType":"YulExpressionStatement","src":"2297:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2270:7:8","nodeType":"YulIdentifier","src":"2270:7:8"},{"name":"headStart","nativeSrc":"2279:9:8","nodeType":"YulIdentifier","src":"2279:9:8"}],"functionName":{"name":"sub","nativeSrc":"2266:3:8","nodeType":"YulIdentifier","src":"2266:3:8"},"nativeSrc":"2266:23:8","nodeType":"YulFunctionCall","src":"2266:23:8"},{"kind":"number","nativeSrc":"2291:2:8","nodeType":"YulLiteral","src":"2291:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2262:3:8","nodeType":"YulIdentifier","src":"2262:3:8"},"nativeSrc":"2262:32:8","nodeType":"YulFunctionCall","src":"2262:32:8"},"nativeSrc":"2259:52:8","nodeType":"YulIf","src":"2259:52:8"},{"nativeSrc":"2320:39:8","nodeType":"YulAssignment","src":"2320:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2349:9:8","nodeType":"YulIdentifier","src":"2349:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2330:18:8","nodeType":"YulIdentifier","src":"2330:18:8"},"nativeSrc":"2330:29:8","nodeType":"YulFunctionCall","src":"2330:29:8"},"variableNames":[{"name":"value0","nativeSrc":"2320:6:8","nodeType":"YulIdentifier","src":"2320:6:8"}]},{"nativeSrc":"2368:48:8","nodeType":"YulAssignment","src":"2368:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2401:9:8","nodeType":"YulIdentifier","src":"2401:9:8"},{"kind":"number","nativeSrc":"2412:2:8","nodeType":"YulLiteral","src":"2412:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2397:3:8","nodeType":"YulIdentifier","src":"2397:3:8"},"nativeSrc":"2397:18:8","nodeType":"YulFunctionCall","src":"2397:18:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2378:18:8","nodeType":"YulIdentifier","src":"2378:18:8"},"nativeSrc":"2378:38:8","nodeType":"YulFunctionCall","src":"2378:38:8"},"variableNames":[{"name":"value1","nativeSrc":"2368:6:8","nodeType":"YulIdentifier","src":"2368:6:8"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2162:260:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2207:9:8","nodeType":"YulTypedName","src":"2207:9:8","type":""},{"name":"dataEnd","nativeSrc":"2218:7:8","nodeType":"YulTypedName","src":"2218:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2230:6:8","nodeType":"YulTypedName","src":"2230:6:8","type":""},{"name":"value1","nativeSrc":"2238:6:8","nodeType":"YulTypedName","src":"2238:6:8","type":""}],"src":"2162:260:8"},{"body":{"nativeSrc":"2482:325:8","nodeType":"YulBlock","src":"2482:325:8","statements":[{"nativeSrc":"2492:22:8","nodeType":"YulAssignment","src":"2492:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"2506:1:8","nodeType":"YulLiteral","src":"2506:1:8","type":"","value":"1"},{"name":"data","nativeSrc":"2509:4:8","nodeType":"YulIdentifier","src":"2509:4:8"}],"functionName":{"name":"shr","nativeSrc":"2502:3:8","nodeType":"YulIdentifier","src":"2502:3:8"},"nativeSrc":"2502:12:8","nodeType":"YulFunctionCall","src":"2502:12:8"},"variableNames":[{"name":"length","nativeSrc":"2492:6:8","nodeType":"YulIdentifier","src":"2492:6:8"}]},{"nativeSrc":"2523:38:8","nodeType":"YulVariableDeclaration","src":"2523:38:8","value":{"arguments":[{"name":"data","nativeSrc":"2553:4:8","nodeType":"YulIdentifier","src":"2553:4:8"},{"kind":"number","nativeSrc":"2559:1:8","nodeType":"YulLiteral","src":"2559:1:8","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2549:3:8","nodeType":"YulIdentifier","src":"2549:3:8"},"nativeSrc":"2549:12:8","nodeType":"YulFunctionCall","src":"2549:12:8"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2527:18:8","nodeType":"YulTypedName","src":"2527:18:8","type":""}]},{"body":{"nativeSrc":"2600:31:8","nodeType":"YulBlock","src":"2600:31:8","statements":[{"nativeSrc":"2602:27:8","nodeType":"YulAssignment","src":"2602:27:8","value":{"arguments":[{"name":"length","nativeSrc":"2616:6:8","nodeType":"YulIdentifier","src":"2616:6:8"},{"kind":"number","nativeSrc":"2624:4:8","nodeType":"YulLiteral","src":"2624:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2612:3:8","nodeType":"YulIdentifier","src":"2612:3:8"},"nativeSrc":"2612:17:8","nodeType":"YulFunctionCall","src":"2612:17:8"},"variableNames":[{"name":"length","nativeSrc":"2602:6:8","nodeType":"YulIdentifier","src":"2602:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2580:18:8","nodeType":"YulIdentifier","src":"2580:18:8"}],"functionName":{"name":"iszero","nativeSrc":"2573:6:8","nodeType":"YulIdentifier","src":"2573:6:8"},"nativeSrc":"2573:26:8","nodeType":"YulFunctionCall","src":"2573:26:8"},"nativeSrc":"2570:61:8","nodeType":"YulIf","src":"2570:61:8"},{"body":{"nativeSrc":"2690:111:8","nodeType":"YulBlock","src":"2690:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2711:1:8","nodeType":"YulLiteral","src":"2711:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2718:3:8","nodeType":"YulLiteral","src":"2718:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"2723:10:8","nodeType":"YulLiteral","src":"2723:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2714:3:8","nodeType":"YulIdentifier","src":"2714:3:8"},"nativeSrc":"2714:20:8","nodeType":"YulFunctionCall","src":"2714:20:8"}],"functionName":{"name":"mstore","nativeSrc":"2704:6:8","nodeType":"YulIdentifier","src":"2704:6:8"},"nativeSrc":"2704:31:8","nodeType":"YulFunctionCall","src":"2704:31:8"},"nativeSrc":"2704:31:8","nodeType":"YulExpressionStatement","src":"2704:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2755:1:8","nodeType":"YulLiteral","src":"2755:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"2758:4:8","nodeType":"YulLiteral","src":"2758:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2748:6:8","nodeType":"YulIdentifier","src":"2748:6:8"},"nativeSrc":"2748:15:8","nodeType":"YulFunctionCall","src":"2748:15:8"},"nativeSrc":"2748:15:8","nodeType":"YulExpressionStatement","src":"2748:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2783:1:8","nodeType":"YulLiteral","src":"2783:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2786:4:8","nodeType":"YulLiteral","src":"2786:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2776:6:8","nodeType":"YulIdentifier","src":"2776:6:8"},"nativeSrc":"2776:15:8","nodeType":"YulFunctionCall","src":"2776:15:8"},"nativeSrc":"2776:15:8","nodeType":"YulExpressionStatement","src":"2776:15:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2646:18:8","nodeType":"YulIdentifier","src":"2646:18:8"},{"arguments":[{"name":"length","nativeSrc":"2669:6:8","nodeType":"YulIdentifier","src":"2669:6:8"},{"kind":"number","nativeSrc":"2677:2:8","nodeType":"YulLiteral","src":"2677:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2666:2:8","nodeType":"YulIdentifier","src":"2666:2:8"},"nativeSrc":"2666:14:8","nodeType":"YulFunctionCall","src":"2666:14:8"}],"functionName":{"name":"eq","nativeSrc":"2643:2:8","nodeType":"YulIdentifier","src":"2643:2:8"},"nativeSrc":"2643:38:8","nodeType":"YulFunctionCall","src":"2643:38:8"},"nativeSrc":"2640:161:8","nodeType":"YulIf","src":"2640:161:8"}]},"name":"extract_byte_array_length","nativeSrc":"2427:380:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2462:4:8","nodeType":"YulTypedName","src":"2462:4:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2471:6:8","nodeType":"YulTypedName","src":"2471:6:8","type":""}],"src":"2427:380:8"},{"body":{"nativeSrc":"2969:188:8","nodeType":"YulBlock","src":"2969:188:8","statements":[{"nativeSrc":"2979:26:8","nodeType":"YulAssignment","src":"2979:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2991:9:8","nodeType":"YulIdentifier","src":"2991:9:8"},{"kind":"number","nativeSrc":"3002:2:8","nodeType":"YulLiteral","src":"3002:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2987:3:8","nodeType":"YulIdentifier","src":"2987:3:8"},"nativeSrc":"2987:18:8","nodeType":"YulFunctionCall","src":"2987:18:8"},"variableNames":[{"name":"tail","nativeSrc":"2979:4:8","nodeType":"YulIdentifier","src":"2979:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3021:9:8","nodeType":"YulIdentifier","src":"3021:9:8"},{"arguments":[{"name":"value0","nativeSrc":"3036:6:8","nodeType":"YulIdentifier","src":"3036:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3052:3:8","nodeType":"YulLiteral","src":"3052:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"3057:1:8","nodeType":"YulLiteral","src":"3057:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3048:3:8","nodeType":"YulIdentifier","src":"3048:3:8"},"nativeSrc":"3048:11:8","nodeType":"YulFunctionCall","src":"3048:11:8"},{"kind":"number","nativeSrc":"3061:1:8","nodeType":"YulLiteral","src":"3061:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3044:3:8","nodeType":"YulIdentifier","src":"3044:3:8"},"nativeSrc":"3044:19:8","nodeType":"YulFunctionCall","src":"3044:19:8"}],"functionName":{"name":"and","nativeSrc":"3032:3:8","nodeType":"YulIdentifier","src":"3032:3:8"},"nativeSrc":"3032:32:8","nodeType":"YulFunctionCall","src":"3032:32:8"}],"functionName":{"name":"mstore","nativeSrc":"3014:6:8","nodeType":"YulIdentifier","src":"3014:6:8"},"nativeSrc":"3014:51:8","nodeType":"YulFunctionCall","src":"3014:51:8"},"nativeSrc":"3014:51:8","nodeType":"YulExpressionStatement","src":"3014:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3085:9:8","nodeType":"YulIdentifier","src":"3085:9:8"},{"kind":"number","nativeSrc":"3096:2:8","nodeType":"YulLiteral","src":"3096:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3081:3:8","nodeType":"YulIdentifier","src":"3081:3:8"},"nativeSrc":"3081:18:8","nodeType":"YulFunctionCall","src":"3081:18:8"},{"name":"value1","nativeSrc":"3101:6:8","nodeType":"YulIdentifier","src":"3101:6:8"}],"functionName":{"name":"mstore","nativeSrc":"3074:6:8","nodeType":"YulIdentifier","src":"3074:6:8"},"nativeSrc":"3074:34:8","nodeType":"YulFunctionCall","src":"3074:34:8"},"nativeSrc":"3074:34:8","nodeType":"YulExpressionStatement","src":"3074:34:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3128:9:8","nodeType":"YulIdentifier","src":"3128:9:8"},{"kind":"number","nativeSrc":"3139:2:8","nodeType":"YulLiteral","src":"3139:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3124:3:8","nodeType":"YulIdentifier","src":"3124:3:8"},"nativeSrc":"3124:18:8","nodeType":"YulFunctionCall","src":"3124:18:8"},{"name":"value2","nativeSrc":"3144:6:8","nodeType":"YulIdentifier","src":"3144:6:8"}],"functionName":{"name":"mstore","nativeSrc":"3117:6:8","nodeType":"YulIdentifier","src":"3117:6:8"},"nativeSrc":"3117:34:8","nodeType":"YulFunctionCall","src":"3117:34:8"},"nativeSrc":"3117:34:8","nodeType":"YulExpressionStatement","src":"3117:34:8"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"2812:345:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2922:9:8","nodeType":"YulTypedName","src":"2922:9:8","type":""},{"name":"value2","nativeSrc":"2933:6:8","nodeType":"YulTypedName","src":"2933:6:8","type":""},{"name":"value1","nativeSrc":"2941:6:8","nodeType":"YulTypedName","src":"2941:6:8","type":""},{"name":"value0","nativeSrc":"2949:6:8","nodeType":"YulTypedName","src":"2949:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2960:4:8","nodeType":"YulTypedName","src":"2960:4:8","type":""}],"src":"2812:345:8"},{"body":{"nativeSrc":"3263:102:8","nodeType":"YulBlock","src":"3263:102:8","statements":[{"nativeSrc":"3273:26:8","nodeType":"YulAssignment","src":"3273:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3285:9:8","nodeType":"YulIdentifier","src":"3285:9:8"},{"kind":"number","nativeSrc":"3296:2:8","nodeType":"YulLiteral","src":"3296:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3281:3:8","nodeType":"YulIdentifier","src":"3281:3:8"},"nativeSrc":"3281:18:8","nodeType":"YulFunctionCall","src":"3281:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3273:4:8","nodeType":"YulIdentifier","src":"3273:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3315:9:8","nodeType":"YulIdentifier","src":"3315:9:8"},{"arguments":[{"name":"value0","nativeSrc":"3330:6:8","nodeType":"YulIdentifier","src":"3330:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3346:3:8","nodeType":"YulLiteral","src":"3346:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"3351:1:8","nodeType":"YulLiteral","src":"3351:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3342:3:8","nodeType":"YulIdentifier","src":"3342:3:8"},"nativeSrc":"3342:11:8","nodeType":"YulFunctionCall","src":"3342:11:8"},{"kind":"number","nativeSrc":"3355:1:8","nodeType":"YulLiteral","src":"3355:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3338:3:8","nodeType":"YulIdentifier","src":"3338:3:8"},"nativeSrc":"3338:19:8","nodeType":"YulFunctionCall","src":"3338:19:8"}],"functionName":{"name":"and","nativeSrc":"3326:3:8","nodeType":"YulIdentifier","src":"3326:3:8"},"nativeSrc":"3326:32:8","nodeType":"YulFunctionCall","src":"3326:32:8"}],"functionName":{"name":"mstore","nativeSrc":"3308:6:8","nodeType":"YulIdentifier","src":"3308:6:8"},"nativeSrc":"3308:51:8","nodeType":"YulFunctionCall","src":"3308:51:8"},"nativeSrc":"3308:51:8","nodeType":"YulExpressionStatement","src":"3308:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3162:203:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3232:9:8","nodeType":"YulTypedName","src":"3232:9:8","type":""},{"name":"value0","nativeSrc":"3243:6:8","nodeType":"YulTypedName","src":"3243:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3254:4:8","nodeType":"YulTypedName","src":"3254:4:8","type":""}],"src":"3162:203:8"},{"body":{"nativeSrc":"3418:174:8","nodeType":"YulBlock","src":"3418:174:8","statements":[{"nativeSrc":"3428:16:8","nodeType":"YulAssignment","src":"3428:16:8","value":{"arguments":[{"name":"x","nativeSrc":"3439:1:8","nodeType":"YulIdentifier","src":"3439:1:8"},{"name":"y","nativeSrc":"3442:1:8","nodeType":"YulIdentifier","src":"3442:1:8"}],"functionName":{"name":"add","nativeSrc":"3435:3:8","nodeType":"YulIdentifier","src":"3435:3:8"},"nativeSrc":"3435:9:8","nodeType":"YulFunctionCall","src":"3435:9:8"},"variableNames":[{"name":"sum","nativeSrc":"3428:3:8","nodeType":"YulIdentifier","src":"3428:3:8"}]},{"body":{"nativeSrc":"3475:111:8","nodeType":"YulBlock","src":"3475:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3496:1:8","nodeType":"YulLiteral","src":"3496:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3503:3:8","nodeType":"YulLiteral","src":"3503:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"3508:10:8","nodeType":"YulLiteral","src":"3508:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3499:3:8","nodeType":"YulIdentifier","src":"3499:3:8"},"nativeSrc":"3499:20:8","nodeType":"YulFunctionCall","src":"3499:20:8"}],"functionName":{"name":"mstore","nativeSrc":"3489:6:8","nodeType":"YulIdentifier","src":"3489:6:8"},"nativeSrc":"3489:31:8","nodeType":"YulFunctionCall","src":"3489:31:8"},"nativeSrc":"3489:31:8","nodeType":"YulExpressionStatement","src":"3489:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3540:1:8","nodeType":"YulLiteral","src":"3540:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"3543:4:8","nodeType":"YulLiteral","src":"3543:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3533:6:8","nodeType":"YulIdentifier","src":"3533:6:8"},"nativeSrc":"3533:15:8","nodeType":"YulFunctionCall","src":"3533:15:8"},"nativeSrc":"3533:15:8","nodeType":"YulExpressionStatement","src":"3533:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3568:1:8","nodeType":"YulLiteral","src":"3568:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"3571:4:8","nodeType":"YulLiteral","src":"3571:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3561:6:8","nodeType":"YulIdentifier","src":"3561:6:8"},"nativeSrc":"3561:15:8","nodeType":"YulFunctionCall","src":"3561:15:8"},"nativeSrc":"3561:15:8","nodeType":"YulExpressionStatement","src":"3561:15:8"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3459:1:8","nodeType":"YulIdentifier","src":"3459:1:8"},{"name":"sum","nativeSrc":"3462:3:8","nodeType":"YulIdentifier","src":"3462:3:8"}],"functionName":{"name":"gt","nativeSrc":"3456:2:8","nodeType":"YulIdentifier","src":"3456:2:8"},"nativeSrc":"3456:10:8","nodeType":"YulFunctionCall","src":"3456:10:8"},"nativeSrc":"3453:133:8","nodeType":"YulIf","src":"3453:133:8"}]},"name":"checked_add_t_uint256","nativeSrc":"3370:222:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3401:1:8","nodeType":"YulTypedName","src":"3401:1:8","type":""},{"name":"y","nativeSrc":"3404:1:8","nodeType":"YulTypedName","src":"3404:1:8","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3410:3:8","nodeType":"YulTypedName","src":"3410:3:8","type":""}],"src":"3370:222:8"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"940":[{"length":32,"start":283}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461014557806370a082311461015a57806395d89b41146101835780639dc29fac1461018b578063a9059cbb1461019e578063dd62ed3e146101b157600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101ea565b6040516100c3919061064f565b60405180910390f35b6100df6100da3660046106b9565b61027c565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106e3565b610296565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6101586101533660046106b9565b6102ba565b005b6100f3610168366004610720565b6001600160a01b031660009081526020819052604090205490565b6100b66102c8565b6101586101993660046106b9565b6102d7565b6100df6101ac3660046106b9565b6102e1565b6100f36101bf366004610742565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f990610775565b80601f016020809104026020016040519081016040528092919081815260200182805461022590610775565b80156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b5050505050905090565b60003361028a8185856102ef565b60019150505b92915050565b6000336102a4858285610301565b6102af858585610385565b506001949350505050565b6102c482826103e4565b5050565b6060600480546101f990610775565b6102c4828261041a565b60003361028a818585610385565b6102fc8383836001610450565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561037f578181101561037057604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61037f84848484036000610450565b50505050565b6001600160a01b0383166103af57604051634b637e8f60e11b815260006004820152602401610367565b6001600160a01b0382166103d95760405163ec442f0560e01b815260006004820152602401610367565b6102fc838383610525565b6001600160a01b03821661040e5760405163ec442f0560e01b815260006004820152602401610367565b6102c460008383610525565b6001600160a01b03821661044457604051634b637e8f60e11b815260006004820152602401610367565b6102c482600083610525565b6001600160a01b03841661047a5760405163e602df0560e01b815260006004820152602401610367565b6001600160a01b0383166104a457604051634a1406b160e11b815260006004820152602401610367565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561037f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161051791815260200190565b60405180910390a350505050565b6001600160a01b03831661055057806002600082825461054591906107af565b909155506105c29050565b6001600160a01b038316600090815260208190526040902054818110156105a35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610367565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105de576002805482900390556105fd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161064291815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561067d5760208186018101516040868401015201610660565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106b457600080fd5b919050565b600080604083850312156106cc57600080fd5b6106d58361069d565b946020939093013593505050565b6000806000606084860312156106f857600080fd5b6107018461069d565b925061070f6020850161069d565b929592945050506040919091013590565b60006020828403121561073257600080fd5b61073b8261069d565b9392505050565b6000806040838503121561075557600080fd5b61075e8361069d565b915061076c6020840161069d565b90509250929050565b600181811c9082168061078957607f821691505b6020821081036107a957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029057634e487b7160e01b600052601160045260246000fdfea264697066735822122096d78c7010d6dc35c8766493b6e9fdec897b092e25d71fa4442084c08d34dca064736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F9 SWAP1 PUSH2 0x775 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x225 SWAP1 PUSH2 0x775 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x272 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x247 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x272 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x255 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x28A DUP2 DUP6 DUP6 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A4 DUP6 DUP3 DUP6 PUSH2 0x301 JUMP JUMPDEST PUSH2 0x2AF DUP6 DUP6 DUP6 PUSH2 0x385 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2C4 DUP3 DUP3 PUSH2 0x3E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F9 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x2C4 DUP3 DUP3 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x28A DUP2 DUP6 DUP6 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x2FC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x450 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x37F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37F DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x450 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2FC DUP4 DUP4 DUP4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2C4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2C4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x37F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x517 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x550 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5C2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5DE JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x660 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP4 PUSH2 0x69D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x701 DUP5 PUSH2 0x69D JUMP JUMPDEST SWAP3 POP PUSH2 0x70F PUSH1 0x20 DUP6 ADD PUSH2 0x69D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73B DUP3 PUSH2 0x69D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75E DUP4 PUSH2 0x69D JUMP JUMPDEST SWAP2 POP PUSH2 0x76C PUSH1 0x20 DUP5 ADD PUSH2 0x69D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x789 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x290 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xD7 DUP13 PUSH17 0x10D6DC35C8766493B6E9FDEC897B092E25 0xD7 0x1F LOG4 PREVRANDAO KECCAK256 DUP5 0xC0 DUP14 CALLVALUE 0xDC LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"121:466:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:8;;1187:22;1169:41;;1157:2;1142:18;3979:186:2;1029:187:8;2830:97:2;2908:12;;2830:97;;;1367:25:8;;;1355:2;1340:18;2830:97:2;1221:177:8;4757:244:2;;;;;;:::i;:::-;;:::i;287:96:6:-;;;1954:4:8;361:15:6;1942:17:8;1924:36;;1912:2;1897:18;287:96:6;1782:184:8;389:95:6;;;;;;:::i;:::-;;:::i;:::-;;2985:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:2;3050:7;3076:18;;;;;;;;;;;;2985:116;1962:93;;;:::i;490:95:6:-;;;;;;:::i;:::-;;:::i;3296:178:2:-;;;;;;:::i;:::-;;:::i;3532:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:2;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:2;735:10:5;4122:7:2;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:2;4916:4;735:10:5;4931:5:2;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:2;;4757:244;-1:-1:-1;;;;4757:244:2:o;389:95:6:-;455:22;461:7;470:6;455:5;:22::i;:::-;389:95;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;490:95:6:-;556:22;562:7;571:6;556:5;:22::i;3296:178:2:-;3365:4;735:10:5;3419:27:2;735:10:5;3436:2:2;3440:5;3419:9;:27::i;8707:128::-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:2;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:2;;-1:-1:-1;;;;;3032:32:8;;10668:60:2;;;3014:51:8;3081:18;;;3074:34;;;3124:18;;;3117:34;;;2987:18;;10668:60:2;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:2;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:2;;5525:1;5498:30;;;3308:51:8;3281:18;;5498:30:2;3162:203:8;5453:86:2;-1:-1:-1;;;;;5552:16:2;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:2;;5620:1;5591:32;;;3308:51:8;3281:18;;5591:32:2;3162:203:8;5548:86:2;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;7439:208::-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;3308:51:8;3281:18;;7553:32:2;3162:203:8;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:2;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:2;;8106:1;8079:30;;;3308:51:8;3281:18;;8079:30:2;3162:203:8;8031:89:2;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;9682:432::-;-1:-1:-1;;;;;9794:19:2;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:2;;9865:1;9836:32;;;3308:51:8;3281:18;;9836:32:2;3162:203:8;9790:89:2;-1:-1:-1;;;;;9892:21:2;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:2;;9964:1;9936:31;;;3308:51:8;3281:18;;9936:31:2;3162:203:8;9888:90:2;-1:-1:-1;;;;;9987:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:2;10075:5;-1:-1:-1;;;;;10066:31:2;;10091:5;10066:31;;;;1367:25:8;;1355:2;1340:18;;1221:177;10066:31:2;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;3032:32:8;;6367:50:2;;;3014:51:8;3081:18;;;3074:34;;;3124:18;;;3117:34;;;2987:18;;6367:50:2;2812:345:8;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;1367::8;;1355:2;1340:18;;1221:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:527:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:8;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:8:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:8;1728:18;;;;1715:32;;1403:374::o;1971:186::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;2122:29;2141:9;2122:29;:::i;:::-;2112:39;1971:186;-1:-1:-1;;;1971:186:8:o;2162:260::-;2230:6;2238;2291:2;2279:9;2270:7;2266:23;2262:32;2259:52;;;2307:1;2304;2297:12;2259:52;2330:29;2349:9;2330:29;:::i;:::-;2320:39;;2378:38;2412:2;2401:9;2397:18;2378:38;:::i;:::-;2368:48;;2162:260;;;;;:::o;2427:380::-;2506:1;2502:12;;;;2549;;;2570:61;;2624:4;2616:6;2612:17;2602:27;;2570:61;2677:2;2669:6;2666:14;2646:18;2643:38;2640:161;;2723:10;2718:3;2714:20;2711:1;2704:31;2758:4;2755:1;2748:15;2786:4;2783:1;2776:15;2640:161;;2427:380;;;:::o;3370:222::-;3435:9;;;3456:10;;;3453:133;;;3508:10;3503:3;3499:20;3496:1;3489:31;3543:4;3540:1;3533:15;3571:4;3568:1;3561:15"},"gasEstimates":{"creation":{"codeDepositCost":"410800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24739","balanceOf(address)":"2562","burn(address,uint256)":"infinite","decimals()":"infinite","mint(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51310","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/ERC20Mock.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract ERC20Mock is ERC20 {\\n    uint8 private immutable _customDecimals;\\n\\n    constructor() ERC20(\\\"ERC20Mock\\\", \\\"ERC20M\\\") {\\n        _customDecimals = 18;\\n    }\\n\\n    function decimals() public view override returns (uint8) {\\n        return _customDecimals;\\n    }\\n\\n    function mint(address account, uint256 amount) external {\\n        _mint(account, amount);\\n    }\\n\\n    function burn(address account, uint256 amount) external {\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x325e5fcba918c542ba864fdf1b1532cc826a4aa216c3b2abd2a0d04a771816b1\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":307,"contract":"contracts/ERC20Mock.sol:ERC20Mock","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":313,"contract":"contracts/ERC20Mock.sol:ERC20Mock","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":315,"contract":"contracts/ERC20Mock.sol:ERC20Mock","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":317,"contract":"contracts/ERC20Mock.sol:ERC20Mock","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":319,"contract":"contracts/ERC20Mock.sol:ERC20Mock","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TokenBatchTransfer.sol":{"TokenBatchTransfer":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address[]","name":"recipients","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"BatchTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawToken","type":"event"},{"inputs":[{"internalType":"address[]","name":"tokenHolders","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"batchTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vaultAdress","type":"address"}],"name":"setVaultAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"sum","outputs":[{"internalType":"uint256","name":"total","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawAllToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"BatchTransfer(address,address[],uint256[])":{"details":"Event to be emited on token batch transfer.","params":{"amounts":"unit256[] The amounts sent.","recipients":"address[] The address of the holders.","sender":"address The address of the sender."}},"WithdrawToken(address,uint256)":{"details":"Event to be emited on token withdrawal.","params":{"amount":"unit256 The amount withdrawn.","sender":"address The address of the sender."}}},"kind":"dev","methods":{"batchTransfer(address[],uint256[])":{"details":"Function to transfer tokens from contract to the provided list of token holders with respective amount.","params":{"amounts":"uint256[] The list of amount per address to transfer.","tokenHolders":"address[] The list of addresses to transfer token."}},"constructor":{"details":"Constructor function.","params":{"_token":"address The address of the token contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setVaultAddress(address)":{"details":"Set the vault address.","params":{"_vaultAdress":"address The address of the vault."}},"sum(uint256[])":{"details":"Function to return the sum of an array of uint256.","params":{"amounts":"uint256[] The list of amount per address to transfer."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawAllToken()":{"details":"Withdraw all the PIXEL funds to the vaultAdress using call."},"withdrawToken(uint256)":{"details":"Withdraw funds to the vault using transferFrom.","params":{"_amount":"uint256 The amount to withdraw."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1044":{"entryPoint":null,"id":1044,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":141,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:514:8","nodeType":"YulBlock","src":"0:514:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"95:209:8","nodeType":"YulBlock","src":"95:209:8","statements":[{"body":{"nativeSrc":"141:16:8","nodeType":"YulBlock","src":"141:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:8","nodeType":"YulLiteral","src":"150:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:8","nodeType":"YulLiteral","src":"153:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:8","nodeType":"YulIdentifier","src":"143:6:8"},"nativeSrc":"143:12:8","nodeType":"YulFunctionCall","src":"143:12:8"},"nativeSrc":"143:12:8","nodeType":"YulExpressionStatement","src":"143:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:8","nodeType":"YulIdentifier","src":"116:7:8"},{"name":"headStart","nativeSrc":"125:9:8","nodeType":"YulIdentifier","src":"125:9:8"}],"functionName":{"name":"sub","nativeSrc":"112:3:8","nodeType":"YulIdentifier","src":"112:3:8"},"nativeSrc":"112:23:8","nodeType":"YulFunctionCall","src":"112:23:8"},{"kind":"number","nativeSrc":"137:2:8","nodeType":"YulLiteral","src":"137:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:8","nodeType":"YulIdentifier","src":"108:3:8"},"nativeSrc":"108:32:8","nodeType":"YulFunctionCall","src":"108:32:8"},"nativeSrc":"105:52:8","nodeType":"YulIf","src":"105:52:8"},{"nativeSrc":"166:29:8","nodeType":"YulVariableDeclaration","src":"166:29:8","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:8","nodeType":"YulIdentifier","src":"185:9:8"}],"functionName":{"name":"mload","nativeSrc":"179:5:8","nodeType":"YulIdentifier","src":"179:5:8"},"nativeSrc":"179:16:8","nodeType":"YulFunctionCall","src":"179:16:8"},"variables":[{"name":"value","nativeSrc":"170:5:8","nodeType":"YulTypedName","src":"170:5:8","type":""}]},{"body":{"nativeSrc":"258:16:8","nodeType":"YulBlock","src":"258:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:8","nodeType":"YulLiteral","src":"267:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:8","nodeType":"YulLiteral","src":"270:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:8","nodeType":"YulIdentifier","src":"260:6:8"},"nativeSrc":"260:12:8","nodeType":"YulFunctionCall","src":"260:12:8"},"nativeSrc":"260:12:8","nodeType":"YulExpressionStatement","src":"260:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:8","nodeType":"YulIdentifier","src":"217:5:8"},{"arguments":[{"name":"value","nativeSrc":"228:5:8","nodeType":"YulIdentifier","src":"228:5:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:8","nodeType":"YulLiteral","src":"243:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:8","nodeType":"YulLiteral","src":"248:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:8","nodeType":"YulIdentifier","src":"239:3:8"},"nativeSrc":"239:11:8","nodeType":"YulFunctionCall","src":"239:11:8"},{"kind":"number","nativeSrc":"252:1:8","nodeType":"YulLiteral","src":"252:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:8","nodeType":"YulIdentifier","src":"235:3:8"},"nativeSrc":"235:19:8","nodeType":"YulFunctionCall","src":"235:19:8"}],"functionName":{"name":"and","nativeSrc":"224:3:8","nodeType":"YulIdentifier","src":"224:3:8"},"nativeSrc":"224:31:8","nodeType":"YulFunctionCall","src":"224:31:8"}],"functionName":{"name":"eq","nativeSrc":"214:2:8","nodeType":"YulIdentifier","src":"214:2:8"},"nativeSrc":"214:42:8","nodeType":"YulFunctionCall","src":"214:42:8"}],"functionName":{"name":"iszero","nativeSrc":"207:6:8","nodeType":"YulIdentifier","src":"207:6:8"},"nativeSrc":"207:50:8","nodeType":"YulFunctionCall","src":"207:50:8"},"nativeSrc":"204:70:8","nodeType":"YulIf","src":"204:70:8"},{"nativeSrc":"283:15:8","nodeType":"YulAssignment","src":"283:15:8","value":{"name":"value","nativeSrc":"293:5:8","nodeType":"YulIdentifier","src":"293:5:8"},"variableNames":[{"name":"value0","nativeSrc":"283:6:8","nodeType":"YulIdentifier","src":"283:6:8"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:8","nodeType":"YulTypedName","src":"61:9:8","type":""},{"name":"dataEnd","nativeSrc":"72:7:8","nodeType":"YulTypedName","src":"72:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:8","nodeType":"YulTypedName","src":"84:6:8","type":""}],"src":"14:290:8"},{"body":{"nativeSrc":"410:102:8","nodeType":"YulBlock","src":"410:102:8","statements":[{"nativeSrc":"420:26:8","nodeType":"YulAssignment","src":"420:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"432:9:8","nodeType":"YulIdentifier","src":"432:9:8"},{"kind":"number","nativeSrc":"443:2:8","nodeType":"YulLiteral","src":"443:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"428:3:8","nodeType":"YulIdentifier","src":"428:3:8"},"nativeSrc":"428:18:8","nodeType":"YulFunctionCall","src":"428:18:8"},"variableNames":[{"name":"tail","nativeSrc":"420:4:8","nodeType":"YulIdentifier","src":"420:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"462:9:8","nodeType":"YulIdentifier","src":"462:9:8"},{"arguments":[{"name":"value0","nativeSrc":"477:6:8","nodeType":"YulIdentifier","src":"477:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"493:3:8","nodeType":"YulLiteral","src":"493:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"498:1:8","nodeType":"YulLiteral","src":"498:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"489:3:8","nodeType":"YulIdentifier","src":"489:3:8"},"nativeSrc":"489:11:8","nodeType":"YulFunctionCall","src":"489:11:8"},{"kind":"number","nativeSrc":"502:1:8","nodeType":"YulLiteral","src":"502:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"485:3:8","nodeType":"YulIdentifier","src":"485:3:8"},"nativeSrc":"485:19:8","nodeType":"YulFunctionCall","src":"485:19:8"}],"functionName":{"name":"and","nativeSrc":"473:3:8","nodeType":"YulIdentifier","src":"473:3:8"},"nativeSrc":"473:32:8","nodeType":"YulFunctionCall","src":"473:32:8"}],"functionName":{"name":"mstore","nativeSrc":"455:6:8","nodeType":"YulIdentifier","src":"455:6:8"},"nativeSrc":"455:51:8","nodeType":"YulFunctionCall","src":"455:51:8"},"nativeSrc":"455:51:8","nodeType":"YulExpressionStatement","src":"455:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"309:203:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"379:9:8","nodeType":"YulTypedName","src":"379:9:8","type":""},{"name":"value0","nativeSrc":"390:6:8","nodeType":"YulTypedName","src":"390:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"401:4:8","nodeType":"YulTypedName","src":"401:4:8","type":""}],"src":"309:203:8"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610dbd380380610dbd83398101604081905261002f916100dd565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e8161008d565b50600180546001600160a01b039092166001600160a01b0319928316179055600280549091163317905561010d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ef57600080fd5b81516001600160a01b038116811461010657600080fd5b9392505050565b610ca18061011c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806385535cc51161006657806385535cc51461011957806388d695b21461012c5780638da5cb5b1461013f578063f2fde38b14610150578063fc0c546a1461016357600080fd5b80630194db8e146100a357806314870d2c146100c9578063430bf08a146100d357806350baa622146100fe578063715018a614610111575b600080fd5b6100b66100b1366004610996565b610176565b6040519081526020015b60405180910390f35b6100d16101b8565b005b6002546100e6906001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b6100d161010c366004610a63565b61038a565b6100d16105a8565b6100d1610127366004610a98565b6105bc565b6100d161013a366004610b06565b6105e6565b6000546001600160a01b03166100e6565b6100d161015e366004610a98565b6108c5565b6001546100e6906001600160a01b031681565b6000805b82518110156101b25782818151811061019557610195610b77565b6020026020010151826101a89190610b8d565b915060010161017a565b50919050565b6101c0610903565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d9190610bb4565b9050600081116102845760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b60015460025460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052600092919091169063a9059cbb906044016020604051808303816000875af11580156102de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103029190610bcd565b9050806103515760405162461bcd60e51b815260206004820152601f60248201527f576974686472617720616c6c20776173206e6f74207375636365737366756c00604482015260640161027b565b60405182815233907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a99060200160405180910390a25050565b610392610903565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610bb4565b9050600082116104515760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161027b565b808211156104a15760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015260640161027b565b60015460025460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052600092919091169063a9059cbb906044016020604051808303816000875af11580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610bcd565b90508061056e5760405162461bcd60e51b815260206004820152601b60248201527f576974686472617720776173206e6f74207375636365737366756c0000000000604482015260640161027b565b60405183815233907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a99060200160405180910390a2505050565b6105b0610903565b6105ba6000610930565b565b6105c4610903565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105ee610903565b82811461063d5760405162461bcd60e51b815260206004820152601e60248201527f4c656e67746873206f662061727261797320646f206e6f74206d617463680000604482015260640161027b565b600061067b83838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061017692505050565b6001546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610bb4565b10156107455760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f7567682062616c616e636520696e2074686520636f6e74726160448201526118dd60f21b606482015260840161027b565b60005b84811015610876576001546001600160a01b031663a9059cbb87878481811061077357610773610b77565b90506020020160208101906107889190610a98565b86868581811061079a5761079a610b77565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af11580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108129190610bcd565b61086e5760405162461bcd60e51b815260206004820152602760248201527f556e61626c6520746f207472616e7366657220746f6b656e20746f20746865206044820152661858d8dbdd5b9d60ca1b606482015260840161027b565b600101610748565b50336001600160a01b03167fd76871a3b9b205c530f73884df11af482cc4ac28f71bdb2f15a98e79a3a79076868686866040516108b69493929190610bef565b60405180910390a25050505050565b6108cd610903565b6001600160a01b0381166108f757604051631e4fbdf760e01b81526000600482015260240161027b565b61090081610930565b50565b6000546001600160a01b031633146105ba5760405163118cdaa760e01b815233600482015260240161027b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109a857600080fd5b813567ffffffffffffffff8111156109bf57600080fd5b8201601f810184136109d057600080fd5b803567ffffffffffffffff8111156109ea576109ea610980565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610a1757610a17610980565b604052918252602081840181019290810187841115610a3557600080fd5b6020850194505b83851015610a5857843580825260209586019590935001610a3c565b509695505050505050565b600060208284031215610a7557600080fd5b5035919050565b80356001600160a01b0381168114610a9357600080fd5b919050565b600060208284031215610aaa57600080fd5b610ab382610a7c565b9392505050565b60008083601f840112610acc57600080fd5b50813567ffffffffffffffff811115610ae457600080fd5b6020830191508360208260051b8501011115610aff57600080fd5b9250929050565b60008060008060408587031215610b1c57600080fd5b843567ffffffffffffffff811115610b3357600080fd5b610b3f87828801610aba565b909550935050602085013567ffffffffffffffff811115610b5f57600080fd5b610b6b87828801610aba565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610bae57634e487b7160e01b600052601160045260246000fd5b92915050565b600060208284031215610bc657600080fd5b5051919050565b600060208284031215610bdf57600080fd5b81518015158114610ab357600080fd5b6040808252810184905260008560608301825b87811015610c30576001600160a01b03610c1b84610a7c565b16825260209283019290910190600101610c02565b5083810360208501528481526001600160fb1b03851115610c5057600080fd5b8460051b91508186602083013701602001969550505050505056fea2646970667358221220ee64b43c06b45a47172c5bac23048a0d261ab2994ea0b5b54e507bf55a8718cc64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDBD CODESIZE SUB DUP1 PUSH2 0xDBD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xDD JUMP JUMPDEST CALLER DUP1 PUSH2 0x55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E DUP2 PUSH2 0x8D JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH2 0x10D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCA1 DUP1 PUSH2 0x11C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85535CC5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x85535CC5 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x194DB8E EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x14870D2C EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x50BAA622 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE6 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1B2 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x195 JUMPI PUSH2 0x195 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x17A JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616C6C20776173206E6F74207375636365737366756C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x992EE874049A42CAE0757A765CD7F641B6028CC35C3478BDE8330BF417C3A7A9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720776173206E6F74207375636365737366756C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x992EE874049A42CAE0757A765CD7F641B6028CC35C3478BDE8330BF417C3A7A9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x5B0 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0x0 PUSH2 0x930 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5EE PUSH2 0x903 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C656E67746873206F662061727261797320646F206E6F74206D617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x176 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST LT ISZERO PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520696E2074686520636F6E747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x18DD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x876 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xA98 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E7366657220746F6B656E20746F2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1858D8DBDD5B9D PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x748 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD76871A3B9B205C530F73884DF11AF482CC4AC28F71BDB2F15A98E79A3A79076 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x27B JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x930 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x9D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH2 0x9EA PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA17 JUMPI PUSH2 0xA17 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP8 DUP5 GT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xA58 JUMPI DUP5 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP4 POP ADD PUSH2 0xA3C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB3 DUP3 PUSH2 0xA7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB3F DUP8 DUP3 DUP9 ADD PUSH2 0xABA JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6B DUP8 DUP3 DUP9 ADD PUSH2 0xABA JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBAE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP6 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC1B DUP5 PUSH2 0xA7C JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC02 JUMP JUMPDEST POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL SWAP2 POP DUP2 DUP7 PUSH1 0x20 DUP4 ADD CALLDATACOPY ADD PUSH1 0x20 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH5 0xB43C06B45A SELFBALANCE OR 0x2C JUMPDEST 0xAC 0x23 DIV DUP11 0xD 0x26 BYTE 0xB2 SWAP10 0x4E LOG0 0xB5 0xB5 0x4E POP PUSH28 0xF55A8718CC64736F6C634300081B0033000000000000000000000000 ","sourceMap":"175:4305:7:-:0;;;1221:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1257:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:8;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1321:5:7::1;:22:::0;;-1:-1:-1;;;;;1321:22:7;;::::1;-1:-1:-1::0;;;;;;1321:22:7;;::::1;;::::0;;1420:12:::1;:34:::0;;;;::::1;1443:10;1420:34;::::0;;175:4305;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;309:203::-;175:4305:7;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":2307,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_915":{"entryPoint":null,"id":915,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2352,"id":146,"parameterSlots":1,"returnSlots":0},"@batchTransfer_1163":{"entryPoint":1510,"id":1163,"parameterSlots":4,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1448,"id":98,"parameterSlots":0,"returnSlots":0},"@setVaultAddress_1060":{"entryPoint":1468,"id":1060,"parameterSlots":1,"returnSlots":0},"@sum_1089":{"entryPoint":374,"id":1089,"parameterSlots":1,"returnSlots":1},"@token_998":{"entryPoint":null,"id":998,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2245,"id":126,"parameterSlots":1,"returnSlots":0},"@vaultAddress_1001":{"entryPoint":null,"id":1001,"parameterSlots":0,"returnSlots":0},"@withdrawAllToken_1258":{"entryPoint":440,"id":1258,"parameterSlots":0,"returnSlots":0},"@withdrawToken_1215":{"entryPoint":906,"id":1215,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":2746,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":2712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":2822,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3055,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5c32e7268a4b8f21bf2436ce677b8c5dd11e6fb2f6c4046e21c82c90c0c1b20b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aa03b6ea72e227ce35a48715f1d81ef0396ad12fd8f4c133eb73c8d550363fc0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab9f3546ec28940a6d6a885255bfad9360ca83920aa49c0a028cffeff1b19e5c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bcdbd0a79fce88b738eb2b21f26091c667c14f193cecf0fa3d9b5d94ed4d488a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d19e9a50265a9fdef5462eabd5cfd283435423cee1a1dd9ecc3e25e903b7d47e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2957,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":2935,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2432,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8363:8","nodeType":"YulBlock","src":"0:8363:8","statements":[{"nativeSrc":"6:3:8","nodeType":"YulBlock","src":"6:3:8","statements":[]},{"body":{"nativeSrc":"46:95:8","nodeType":"YulBlock","src":"46:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:8","nodeType":"YulLiteral","src":"63:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:8","nodeType":"YulLiteral","src":"70:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:8","nodeType":"YulLiteral","src":"75:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:8","nodeType":"YulIdentifier","src":"66:3:8"},"nativeSrc":"66:20:8","nodeType":"YulFunctionCall","src":"66:20:8"}],"functionName":{"name":"mstore","nativeSrc":"56:6:8","nodeType":"YulIdentifier","src":"56:6:8"},"nativeSrc":"56:31:8","nodeType":"YulFunctionCall","src":"56:31:8"},"nativeSrc":"56:31:8","nodeType":"YulExpressionStatement","src":"56:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:8","nodeType":"YulLiteral","src":"103:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:8","nodeType":"YulLiteral","src":"106:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:8","nodeType":"YulIdentifier","src":"96:6:8"},"nativeSrc":"96:15:8","nodeType":"YulFunctionCall","src":"96:15:8"},"nativeSrc":"96:15:8","nodeType":"YulExpressionStatement","src":"96:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:8","nodeType":"YulLiteral","src":"127:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:8","nodeType":"YulLiteral","src":"130:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:8","nodeType":"YulIdentifier","src":"120:6:8"},"nativeSrc":"120:15:8","nodeType":"YulFunctionCall","src":"120:15:8"},"nativeSrc":"120:15:8","nodeType":"YulExpressionStatement","src":"120:15:8"}]},"name":"panic_error_0x41","nativeSrc":"14:127:8","nodeType":"YulFunctionDefinition","src":"14:127:8"},{"body":{"nativeSrc":"241:1080:8","nodeType":"YulBlock","src":"241:1080:8","statements":[{"body":{"nativeSrc":"287:16:8","nodeType":"YulBlock","src":"287:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"296:1:8","nodeType":"YulLiteral","src":"296:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"299:1:8","nodeType":"YulLiteral","src":"299:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"289:6:8","nodeType":"YulIdentifier","src":"289:6:8"},"nativeSrc":"289:12:8","nodeType":"YulFunctionCall","src":"289:12:8"},"nativeSrc":"289:12:8","nodeType":"YulExpressionStatement","src":"289:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"262:7:8","nodeType":"YulIdentifier","src":"262:7:8"},{"name":"headStart","nativeSrc":"271:9:8","nodeType":"YulIdentifier","src":"271:9:8"}],"functionName":{"name":"sub","nativeSrc":"258:3:8","nodeType":"YulIdentifier","src":"258:3:8"},"nativeSrc":"258:23:8","nodeType":"YulFunctionCall","src":"258:23:8"},{"kind":"number","nativeSrc":"283:2:8","nodeType":"YulLiteral","src":"283:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"254:3:8","nodeType":"YulIdentifier","src":"254:3:8"},"nativeSrc":"254:32:8","nodeType":"YulFunctionCall","src":"254:32:8"},"nativeSrc":"251:52:8","nodeType":"YulIf","src":"251:52:8"},{"nativeSrc":"312:37:8","nodeType":"YulVariableDeclaration","src":"312:37:8","value":{"arguments":[{"name":"headStart","nativeSrc":"339:9:8","nodeType":"YulIdentifier","src":"339:9:8"}],"functionName":{"name":"calldataload","nativeSrc":"326:12:8","nodeType":"YulIdentifier","src":"326:12:8"},"nativeSrc":"326:23:8","nodeType":"YulFunctionCall","src":"326:23:8"},"variables":[{"name":"offset","nativeSrc":"316:6:8","nodeType":"YulTypedName","src":"316:6:8","type":""}]},{"body":{"nativeSrc":"392:16:8","nodeType":"YulBlock","src":"392:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"401:1:8","nodeType":"YulLiteral","src":"401:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"404:1:8","nodeType":"YulLiteral","src":"404:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"394:6:8","nodeType":"YulIdentifier","src":"394:6:8"},"nativeSrc":"394:12:8","nodeType":"YulFunctionCall","src":"394:12:8"},"nativeSrc":"394:12:8","nodeType":"YulExpressionStatement","src":"394:12:8"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"364:6:8","nodeType":"YulIdentifier","src":"364:6:8"},{"kind":"number","nativeSrc":"372:18:8","nodeType":"YulLiteral","src":"372:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"361:2:8","nodeType":"YulIdentifier","src":"361:2:8"},"nativeSrc":"361:30:8","nodeType":"YulFunctionCall","src":"361:30:8"},"nativeSrc":"358:50:8","nodeType":"YulIf","src":"358:50:8"},{"nativeSrc":"417:32:8","nodeType":"YulVariableDeclaration","src":"417:32:8","value":{"arguments":[{"name":"headStart","nativeSrc":"431:9:8","nodeType":"YulIdentifier","src":"431:9:8"},{"name":"offset","nativeSrc":"442:6:8","nodeType":"YulIdentifier","src":"442:6:8"}],"functionName":{"name":"add","nativeSrc":"427:3:8","nodeType":"YulIdentifier","src":"427:3:8"},"nativeSrc":"427:22:8","nodeType":"YulFunctionCall","src":"427:22:8"},"variables":[{"name":"_1","nativeSrc":"421:2:8","nodeType":"YulTypedName","src":"421:2:8","type":""}]},{"body":{"nativeSrc":"497:16:8","nodeType":"YulBlock","src":"497:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"506:1:8","nodeType":"YulLiteral","src":"506:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"509:1:8","nodeType":"YulLiteral","src":"509:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"499:6:8","nodeType":"YulIdentifier","src":"499:6:8"},"nativeSrc":"499:12:8","nodeType":"YulFunctionCall","src":"499:12:8"},"nativeSrc":"499:12:8","nodeType":"YulExpressionStatement","src":"499:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"476:2:8","nodeType":"YulIdentifier","src":"476:2:8"},{"kind":"number","nativeSrc":"480:4:8","nodeType":"YulLiteral","src":"480:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"472:3:8","nodeType":"YulIdentifier","src":"472:3:8"},"nativeSrc":"472:13:8","nodeType":"YulFunctionCall","src":"472:13:8"},{"name":"dataEnd","nativeSrc":"487:7:8","nodeType":"YulIdentifier","src":"487:7:8"}],"functionName":{"name":"slt","nativeSrc":"468:3:8","nodeType":"YulIdentifier","src":"468:3:8"},"nativeSrc":"468:27:8","nodeType":"YulFunctionCall","src":"468:27:8"}],"functionName":{"name":"iszero","nativeSrc":"461:6:8","nodeType":"YulIdentifier","src":"461:6:8"},"nativeSrc":"461:35:8","nodeType":"YulFunctionCall","src":"461:35:8"},"nativeSrc":"458:55:8","nodeType":"YulIf","src":"458:55:8"},{"nativeSrc":"522:30:8","nodeType":"YulVariableDeclaration","src":"522:30:8","value":{"arguments":[{"name":"_1","nativeSrc":"549:2:8","nodeType":"YulIdentifier","src":"549:2:8"}],"functionName":{"name":"calldataload","nativeSrc":"536:12:8","nodeType":"YulIdentifier","src":"536:12:8"},"nativeSrc":"536:16:8","nodeType":"YulFunctionCall","src":"536:16:8"},"variables":[{"name":"length","nativeSrc":"526:6:8","nodeType":"YulTypedName","src":"526:6:8","type":""}]},{"body":{"nativeSrc":"595:22:8","nodeType":"YulBlock","src":"595:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"597:16:8","nodeType":"YulIdentifier","src":"597:16:8"},"nativeSrc":"597:18:8","nodeType":"YulFunctionCall","src":"597:18:8"},"nativeSrc":"597:18:8","nodeType":"YulExpressionStatement","src":"597:18:8"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"567:6:8","nodeType":"YulIdentifier","src":"567:6:8"},{"kind":"number","nativeSrc":"575:18:8","nodeType":"YulLiteral","src":"575:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"564:2:8","nodeType":"YulIdentifier","src":"564:2:8"},"nativeSrc":"564:30:8","nodeType":"YulFunctionCall","src":"564:30:8"},"nativeSrc":"561:56:8","nodeType":"YulIf","src":"561:56:8"},{"nativeSrc":"626:24:8","nodeType":"YulVariableDeclaration","src":"626:24:8","value":{"arguments":[{"kind":"number","nativeSrc":"640:1:8","nodeType":"YulLiteral","src":"640:1:8","type":"","value":"5"},{"name":"length","nativeSrc":"643:6:8","nodeType":"YulIdentifier","src":"643:6:8"}],"functionName":{"name":"shl","nativeSrc":"636:3:8","nodeType":"YulIdentifier","src":"636:3:8"},"nativeSrc":"636:14:8","nodeType":"YulFunctionCall","src":"636:14:8"},"variables":[{"name":"_2","nativeSrc":"630:2:8","nodeType":"YulTypedName","src":"630:2:8","type":""}]},{"nativeSrc":"659:23:8","nodeType":"YulVariableDeclaration","src":"659:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"679:2:8","nodeType":"YulLiteral","src":"679:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"673:5:8","nodeType":"YulIdentifier","src":"673:5:8"},"nativeSrc":"673:9:8","nodeType":"YulFunctionCall","src":"673:9:8"},"variables":[{"name":"memPtr","nativeSrc":"663:6:8","nodeType":"YulTypedName","src":"663:6:8","type":""}]},{"nativeSrc":"691:56:8","nodeType":"YulVariableDeclaration","src":"691:56:8","value":{"arguments":[{"name":"memPtr","nativeSrc":"713:6:8","nodeType":"YulIdentifier","src":"713:6:8"},{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"729:2:8","nodeType":"YulIdentifier","src":"729:2:8"},{"kind":"number","nativeSrc":"733:2:8","nodeType":"YulLiteral","src":"733:2:8","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"725:3:8","nodeType":"YulIdentifier","src":"725:3:8"},"nativeSrc":"725:11:8","nodeType":"YulFunctionCall","src":"725:11:8"},{"arguments":[{"kind":"number","nativeSrc":"742:2:8","nodeType":"YulLiteral","src":"742:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"738:3:8","nodeType":"YulIdentifier","src":"738:3:8"},"nativeSrc":"738:7:8","nodeType":"YulFunctionCall","src":"738:7:8"}],"functionName":{"name":"and","nativeSrc":"721:3:8","nodeType":"YulIdentifier","src":"721:3:8"},"nativeSrc":"721:25:8","nodeType":"YulFunctionCall","src":"721:25:8"}],"functionName":{"name":"add","nativeSrc":"709:3:8","nodeType":"YulIdentifier","src":"709:3:8"},"nativeSrc":"709:38:8","nodeType":"YulFunctionCall","src":"709:38:8"},"variables":[{"name":"newFreePtr","nativeSrc":"695:10:8","nodeType":"YulTypedName","src":"695:10:8","type":""}]},{"body":{"nativeSrc":"822:22:8","nodeType":"YulBlock","src":"822:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"824:16:8","nodeType":"YulIdentifier","src":"824:16:8"},"nativeSrc":"824:18:8","nodeType":"YulFunctionCall","src":"824:18:8"},"nativeSrc":"824:18:8","nodeType":"YulExpressionStatement","src":"824:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"765:10:8","nodeType":"YulIdentifier","src":"765:10:8"},{"kind":"number","nativeSrc":"777:18:8","nodeType":"YulLiteral","src":"777:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"762:2:8","nodeType":"YulIdentifier","src":"762:2:8"},"nativeSrc":"762:34:8","nodeType":"YulFunctionCall","src":"762:34:8"},{"arguments":[{"name":"newFreePtr","nativeSrc":"801:10:8","nodeType":"YulIdentifier","src":"801:10:8"},{"name":"memPtr","nativeSrc":"813:6:8","nodeType":"YulIdentifier","src":"813:6:8"}],"functionName":{"name":"lt","nativeSrc":"798:2:8","nodeType":"YulIdentifier","src":"798:2:8"},"nativeSrc":"798:22:8","nodeType":"YulFunctionCall","src":"798:22:8"}],"functionName":{"name":"or","nativeSrc":"759:2:8","nodeType":"YulIdentifier","src":"759:2:8"},"nativeSrc":"759:62:8","nodeType":"YulFunctionCall","src":"759:62:8"},"nativeSrc":"756:88:8","nodeType":"YulIf","src":"756:88:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"860:2:8","nodeType":"YulLiteral","src":"860:2:8","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"864:10:8","nodeType":"YulIdentifier","src":"864:10:8"}],"functionName":{"name":"mstore","nativeSrc":"853:6:8","nodeType":"YulIdentifier","src":"853:6:8"},"nativeSrc":"853:22:8","nodeType":"YulFunctionCall","src":"853:22:8"},"nativeSrc":"853:22:8","nodeType":"YulExpressionStatement","src":"853:22:8"},{"nativeSrc":"884:17:8","nodeType":"YulVariableDeclaration","src":"884:17:8","value":{"name":"memPtr","nativeSrc":"895:6:8","nodeType":"YulIdentifier","src":"895:6:8"},"variables":[{"name":"dst","nativeSrc":"888:3:8","nodeType":"YulTypedName","src":"888:3:8","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"917:6:8","nodeType":"YulIdentifier","src":"917:6:8"},{"name":"length","nativeSrc":"925:6:8","nodeType":"YulIdentifier","src":"925:6:8"}],"functionName":{"name":"mstore","nativeSrc":"910:6:8","nodeType":"YulIdentifier","src":"910:6:8"},"nativeSrc":"910:22:8","nodeType":"YulFunctionCall","src":"910:22:8"},"nativeSrc":"910:22:8","nodeType":"YulExpressionStatement","src":"910:22:8"},{"nativeSrc":"941:22:8","nodeType":"YulAssignment","src":"941:22:8","value":{"arguments":[{"name":"memPtr","nativeSrc":"952:6:8","nodeType":"YulIdentifier","src":"952:6:8"},{"kind":"number","nativeSrc":"960:2:8","nodeType":"YulLiteral","src":"960:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"948:3:8","nodeType":"YulIdentifier","src":"948:3:8"},"nativeSrc":"948:15:8","nodeType":"YulFunctionCall","src":"948:15:8"},"variableNames":[{"name":"dst","nativeSrc":"941:3:8","nodeType":"YulIdentifier","src":"941:3:8"}]},{"nativeSrc":"972:34:8","nodeType":"YulVariableDeclaration","src":"972:34:8","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"994:2:8","nodeType":"YulIdentifier","src":"994:2:8"},{"name":"_2","nativeSrc":"998:2:8","nodeType":"YulIdentifier","src":"998:2:8"}],"functionName":{"name":"add","nativeSrc":"990:3:8","nodeType":"YulIdentifier","src":"990:3:8"},"nativeSrc":"990:11:8","nodeType":"YulFunctionCall","src":"990:11:8"},{"kind":"number","nativeSrc":"1003:2:8","nodeType":"YulLiteral","src":"1003:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"986:3:8","nodeType":"YulIdentifier","src":"986:3:8"},"nativeSrc":"986:20:8","nodeType":"YulFunctionCall","src":"986:20:8"},"variables":[{"name":"srcEnd","nativeSrc":"976:6:8","nodeType":"YulTypedName","src":"976:6:8","type":""}]},{"body":{"nativeSrc":"1038:16:8","nodeType":"YulBlock","src":"1038:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1047:1:8","nodeType":"YulLiteral","src":"1047:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1050:1:8","nodeType":"YulLiteral","src":"1050:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1040:6:8","nodeType":"YulIdentifier","src":"1040:6:8"},"nativeSrc":"1040:12:8","nodeType":"YulFunctionCall","src":"1040:12:8"},"nativeSrc":"1040:12:8","nodeType":"YulExpressionStatement","src":"1040:12:8"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"1021:6:8","nodeType":"YulIdentifier","src":"1021:6:8"},{"name":"dataEnd","nativeSrc":"1029:7:8","nodeType":"YulIdentifier","src":"1029:7:8"}],"functionName":{"name":"gt","nativeSrc":"1018:2:8","nodeType":"YulIdentifier","src":"1018:2:8"},"nativeSrc":"1018:19:8","nodeType":"YulFunctionCall","src":"1018:19:8"},"nativeSrc":"1015:39:8","nodeType":"YulIf","src":"1015:39:8"},{"nativeSrc":"1063:22:8","nodeType":"YulVariableDeclaration","src":"1063:22:8","value":{"arguments":[{"name":"_1","nativeSrc":"1078:2:8","nodeType":"YulIdentifier","src":"1078:2:8"},{"kind":"number","nativeSrc":"1082:2:8","nodeType":"YulLiteral","src":"1082:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1074:3:8","nodeType":"YulIdentifier","src":"1074:3:8"},"nativeSrc":"1074:11:8","nodeType":"YulFunctionCall","src":"1074:11:8"},"variables":[{"name":"src","nativeSrc":"1067:3:8","nodeType":"YulTypedName","src":"1067:3:8","type":""}]},{"body":{"nativeSrc":"1150:140:8","nodeType":"YulBlock","src":"1150:140:8","statements":[{"nativeSrc":"1164:14:8","nodeType":"YulVariableDeclaration","src":"1164:14:8","value":{"kind":"number","nativeSrc":"1177:1:8","nodeType":"YulLiteral","src":"1177:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1168:5:8","nodeType":"YulTypedName","src":"1168:5:8","type":""}]},{"nativeSrc":"1191:26:8","nodeType":"YulAssignment","src":"1191:26:8","value":{"arguments":[{"name":"src","nativeSrc":"1213:3:8","nodeType":"YulIdentifier","src":"1213:3:8"}],"functionName":{"name":"calldataload","nativeSrc":"1200:12:8","nodeType":"YulIdentifier","src":"1200:12:8"},"nativeSrc":"1200:17:8","nodeType":"YulFunctionCall","src":"1200:17:8"},"variableNames":[{"name":"value","nativeSrc":"1191:5:8","nodeType":"YulIdentifier","src":"1191:5:8"}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"1237:3:8","nodeType":"YulIdentifier","src":"1237:3:8"},{"name":"value","nativeSrc":"1242:5:8","nodeType":"YulIdentifier","src":"1242:5:8"}],"functionName":{"name":"mstore","nativeSrc":"1230:6:8","nodeType":"YulIdentifier","src":"1230:6:8"},"nativeSrc":"1230:18:8","nodeType":"YulFunctionCall","src":"1230:18:8"},"nativeSrc":"1230:18:8","nodeType":"YulExpressionStatement","src":"1230:18:8"},{"nativeSrc":"1261:19:8","nodeType":"YulAssignment","src":"1261:19:8","value":{"arguments":[{"name":"dst","nativeSrc":"1272:3:8","nodeType":"YulIdentifier","src":"1272:3:8"},{"kind":"number","nativeSrc":"1277:2:8","nodeType":"YulLiteral","src":"1277:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1268:3:8","nodeType":"YulIdentifier","src":"1268:3:8"},"nativeSrc":"1268:12:8","nodeType":"YulFunctionCall","src":"1268:12:8"},"variableNames":[{"name":"dst","nativeSrc":"1261:3:8","nodeType":"YulIdentifier","src":"1261:3:8"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"1105:3:8","nodeType":"YulIdentifier","src":"1105:3:8"},{"name":"srcEnd","nativeSrc":"1110:6:8","nodeType":"YulIdentifier","src":"1110:6:8"}],"functionName":{"name":"lt","nativeSrc":"1102:2:8","nodeType":"YulIdentifier","src":"1102:2:8"},"nativeSrc":"1102:15:8","nodeType":"YulFunctionCall","src":"1102:15:8"},"nativeSrc":"1094:196:8","nodeType":"YulForLoop","post":{"nativeSrc":"1118:23:8","nodeType":"YulBlock","src":"1118:23:8","statements":[{"nativeSrc":"1120:19:8","nodeType":"YulAssignment","src":"1120:19:8","value":{"arguments":[{"name":"src","nativeSrc":"1131:3:8","nodeType":"YulIdentifier","src":"1131:3:8"},{"kind":"number","nativeSrc":"1136:2:8","nodeType":"YulLiteral","src":"1136:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1127:3:8","nodeType":"YulIdentifier","src":"1127:3:8"},"nativeSrc":"1127:12:8","nodeType":"YulFunctionCall","src":"1127:12:8"},"variableNames":[{"name":"src","nativeSrc":"1120:3:8","nodeType":"YulIdentifier","src":"1120:3:8"}]}]},"pre":{"nativeSrc":"1098:3:8","nodeType":"YulBlock","src":"1098:3:8","statements":[]},"src":"1094:196:8"},{"nativeSrc":"1299:16:8","nodeType":"YulAssignment","src":"1299:16:8","value":{"name":"memPtr","nativeSrc":"1309:6:8","nodeType":"YulIdentifier","src":"1309:6:8"},"variableNames":[{"name":"value0","nativeSrc":"1299:6:8","nodeType":"YulIdentifier","src":"1299:6:8"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"146:1175:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"207:9:8","nodeType":"YulTypedName","src":"207:9:8","type":""},{"name":"dataEnd","nativeSrc":"218:7:8","nodeType":"YulTypedName","src":"218:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"230:6:8","nodeType":"YulTypedName","src":"230:6:8","type":""}],"src":"146:1175:8"},{"body":{"nativeSrc":"1427:76:8","nodeType":"YulBlock","src":"1427:76:8","statements":[{"nativeSrc":"1437:26:8","nodeType":"YulAssignment","src":"1437:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1449:9:8","nodeType":"YulIdentifier","src":"1449:9:8"},{"kind":"number","nativeSrc":"1460:2:8","nodeType":"YulLiteral","src":"1460:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1445:3:8","nodeType":"YulIdentifier","src":"1445:3:8"},"nativeSrc":"1445:18:8","nodeType":"YulFunctionCall","src":"1445:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1437:4:8","nodeType":"YulIdentifier","src":"1437:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1479:9:8","nodeType":"YulIdentifier","src":"1479:9:8"},{"name":"value0","nativeSrc":"1490:6:8","nodeType":"YulIdentifier","src":"1490:6:8"}],"functionName":{"name":"mstore","nativeSrc":"1472:6:8","nodeType":"YulIdentifier","src":"1472:6:8"},"nativeSrc":"1472:25:8","nodeType":"YulFunctionCall","src":"1472:25:8"},"nativeSrc":"1472:25:8","nodeType":"YulExpressionStatement","src":"1472:25:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1326:177:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1396:9:8","nodeType":"YulTypedName","src":"1396:9:8","type":""},{"name":"value0","nativeSrc":"1407:6:8","nodeType":"YulTypedName","src":"1407:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1418:4:8","nodeType":"YulTypedName","src":"1418:4:8","type":""}],"src":"1326:177:8"},{"body":{"nativeSrc":"1609:102:8","nodeType":"YulBlock","src":"1609:102:8","statements":[{"nativeSrc":"1619:26:8","nodeType":"YulAssignment","src":"1619:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1631:9:8","nodeType":"YulIdentifier","src":"1631:9:8"},{"kind":"number","nativeSrc":"1642:2:8","nodeType":"YulLiteral","src":"1642:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1627:3:8","nodeType":"YulIdentifier","src":"1627:3:8"},"nativeSrc":"1627:18:8","nodeType":"YulFunctionCall","src":"1627:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1619:4:8","nodeType":"YulIdentifier","src":"1619:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1661:9:8","nodeType":"YulIdentifier","src":"1661:9:8"},{"arguments":[{"name":"value0","nativeSrc":"1676:6:8","nodeType":"YulIdentifier","src":"1676:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1692:3:8","nodeType":"YulLiteral","src":"1692:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"1697:1:8","nodeType":"YulLiteral","src":"1697:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1688:3:8","nodeType":"YulIdentifier","src":"1688:3:8"},"nativeSrc":"1688:11:8","nodeType":"YulFunctionCall","src":"1688:11:8"},{"kind":"number","nativeSrc":"1701:1:8","nodeType":"YulLiteral","src":"1701:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1684:3:8","nodeType":"YulIdentifier","src":"1684:3:8"},"nativeSrc":"1684:19:8","nodeType":"YulFunctionCall","src":"1684:19:8"}],"functionName":{"name":"and","nativeSrc":"1672:3:8","nodeType":"YulIdentifier","src":"1672:3:8"},"nativeSrc":"1672:32:8","nodeType":"YulFunctionCall","src":"1672:32:8"}],"functionName":{"name":"mstore","nativeSrc":"1654:6:8","nodeType":"YulIdentifier","src":"1654:6:8"},"nativeSrc":"1654:51:8","nodeType":"YulFunctionCall","src":"1654:51:8"},"nativeSrc":"1654:51:8","nodeType":"YulExpressionStatement","src":"1654:51:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1508:203:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1578:9:8","nodeType":"YulTypedName","src":"1578:9:8","type":""},{"name":"value0","nativeSrc":"1589:6:8","nodeType":"YulTypedName","src":"1589:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1600:4:8","nodeType":"YulTypedName","src":"1600:4:8","type":""}],"src":"1508:203:8"},{"body":{"nativeSrc":"1786:156:8","nodeType":"YulBlock","src":"1786:156:8","statements":[{"body":{"nativeSrc":"1832:16:8","nodeType":"YulBlock","src":"1832:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1841:1:8","nodeType":"YulLiteral","src":"1841:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1844:1:8","nodeType":"YulLiteral","src":"1844:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1834:6:8","nodeType":"YulIdentifier","src":"1834:6:8"},"nativeSrc":"1834:12:8","nodeType":"YulFunctionCall","src":"1834:12:8"},"nativeSrc":"1834:12:8","nodeType":"YulExpressionStatement","src":"1834:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1807:7:8","nodeType":"YulIdentifier","src":"1807:7:8"},{"name":"headStart","nativeSrc":"1816:9:8","nodeType":"YulIdentifier","src":"1816:9:8"}],"functionName":{"name":"sub","nativeSrc":"1803:3:8","nodeType":"YulIdentifier","src":"1803:3:8"},"nativeSrc":"1803:23:8","nodeType":"YulFunctionCall","src":"1803:23:8"},{"kind":"number","nativeSrc":"1828:2:8","nodeType":"YulLiteral","src":"1828:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1799:3:8","nodeType":"YulIdentifier","src":"1799:3:8"},"nativeSrc":"1799:32:8","nodeType":"YulFunctionCall","src":"1799:32:8"},"nativeSrc":"1796:52:8","nodeType":"YulIf","src":"1796:52:8"},{"nativeSrc":"1857:14:8","nodeType":"YulVariableDeclaration","src":"1857:14:8","value":{"kind":"number","nativeSrc":"1870:1:8","nodeType":"YulLiteral","src":"1870:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1861:5:8","nodeType":"YulTypedName","src":"1861:5:8","type":""}]},{"nativeSrc":"1880:32:8","nodeType":"YulAssignment","src":"1880:32:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1902:9:8","nodeType":"YulIdentifier","src":"1902:9:8"}],"functionName":{"name":"calldataload","nativeSrc":"1889:12:8","nodeType":"YulIdentifier","src":"1889:12:8"},"nativeSrc":"1889:23:8","nodeType":"YulFunctionCall","src":"1889:23:8"},"variableNames":[{"name":"value","nativeSrc":"1880:5:8","nodeType":"YulIdentifier","src":"1880:5:8"}]},{"nativeSrc":"1921:15:8","nodeType":"YulAssignment","src":"1921:15:8","value":{"name":"value","nativeSrc":"1931:5:8","nodeType":"YulIdentifier","src":"1931:5:8"},"variableNames":[{"name":"value0","nativeSrc":"1921:6:8","nodeType":"YulIdentifier","src":"1921:6:8"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1716:226:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1752:9:8","nodeType":"YulTypedName","src":"1752:9:8","type":""},{"name":"dataEnd","nativeSrc":"1763:7:8","nodeType":"YulTypedName","src":"1763:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1775:6:8","nodeType":"YulTypedName","src":"1775:6:8","type":""}],"src":"1716:226:8"},{"body":{"nativeSrc":"1996:124:8","nodeType":"YulBlock","src":"1996:124:8","statements":[{"nativeSrc":"2006:29:8","nodeType":"YulAssignment","src":"2006:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"2028:6:8","nodeType":"YulIdentifier","src":"2028:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"2015:12:8","nodeType":"YulIdentifier","src":"2015:12:8"},"nativeSrc":"2015:20:8","nodeType":"YulFunctionCall","src":"2015:20:8"},"variableNames":[{"name":"value","nativeSrc":"2006:5:8","nodeType":"YulIdentifier","src":"2006:5:8"}]},{"body":{"nativeSrc":"2098:16:8","nodeType":"YulBlock","src":"2098:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2107:1:8","nodeType":"YulLiteral","src":"2107:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2110:1:8","nodeType":"YulLiteral","src":"2110:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2100:6:8","nodeType":"YulIdentifier","src":"2100:6:8"},"nativeSrc":"2100:12:8","nodeType":"YulFunctionCall","src":"2100:12:8"},"nativeSrc":"2100:12:8","nodeType":"YulExpressionStatement","src":"2100:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2057:5:8","nodeType":"YulIdentifier","src":"2057:5:8"},{"arguments":[{"name":"value","nativeSrc":"2068:5:8","nodeType":"YulIdentifier","src":"2068:5:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2083:3:8","nodeType":"YulLiteral","src":"2083:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"2088:1:8","nodeType":"YulLiteral","src":"2088:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2079:3:8","nodeType":"YulIdentifier","src":"2079:3:8"},"nativeSrc":"2079:11:8","nodeType":"YulFunctionCall","src":"2079:11:8"},{"kind":"number","nativeSrc":"2092:1:8","nodeType":"YulLiteral","src":"2092:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2075:3:8","nodeType":"YulIdentifier","src":"2075:3:8"},"nativeSrc":"2075:19:8","nodeType":"YulFunctionCall","src":"2075:19:8"}],"functionName":{"name":"and","nativeSrc":"2064:3:8","nodeType":"YulIdentifier","src":"2064:3:8"},"nativeSrc":"2064:31:8","nodeType":"YulFunctionCall","src":"2064:31:8"}],"functionName":{"name":"eq","nativeSrc":"2054:2:8","nodeType":"YulIdentifier","src":"2054:2:8"},"nativeSrc":"2054:42:8","nodeType":"YulFunctionCall","src":"2054:42:8"}],"functionName":{"name":"iszero","nativeSrc":"2047:6:8","nodeType":"YulIdentifier","src":"2047:6:8"},"nativeSrc":"2047:50:8","nodeType":"YulFunctionCall","src":"2047:50:8"},"nativeSrc":"2044:70:8","nodeType":"YulIf","src":"2044:70:8"}]},"name":"abi_decode_address","nativeSrc":"1947:173:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1975:6:8","nodeType":"YulTypedName","src":"1975:6:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1986:5:8","nodeType":"YulTypedName","src":"1986:5:8","type":""}],"src":"1947:173:8"},{"body":{"nativeSrc":"2195:116:8","nodeType":"YulBlock","src":"2195:116:8","statements":[{"body":{"nativeSrc":"2241:16:8","nodeType":"YulBlock","src":"2241:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2250:1:8","nodeType":"YulLiteral","src":"2250:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2253:1:8","nodeType":"YulLiteral","src":"2253:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2243:6:8","nodeType":"YulIdentifier","src":"2243:6:8"},"nativeSrc":"2243:12:8","nodeType":"YulFunctionCall","src":"2243:12:8"},"nativeSrc":"2243:12:8","nodeType":"YulExpressionStatement","src":"2243:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2216:7:8","nodeType":"YulIdentifier","src":"2216:7:8"},{"name":"headStart","nativeSrc":"2225:9:8","nodeType":"YulIdentifier","src":"2225:9:8"}],"functionName":{"name":"sub","nativeSrc":"2212:3:8","nodeType":"YulIdentifier","src":"2212:3:8"},"nativeSrc":"2212:23:8","nodeType":"YulFunctionCall","src":"2212:23:8"},{"kind":"number","nativeSrc":"2237:2:8","nodeType":"YulLiteral","src":"2237:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2208:3:8","nodeType":"YulIdentifier","src":"2208:3:8"},"nativeSrc":"2208:32:8","nodeType":"YulFunctionCall","src":"2208:32:8"},"nativeSrc":"2205:52:8","nodeType":"YulIf","src":"2205:52:8"},{"nativeSrc":"2266:39:8","nodeType":"YulAssignment","src":"2266:39:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2295:9:8","nodeType":"YulIdentifier","src":"2295:9:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2276:18:8","nodeType":"YulIdentifier","src":"2276:18:8"},"nativeSrc":"2276:29:8","nodeType":"YulFunctionCall","src":"2276:29:8"},"variableNames":[{"name":"value0","nativeSrc":"2266:6:8","nodeType":"YulIdentifier","src":"2266:6:8"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2125:186:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2161:9:8","nodeType":"YulTypedName","src":"2161:9:8","type":""},{"name":"dataEnd","nativeSrc":"2172:7:8","nodeType":"YulTypedName","src":"2172:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2184:6:8","nodeType":"YulTypedName","src":"2184:6:8","type":""}],"src":"2125:186:8"},{"body":{"nativeSrc":"2400:283:8","nodeType":"YulBlock","src":"2400:283:8","statements":[{"body":{"nativeSrc":"2449:16:8","nodeType":"YulBlock","src":"2449:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2458:1:8","nodeType":"YulLiteral","src":"2458:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2461:1:8","nodeType":"YulLiteral","src":"2461:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2451:6:8","nodeType":"YulIdentifier","src":"2451:6:8"},"nativeSrc":"2451:12:8","nodeType":"YulFunctionCall","src":"2451:12:8"},"nativeSrc":"2451:12:8","nodeType":"YulExpressionStatement","src":"2451:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2428:6:8","nodeType":"YulIdentifier","src":"2428:6:8"},{"kind":"number","nativeSrc":"2436:4:8","nodeType":"YulLiteral","src":"2436:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2424:3:8","nodeType":"YulIdentifier","src":"2424:3:8"},"nativeSrc":"2424:17:8","nodeType":"YulFunctionCall","src":"2424:17:8"},{"name":"end","nativeSrc":"2443:3:8","nodeType":"YulIdentifier","src":"2443:3:8"}],"functionName":{"name":"slt","nativeSrc":"2420:3:8","nodeType":"YulIdentifier","src":"2420:3:8"},"nativeSrc":"2420:27:8","nodeType":"YulFunctionCall","src":"2420:27:8"}],"functionName":{"name":"iszero","nativeSrc":"2413:6:8","nodeType":"YulIdentifier","src":"2413:6:8"},"nativeSrc":"2413:35:8","nodeType":"YulFunctionCall","src":"2413:35:8"},"nativeSrc":"2410:55:8","nodeType":"YulIf","src":"2410:55:8"},{"nativeSrc":"2474:30:8","nodeType":"YulAssignment","src":"2474:30:8","value":{"arguments":[{"name":"offset","nativeSrc":"2497:6:8","nodeType":"YulIdentifier","src":"2497:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"2484:12:8","nodeType":"YulIdentifier","src":"2484:12:8"},"nativeSrc":"2484:20:8","nodeType":"YulFunctionCall","src":"2484:20:8"},"variableNames":[{"name":"length","nativeSrc":"2474:6:8","nodeType":"YulIdentifier","src":"2474:6:8"}]},{"body":{"nativeSrc":"2547:16:8","nodeType":"YulBlock","src":"2547:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2556:1:8","nodeType":"YulLiteral","src":"2556:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2559:1:8","nodeType":"YulLiteral","src":"2559:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2549:6:8","nodeType":"YulIdentifier","src":"2549:6:8"},"nativeSrc":"2549:12:8","nodeType":"YulFunctionCall","src":"2549:12:8"},"nativeSrc":"2549:12:8","nodeType":"YulExpressionStatement","src":"2549:12:8"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2519:6:8","nodeType":"YulIdentifier","src":"2519:6:8"},{"kind":"number","nativeSrc":"2527:18:8","nodeType":"YulLiteral","src":"2527:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2516:2:8","nodeType":"YulIdentifier","src":"2516:2:8"},"nativeSrc":"2516:30:8","nodeType":"YulFunctionCall","src":"2516:30:8"},"nativeSrc":"2513:50:8","nodeType":"YulIf","src":"2513:50:8"},{"nativeSrc":"2572:29:8","nodeType":"YulAssignment","src":"2572:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"2588:6:8","nodeType":"YulIdentifier","src":"2588:6:8"},{"kind":"number","nativeSrc":"2596:4:8","nodeType":"YulLiteral","src":"2596:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2584:3:8","nodeType":"YulIdentifier","src":"2584:3:8"},"nativeSrc":"2584:17:8","nodeType":"YulFunctionCall","src":"2584:17:8"},"variableNames":[{"name":"arrayPos","nativeSrc":"2572:8:8","nodeType":"YulIdentifier","src":"2572:8:8"}]},{"body":{"nativeSrc":"2661:16:8","nodeType":"YulBlock","src":"2661:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2670:1:8","nodeType":"YulLiteral","src":"2670:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2673:1:8","nodeType":"YulLiteral","src":"2673:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2663:6:8","nodeType":"YulIdentifier","src":"2663:6:8"},"nativeSrc":"2663:12:8","nodeType":"YulFunctionCall","src":"2663:12:8"},"nativeSrc":"2663:12:8","nodeType":"YulExpressionStatement","src":"2663:12:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2624:6:8","nodeType":"YulIdentifier","src":"2624:6:8"},{"arguments":[{"kind":"number","nativeSrc":"2636:1:8","nodeType":"YulLiteral","src":"2636:1:8","type":"","value":"5"},{"name":"length","nativeSrc":"2639:6:8","nodeType":"YulIdentifier","src":"2639:6:8"}],"functionName":{"name":"shl","nativeSrc":"2632:3:8","nodeType":"YulIdentifier","src":"2632:3:8"},"nativeSrc":"2632:14:8","nodeType":"YulFunctionCall","src":"2632:14:8"}],"functionName":{"name":"add","nativeSrc":"2620:3:8","nodeType":"YulIdentifier","src":"2620:3:8"},"nativeSrc":"2620:27:8","nodeType":"YulFunctionCall","src":"2620:27:8"},{"kind":"number","nativeSrc":"2649:4:8","nodeType":"YulLiteral","src":"2649:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2616:3:8","nodeType":"YulIdentifier","src":"2616:3:8"},"nativeSrc":"2616:38:8","nodeType":"YulFunctionCall","src":"2616:38:8"},{"name":"end","nativeSrc":"2656:3:8","nodeType":"YulIdentifier","src":"2656:3:8"}],"functionName":{"name":"gt","nativeSrc":"2613:2:8","nodeType":"YulIdentifier","src":"2613:2:8"},"nativeSrc":"2613:47:8","nodeType":"YulFunctionCall","src":"2613:47:8"},"nativeSrc":"2610:67:8","nodeType":"YulIf","src":"2610:67:8"}]},"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"2316:367:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2363:6:8","nodeType":"YulTypedName","src":"2363:6:8","type":""},{"name":"end","nativeSrc":"2371:3:8","nodeType":"YulTypedName","src":"2371:3:8","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"2379:8:8","nodeType":"YulTypedName","src":"2379:8:8","type":""},{"name":"length","nativeSrc":"2389:6:8","nodeType":"YulTypedName","src":"2389:6:8","type":""}],"src":"2316:367:8"},{"body":{"nativeSrc":"2845:611:8","nodeType":"YulBlock","src":"2845:611:8","statements":[{"body":{"nativeSrc":"2891:16:8","nodeType":"YulBlock","src":"2891:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2900:1:8","nodeType":"YulLiteral","src":"2900:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2903:1:8","nodeType":"YulLiteral","src":"2903:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2893:6:8","nodeType":"YulIdentifier","src":"2893:6:8"},"nativeSrc":"2893:12:8","nodeType":"YulFunctionCall","src":"2893:12:8"},"nativeSrc":"2893:12:8","nodeType":"YulExpressionStatement","src":"2893:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2866:7:8","nodeType":"YulIdentifier","src":"2866:7:8"},{"name":"headStart","nativeSrc":"2875:9:8","nodeType":"YulIdentifier","src":"2875:9:8"}],"functionName":{"name":"sub","nativeSrc":"2862:3:8","nodeType":"YulIdentifier","src":"2862:3:8"},"nativeSrc":"2862:23:8","nodeType":"YulFunctionCall","src":"2862:23:8"},{"kind":"number","nativeSrc":"2887:2:8","nodeType":"YulLiteral","src":"2887:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2858:3:8","nodeType":"YulIdentifier","src":"2858:3:8"},"nativeSrc":"2858:32:8","nodeType":"YulFunctionCall","src":"2858:32:8"},"nativeSrc":"2855:52:8","nodeType":"YulIf","src":"2855:52:8"},{"nativeSrc":"2916:37:8","nodeType":"YulVariableDeclaration","src":"2916:37:8","value":{"arguments":[{"name":"headStart","nativeSrc":"2943:9:8","nodeType":"YulIdentifier","src":"2943:9:8"}],"functionName":{"name":"calldataload","nativeSrc":"2930:12:8","nodeType":"YulIdentifier","src":"2930:12:8"},"nativeSrc":"2930:23:8","nodeType":"YulFunctionCall","src":"2930:23:8"},"variables":[{"name":"offset","nativeSrc":"2920:6:8","nodeType":"YulTypedName","src":"2920:6:8","type":""}]},{"body":{"nativeSrc":"2996:16:8","nodeType":"YulBlock","src":"2996:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3005:1:8","nodeType":"YulLiteral","src":"3005:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"3008:1:8","nodeType":"YulLiteral","src":"3008:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2998:6:8","nodeType":"YulIdentifier","src":"2998:6:8"},"nativeSrc":"2998:12:8","nodeType":"YulFunctionCall","src":"2998:12:8"},"nativeSrc":"2998:12:8","nodeType":"YulExpressionStatement","src":"2998:12:8"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2968:6:8","nodeType":"YulIdentifier","src":"2968:6:8"},{"kind":"number","nativeSrc":"2976:18:8","nodeType":"YulLiteral","src":"2976:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2965:2:8","nodeType":"YulIdentifier","src":"2965:2:8"},"nativeSrc":"2965:30:8","nodeType":"YulFunctionCall","src":"2965:30:8"},"nativeSrc":"2962:50:8","nodeType":"YulIf","src":"2962:50:8"},{"nativeSrc":"3021:96:8","nodeType":"YulVariableDeclaration","src":"3021:96:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3089:9:8","nodeType":"YulIdentifier","src":"3089:9:8"},{"name":"offset","nativeSrc":"3100:6:8","nodeType":"YulIdentifier","src":"3100:6:8"}],"functionName":{"name":"add","nativeSrc":"3085:3:8","nodeType":"YulIdentifier","src":"3085:3:8"},"nativeSrc":"3085:22:8","nodeType":"YulFunctionCall","src":"3085:22:8"},{"name":"dataEnd","nativeSrc":"3109:7:8","nodeType":"YulIdentifier","src":"3109:7:8"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"3047:37:8","nodeType":"YulIdentifier","src":"3047:37:8"},"nativeSrc":"3047:70:8","nodeType":"YulFunctionCall","src":"3047:70:8"},"variables":[{"name":"value0_1","nativeSrc":"3025:8:8","nodeType":"YulTypedName","src":"3025:8:8","type":""},{"name":"value1_1","nativeSrc":"3035:8:8","nodeType":"YulTypedName","src":"3035:8:8","type":""}]},{"nativeSrc":"3126:18:8","nodeType":"YulAssignment","src":"3126:18:8","value":{"name":"value0_1","nativeSrc":"3136:8:8","nodeType":"YulIdentifier","src":"3136:8:8"},"variableNames":[{"name":"value0","nativeSrc":"3126:6:8","nodeType":"YulIdentifier","src":"3126:6:8"}]},{"nativeSrc":"3153:18:8","nodeType":"YulAssignment","src":"3153:18:8","value":{"name":"value1_1","nativeSrc":"3163:8:8","nodeType":"YulIdentifier","src":"3163:8:8"},"variableNames":[{"name":"value1","nativeSrc":"3153:6:8","nodeType":"YulIdentifier","src":"3153:6:8"}]},{"nativeSrc":"3180:48:8","nodeType":"YulVariableDeclaration","src":"3180:48:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3213:9:8","nodeType":"YulIdentifier","src":"3213:9:8"},{"kind":"number","nativeSrc":"3224:2:8","nodeType":"YulLiteral","src":"3224:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3209:3:8","nodeType":"YulIdentifier","src":"3209:3:8"},"nativeSrc":"3209:18:8","nodeType":"YulFunctionCall","src":"3209:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"3196:12:8","nodeType":"YulIdentifier","src":"3196:12:8"},"nativeSrc":"3196:32:8","nodeType":"YulFunctionCall","src":"3196:32:8"},"variables":[{"name":"offset_1","nativeSrc":"3184:8:8","nodeType":"YulTypedName","src":"3184:8:8","type":""}]},{"body":{"nativeSrc":"3273:16:8","nodeType":"YulBlock","src":"3273:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3282:1:8","nodeType":"YulLiteral","src":"3282:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"3285:1:8","nodeType":"YulLiteral","src":"3285:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3275:6:8","nodeType":"YulIdentifier","src":"3275:6:8"},"nativeSrc":"3275:12:8","nodeType":"YulFunctionCall","src":"3275:12:8"},"nativeSrc":"3275:12:8","nodeType":"YulExpressionStatement","src":"3275:12:8"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"3243:8:8","nodeType":"YulIdentifier","src":"3243:8:8"},{"kind":"number","nativeSrc":"3253:18:8","nodeType":"YulLiteral","src":"3253:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3240:2:8","nodeType":"YulIdentifier","src":"3240:2:8"},"nativeSrc":"3240:32:8","nodeType":"YulFunctionCall","src":"3240:32:8"},"nativeSrc":"3237:52:8","nodeType":"YulIf","src":"3237:52:8"},{"nativeSrc":"3298:98:8","nodeType":"YulVariableDeclaration","src":"3298:98:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3366:9:8","nodeType":"YulIdentifier","src":"3366:9:8"},{"name":"offset_1","nativeSrc":"3377:8:8","nodeType":"YulIdentifier","src":"3377:8:8"}],"functionName":{"name":"add","nativeSrc":"3362:3:8","nodeType":"YulIdentifier","src":"3362:3:8"},"nativeSrc":"3362:24:8","nodeType":"YulFunctionCall","src":"3362:24:8"},{"name":"dataEnd","nativeSrc":"3388:7:8","nodeType":"YulIdentifier","src":"3388:7:8"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"3324:37:8","nodeType":"YulIdentifier","src":"3324:37:8"},"nativeSrc":"3324:72:8","nodeType":"YulFunctionCall","src":"3324:72:8"},"variables":[{"name":"value2_1","nativeSrc":"3302:8:8","nodeType":"YulTypedName","src":"3302:8:8","type":""},{"name":"value3_1","nativeSrc":"3312:8:8","nodeType":"YulTypedName","src":"3312:8:8","type":""}]},{"nativeSrc":"3405:18:8","nodeType":"YulAssignment","src":"3405:18:8","value":{"name":"value2_1","nativeSrc":"3415:8:8","nodeType":"YulIdentifier","src":"3415:8:8"},"variableNames":[{"name":"value2","nativeSrc":"3405:6:8","nodeType":"YulIdentifier","src":"3405:6:8"}]},{"nativeSrc":"3432:18:8","nodeType":"YulAssignment","src":"3432:18:8","value":{"name":"value3_1","nativeSrc":"3442:8:8","nodeType":"YulIdentifier","src":"3442:8:8"},"variableNames":[{"name":"value3","nativeSrc":"3432:6:8","nodeType":"YulIdentifier","src":"3432:6:8"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"2688:768:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2787:9:8","nodeType":"YulTypedName","src":"2787:9:8","type":""},{"name":"dataEnd","nativeSrc":"2798:7:8","nodeType":"YulTypedName","src":"2798:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2810:6:8","nodeType":"YulTypedName","src":"2810:6:8","type":""},{"name":"value1","nativeSrc":"2818:6:8","nodeType":"YulTypedName","src":"2818:6:8","type":""},{"name":"value2","nativeSrc":"2826:6:8","nodeType":"YulTypedName","src":"2826:6:8","type":""},{"name":"value3","nativeSrc":"2834:6:8","nodeType":"YulTypedName","src":"2834:6:8","type":""}],"src":"2688:768:8"},{"body":{"nativeSrc":"3576:102:8","nodeType":"YulBlock","src":"3576:102:8","statements":[{"nativeSrc":"3586:26:8","nodeType":"YulAssignment","src":"3586:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3598:9:8","nodeType":"YulIdentifier","src":"3598:9:8"},{"kind":"number","nativeSrc":"3609:2:8","nodeType":"YulLiteral","src":"3609:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3594:3:8","nodeType":"YulIdentifier","src":"3594:3:8"},"nativeSrc":"3594:18:8","nodeType":"YulFunctionCall","src":"3594:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3586:4:8","nodeType":"YulIdentifier","src":"3586:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3628:9:8","nodeType":"YulIdentifier","src":"3628:9:8"},{"arguments":[{"name":"value0","nativeSrc":"3643:6:8","nodeType":"YulIdentifier","src":"3643:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3659:3:8","nodeType":"YulLiteral","src":"3659:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"3664:1:8","nodeType":"YulLiteral","src":"3664:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3655:3:8","nodeType":"YulIdentifier","src":"3655:3:8"},"nativeSrc":"3655:11:8","nodeType":"YulFunctionCall","src":"3655:11:8"},{"kind":"number","nativeSrc":"3668:1:8","nodeType":"YulLiteral","src":"3668:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3651:3:8","nodeType":"YulIdentifier","src":"3651:3:8"},"nativeSrc":"3651:19:8","nodeType":"YulFunctionCall","src":"3651:19:8"}],"functionName":{"name":"and","nativeSrc":"3639:3:8","nodeType":"YulIdentifier","src":"3639:3:8"},"nativeSrc":"3639:32:8","nodeType":"YulFunctionCall","src":"3639:32:8"}],"functionName":{"name":"mstore","nativeSrc":"3621:6:8","nodeType":"YulIdentifier","src":"3621:6:8"},"nativeSrc":"3621:51:8","nodeType":"YulFunctionCall","src":"3621:51:8"},"nativeSrc":"3621:51:8","nodeType":"YulExpressionStatement","src":"3621:51:8"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed","nativeSrc":"3461:217:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3545:9:8","nodeType":"YulTypedName","src":"3545:9:8","type":""},{"name":"value0","nativeSrc":"3556:6:8","nodeType":"YulTypedName","src":"3556:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3567:4:8","nodeType":"YulTypedName","src":"3567:4:8","type":""}],"src":"3461:217:8"},{"body":{"nativeSrc":"3715:95:8","nodeType":"YulBlock","src":"3715:95:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3732:1:8","nodeType":"YulLiteral","src":"3732:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3739:3:8","nodeType":"YulLiteral","src":"3739:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"3744:10:8","nodeType":"YulLiteral","src":"3744:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3735:3:8","nodeType":"YulIdentifier","src":"3735:3:8"},"nativeSrc":"3735:20:8","nodeType":"YulFunctionCall","src":"3735:20:8"}],"functionName":{"name":"mstore","nativeSrc":"3725:6:8","nodeType":"YulIdentifier","src":"3725:6:8"},"nativeSrc":"3725:31:8","nodeType":"YulFunctionCall","src":"3725:31:8"},"nativeSrc":"3725:31:8","nodeType":"YulExpressionStatement","src":"3725:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3772:1:8","nodeType":"YulLiteral","src":"3772:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"3775:4:8","nodeType":"YulLiteral","src":"3775:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"3765:6:8","nodeType":"YulIdentifier","src":"3765:6:8"},"nativeSrc":"3765:15:8","nodeType":"YulFunctionCall","src":"3765:15:8"},"nativeSrc":"3765:15:8","nodeType":"YulExpressionStatement","src":"3765:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3796:1:8","nodeType":"YulLiteral","src":"3796:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"3799:4:8","nodeType":"YulLiteral","src":"3799:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3789:6:8","nodeType":"YulIdentifier","src":"3789:6:8"},"nativeSrc":"3789:15:8","nodeType":"YulFunctionCall","src":"3789:15:8"},"nativeSrc":"3789:15:8","nodeType":"YulExpressionStatement","src":"3789:15:8"}]},"name":"panic_error_0x32","nativeSrc":"3683:127:8","nodeType":"YulFunctionDefinition","src":"3683:127:8"},{"body":{"nativeSrc":"3863:174:8","nodeType":"YulBlock","src":"3863:174:8","statements":[{"nativeSrc":"3873:16:8","nodeType":"YulAssignment","src":"3873:16:8","value":{"arguments":[{"name":"x","nativeSrc":"3884:1:8","nodeType":"YulIdentifier","src":"3884:1:8"},{"name":"y","nativeSrc":"3887:1:8","nodeType":"YulIdentifier","src":"3887:1:8"}],"functionName":{"name":"add","nativeSrc":"3880:3:8","nodeType":"YulIdentifier","src":"3880:3:8"},"nativeSrc":"3880:9:8","nodeType":"YulFunctionCall","src":"3880:9:8"},"variableNames":[{"name":"sum","nativeSrc":"3873:3:8","nodeType":"YulIdentifier","src":"3873:3:8"}]},{"body":{"nativeSrc":"3920:111:8","nodeType":"YulBlock","src":"3920:111:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3941:1:8","nodeType":"YulLiteral","src":"3941:1:8","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3948:3:8","nodeType":"YulLiteral","src":"3948:3:8","type":"","value":"224"},{"kind":"number","nativeSrc":"3953:10:8","nodeType":"YulLiteral","src":"3953:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3944:3:8","nodeType":"YulIdentifier","src":"3944:3:8"},"nativeSrc":"3944:20:8","nodeType":"YulFunctionCall","src":"3944:20:8"}],"functionName":{"name":"mstore","nativeSrc":"3934:6:8","nodeType":"YulIdentifier","src":"3934:6:8"},"nativeSrc":"3934:31:8","nodeType":"YulFunctionCall","src":"3934:31:8"},"nativeSrc":"3934:31:8","nodeType":"YulExpressionStatement","src":"3934:31:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3985:1:8","nodeType":"YulLiteral","src":"3985:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"3988:4:8","nodeType":"YulLiteral","src":"3988:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3978:6:8","nodeType":"YulIdentifier","src":"3978:6:8"},"nativeSrc":"3978:15:8","nodeType":"YulFunctionCall","src":"3978:15:8"},"nativeSrc":"3978:15:8","nodeType":"YulExpressionStatement","src":"3978:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4013:1:8","nodeType":"YulLiteral","src":"4013:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"4016:4:8","nodeType":"YulLiteral","src":"4016:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4006:6:8","nodeType":"YulIdentifier","src":"4006:6:8"},"nativeSrc":"4006:15:8","nodeType":"YulFunctionCall","src":"4006:15:8"},"nativeSrc":"4006:15:8","nodeType":"YulExpressionStatement","src":"4006:15:8"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3904:1:8","nodeType":"YulIdentifier","src":"3904:1:8"},{"name":"sum","nativeSrc":"3907:3:8","nodeType":"YulIdentifier","src":"3907:3:8"}],"functionName":{"name":"gt","nativeSrc":"3901:2:8","nodeType":"YulIdentifier","src":"3901:2:8"},"nativeSrc":"3901:10:8","nodeType":"YulFunctionCall","src":"3901:10:8"},"nativeSrc":"3898:133:8","nodeType":"YulIf","src":"3898:133:8"}]},"name":"checked_add_t_uint256","nativeSrc":"3815:222:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3846:1:8","nodeType":"YulTypedName","src":"3846:1:8","type":""},{"name":"y","nativeSrc":"3849:1:8","nodeType":"YulTypedName","src":"3849:1:8","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3855:3:8","nodeType":"YulTypedName","src":"3855:3:8","type":""}],"src":"3815:222:8"},{"body":{"nativeSrc":"4123:103:8","nodeType":"YulBlock","src":"4123:103:8","statements":[{"body":{"nativeSrc":"4169:16:8","nodeType":"YulBlock","src":"4169:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4178:1:8","nodeType":"YulLiteral","src":"4178:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"4181:1:8","nodeType":"YulLiteral","src":"4181:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4171:6:8","nodeType":"YulIdentifier","src":"4171:6:8"},"nativeSrc":"4171:12:8","nodeType":"YulFunctionCall","src":"4171:12:8"},"nativeSrc":"4171:12:8","nodeType":"YulExpressionStatement","src":"4171:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4144:7:8","nodeType":"YulIdentifier","src":"4144:7:8"},{"name":"headStart","nativeSrc":"4153:9:8","nodeType":"YulIdentifier","src":"4153:9:8"}],"functionName":{"name":"sub","nativeSrc":"4140:3:8","nodeType":"YulIdentifier","src":"4140:3:8"},"nativeSrc":"4140:23:8","nodeType":"YulFunctionCall","src":"4140:23:8"},{"kind":"number","nativeSrc":"4165:2:8","nodeType":"YulLiteral","src":"4165:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4136:3:8","nodeType":"YulIdentifier","src":"4136:3:8"},"nativeSrc":"4136:32:8","nodeType":"YulFunctionCall","src":"4136:32:8"},"nativeSrc":"4133:52:8","nodeType":"YulIf","src":"4133:52:8"},{"nativeSrc":"4194:26:8","nodeType":"YulAssignment","src":"4194:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"4210:9:8","nodeType":"YulIdentifier","src":"4210:9:8"}],"functionName":{"name":"mload","nativeSrc":"4204:5:8","nodeType":"YulIdentifier","src":"4204:5:8"},"nativeSrc":"4204:16:8","nodeType":"YulFunctionCall","src":"4204:16:8"},"variableNames":[{"name":"value0","nativeSrc":"4194:6:8","nodeType":"YulIdentifier","src":"4194:6:8"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"4042:184:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4089:9:8","nodeType":"YulTypedName","src":"4089:9:8","type":""},{"name":"dataEnd","nativeSrc":"4100:7:8","nodeType":"YulTypedName","src":"4100:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4112:6:8","nodeType":"YulTypedName","src":"4112:6:8","type":""}],"src":"4042:184:8"},{"body":{"nativeSrc":"4405:179:8","nodeType":"YulBlock","src":"4405:179:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4422:9:8","nodeType":"YulIdentifier","src":"4422:9:8"},{"kind":"number","nativeSrc":"4433:2:8","nodeType":"YulLiteral","src":"4433:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4415:6:8","nodeType":"YulIdentifier","src":"4415:6:8"},"nativeSrc":"4415:21:8","nodeType":"YulFunctionCall","src":"4415:21:8"},"nativeSrc":"4415:21:8","nodeType":"YulExpressionStatement","src":"4415:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4456:9:8","nodeType":"YulIdentifier","src":"4456:9:8"},{"kind":"number","nativeSrc":"4467:2:8","nodeType":"YulLiteral","src":"4467:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4452:3:8","nodeType":"YulIdentifier","src":"4452:3:8"},"nativeSrc":"4452:18:8","nodeType":"YulFunctionCall","src":"4452:18:8"},{"kind":"number","nativeSrc":"4472:2:8","nodeType":"YulLiteral","src":"4472:2:8","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"4445:6:8","nodeType":"YulIdentifier","src":"4445:6:8"},"nativeSrc":"4445:30:8","nodeType":"YulFunctionCall","src":"4445:30:8"},"nativeSrc":"4445:30:8","nodeType":"YulExpressionStatement","src":"4445:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4495:9:8","nodeType":"YulIdentifier","src":"4495:9:8"},{"kind":"number","nativeSrc":"4506:2:8","nodeType":"YulLiteral","src":"4506:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4491:3:8","nodeType":"YulIdentifier","src":"4491:3:8"},"nativeSrc":"4491:18:8","nodeType":"YulFunctionCall","src":"4491:18:8"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","kind":"string","nativeSrc":"4511:31:8","nodeType":"YulLiteral","src":"4511:31:8","type":"","value":"Amount must be greater than 0"}],"functionName":{"name":"mstore","nativeSrc":"4484:6:8","nodeType":"YulIdentifier","src":"4484:6:8"},"nativeSrc":"4484:59:8","nodeType":"YulFunctionCall","src":"4484:59:8"},"nativeSrc":"4484:59:8","nodeType":"YulExpressionStatement","src":"4484:59:8"},{"nativeSrc":"4552:26:8","nodeType":"YulAssignment","src":"4552:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"4564:9:8","nodeType":"YulIdentifier","src":"4564:9:8"},{"kind":"number","nativeSrc":"4575:2:8","nodeType":"YulLiteral","src":"4575:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4560:3:8","nodeType":"YulIdentifier","src":"4560:3:8"},"nativeSrc":"4560:18:8","nodeType":"YulFunctionCall","src":"4560:18:8"},"variableNames":[{"name":"tail","nativeSrc":"4552:4:8","nodeType":"YulIdentifier","src":"4552:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4231:353:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4382:9:8","nodeType":"YulTypedName","src":"4382:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4396:4:8","nodeType":"YulTypedName","src":"4396:4:8","type":""}],"src":"4231:353:8"},{"body":{"nativeSrc":"4718:145:8","nodeType":"YulBlock","src":"4718:145:8","statements":[{"nativeSrc":"4728:26:8","nodeType":"YulAssignment","src":"4728:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"4740:9:8","nodeType":"YulIdentifier","src":"4740:9:8"},{"kind":"number","nativeSrc":"4751:2:8","nodeType":"YulLiteral","src":"4751:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4736:3:8","nodeType":"YulIdentifier","src":"4736:3:8"},"nativeSrc":"4736:18:8","nodeType":"YulFunctionCall","src":"4736:18:8"},"variableNames":[{"name":"tail","nativeSrc":"4728:4:8","nodeType":"YulIdentifier","src":"4728:4:8"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4770:9:8","nodeType":"YulIdentifier","src":"4770:9:8"},{"arguments":[{"name":"value0","nativeSrc":"4785:6:8","nodeType":"YulIdentifier","src":"4785:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4801:3:8","nodeType":"YulLiteral","src":"4801:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"4806:1:8","nodeType":"YulLiteral","src":"4806:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4797:3:8","nodeType":"YulIdentifier","src":"4797:3:8"},"nativeSrc":"4797:11:8","nodeType":"YulFunctionCall","src":"4797:11:8"},{"kind":"number","nativeSrc":"4810:1:8","nodeType":"YulLiteral","src":"4810:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4793:3:8","nodeType":"YulIdentifier","src":"4793:3:8"},"nativeSrc":"4793:19:8","nodeType":"YulFunctionCall","src":"4793:19:8"}],"functionName":{"name":"and","nativeSrc":"4781:3:8","nodeType":"YulIdentifier","src":"4781:3:8"},"nativeSrc":"4781:32:8","nodeType":"YulFunctionCall","src":"4781:32:8"}],"functionName":{"name":"mstore","nativeSrc":"4763:6:8","nodeType":"YulIdentifier","src":"4763:6:8"},"nativeSrc":"4763:51:8","nodeType":"YulFunctionCall","src":"4763:51:8"},"nativeSrc":"4763:51:8","nodeType":"YulExpressionStatement","src":"4763:51:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4834:9:8","nodeType":"YulIdentifier","src":"4834:9:8"},{"kind":"number","nativeSrc":"4845:2:8","nodeType":"YulLiteral","src":"4845:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4830:3:8","nodeType":"YulIdentifier","src":"4830:3:8"},"nativeSrc":"4830:18:8","nodeType":"YulFunctionCall","src":"4830:18:8"},{"name":"value1","nativeSrc":"4850:6:8","nodeType":"YulIdentifier","src":"4850:6:8"}],"functionName":{"name":"mstore","nativeSrc":"4823:6:8","nodeType":"YulIdentifier","src":"4823:6:8"},"nativeSrc":"4823:34:8","nodeType":"YulFunctionCall","src":"4823:34:8"},"nativeSrc":"4823:34:8","nodeType":"YulExpressionStatement","src":"4823:34:8"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4589:274:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4679:9:8","nodeType":"YulTypedName","src":"4679:9:8","type":""},{"name":"value1","nativeSrc":"4690:6:8","nodeType":"YulTypedName","src":"4690:6:8","type":""},{"name":"value0","nativeSrc":"4698:6:8","nodeType":"YulTypedName","src":"4698:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4709:4:8","nodeType":"YulTypedName","src":"4709:4:8","type":""}],"src":"4589:274:8"},{"body":{"nativeSrc":"4946:199:8","nodeType":"YulBlock","src":"4946:199:8","statements":[{"body":{"nativeSrc":"4992:16:8","nodeType":"YulBlock","src":"4992:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5001:1:8","nodeType":"YulLiteral","src":"5001:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"5004:1:8","nodeType":"YulLiteral","src":"5004:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4994:6:8","nodeType":"YulIdentifier","src":"4994:6:8"},"nativeSrc":"4994:12:8","nodeType":"YulFunctionCall","src":"4994:12:8"},"nativeSrc":"4994:12:8","nodeType":"YulExpressionStatement","src":"4994:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4967:7:8","nodeType":"YulIdentifier","src":"4967:7:8"},{"name":"headStart","nativeSrc":"4976:9:8","nodeType":"YulIdentifier","src":"4976:9:8"}],"functionName":{"name":"sub","nativeSrc":"4963:3:8","nodeType":"YulIdentifier","src":"4963:3:8"},"nativeSrc":"4963:23:8","nodeType":"YulFunctionCall","src":"4963:23:8"},{"kind":"number","nativeSrc":"4988:2:8","nodeType":"YulLiteral","src":"4988:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4959:3:8","nodeType":"YulIdentifier","src":"4959:3:8"},"nativeSrc":"4959:32:8","nodeType":"YulFunctionCall","src":"4959:32:8"},"nativeSrc":"4956:52:8","nodeType":"YulIf","src":"4956:52:8"},{"nativeSrc":"5017:29:8","nodeType":"YulVariableDeclaration","src":"5017:29:8","value":{"arguments":[{"name":"headStart","nativeSrc":"5036:9:8","nodeType":"YulIdentifier","src":"5036:9:8"}],"functionName":{"name":"mload","nativeSrc":"5030:5:8","nodeType":"YulIdentifier","src":"5030:5:8"},"nativeSrc":"5030:16:8","nodeType":"YulFunctionCall","src":"5030:16:8"},"variables":[{"name":"value","nativeSrc":"5021:5:8","nodeType":"YulTypedName","src":"5021:5:8","type":""}]},{"body":{"nativeSrc":"5099:16:8","nodeType":"YulBlock","src":"5099:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5108:1:8","nodeType":"YulLiteral","src":"5108:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"5111:1:8","nodeType":"YulLiteral","src":"5111:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5101:6:8","nodeType":"YulIdentifier","src":"5101:6:8"},"nativeSrc":"5101:12:8","nodeType":"YulFunctionCall","src":"5101:12:8"},"nativeSrc":"5101:12:8","nodeType":"YulExpressionStatement","src":"5101:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5068:5:8","nodeType":"YulIdentifier","src":"5068:5:8"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5089:5:8","nodeType":"YulIdentifier","src":"5089:5:8"}],"functionName":{"name":"iszero","nativeSrc":"5082:6:8","nodeType":"YulIdentifier","src":"5082:6:8"},"nativeSrc":"5082:13:8","nodeType":"YulFunctionCall","src":"5082:13:8"}],"functionName":{"name":"iszero","nativeSrc":"5075:6:8","nodeType":"YulIdentifier","src":"5075:6:8"},"nativeSrc":"5075:21:8","nodeType":"YulFunctionCall","src":"5075:21:8"}],"functionName":{"name":"eq","nativeSrc":"5065:2:8","nodeType":"YulIdentifier","src":"5065:2:8"},"nativeSrc":"5065:32:8","nodeType":"YulFunctionCall","src":"5065:32:8"}],"functionName":{"name":"iszero","nativeSrc":"5058:6:8","nodeType":"YulIdentifier","src":"5058:6:8"},"nativeSrc":"5058:40:8","nodeType":"YulFunctionCall","src":"5058:40:8"},"nativeSrc":"5055:60:8","nodeType":"YulIf","src":"5055:60:8"},{"nativeSrc":"5124:15:8","nodeType":"YulAssignment","src":"5124:15:8","value":{"name":"value","nativeSrc":"5134:5:8","nodeType":"YulIdentifier","src":"5134:5:8"},"variableNames":[{"name":"value0","nativeSrc":"5124:6:8","nodeType":"YulIdentifier","src":"5124:6:8"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"4868:277:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4912:9:8","nodeType":"YulTypedName","src":"4912:9:8","type":""},{"name":"dataEnd","nativeSrc":"4923:7:8","nodeType":"YulTypedName","src":"4923:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4935:6:8","nodeType":"YulTypedName","src":"4935:6:8","type":""}],"src":"4868:277:8"},{"body":{"nativeSrc":"5324:181:8","nodeType":"YulBlock","src":"5324:181:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5341:9:8","nodeType":"YulIdentifier","src":"5341:9:8"},{"kind":"number","nativeSrc":"5352:2:8","nodeType":"YulLiteral","src":"5352:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5334:6:8","nodeType":"YulIdentifier","src":"5334:6:8"},"nativeSrc":"5334:21:8","nodeType":"YulFunctionCall","src":"5334:21:8"},"nativeSrc":"5334:21:8","nodeType":"YulExpressionStatement","src":"5334:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5375:9:8","nodeType":"YulIdentifier","src":"5375:9:8"},{"kind":"number","nativeSrc":"5386:2:8","nodeType":"YulLiteral","src":"5386:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5371:3:8","nodeType":"YulIdentifier","src":"5371:3:8"},"nativeSrc":"5371:18:8","nodeType":"YulFunctionCall","src":"5371:18:8"},{"kind":"number","nativeSrc":"5391:2:8","nodeType":"YulLiteral","src":"5391:2:8","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"5364:6:8","nodeType":"YulIdentifier","src":"5364:6:8"},"nativeSrc":"5364:30:8","nodeType":"YulFunctionCall","src":"5364:30:8"},"nativeSrc":"5364:30:8","nodeType":"YulExpressionStatement","src":"5364:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5414:9:8","nodeType":"YulIdentifier","src":"5414:9:8"},{"kind":"number","nativeSrc":"5425:2:8","nodeType":"YulLiteral","src":"5425:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5410:3:8","nodeType":"YulIdentifier","src":"5410:3:8"},"nativeSrc":"5410:18:8","nodeType":"YulFunctionCall","src":"5410:18:8"},{"hexValue":"576974686472617720616c6c20776173206e6f74207375636365737366756c","kind":"string","nativeSrc":"5430:33:8","nodeType":"YulLiteral","src":"5430:33:8","type":"","value":"Withdraw all was not successful"}],"functionName":{"name":"mstore","nativeSrc":"5403:6:8","nodeType":"YulIdentifier","src":"5403:6:8"},"nativeSrc":"5403:61:8","nodeType":"YulFunctionCall","src":"5403:61:8"},"nativeSrc":"5403:61:8","nodeType":"YulExpressionStatement","src":"5403:61:8"},{"nativeSrc":"5473:26:8","nodeType":"YulAssignment","src":"5473:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"5485:9:8","nodeType":"YulIdentifier","src":"5485:9:8"},{"kind":"number","nativeSrc":"5496:2:8","nodeType":"YulLiteral","src":"5496:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5481:3:8","nodeType":"YulIdentifier","src":"5481:3:8"},"nativeSrc":"5481:18:8","nodeType":"YulFunctionCall","src":"5481:18:8"},"variableNames":[{"name":"tail","nativeSrc":"5473:4:8","nodeType":"YulIdentifier","src":"5473:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_d19e9a50265a9fdef5462eabd5cfd283435423cee1a1dd9ecc3e25e903b7d47e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5150:355:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5301:9:8","nodeType":"YulTypedName","src":"5301:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5315:4:8","nodeType":"YulTypedName","src":"5315:4:8","type":""}],"src":"5150:355:8"},{"body":{"nativeSrc":"5684:179:8","nodeType":"YulBlock","src":"5684:179:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5701:9:8","nodeType":"YulIdentifier","src":"5701:9:8"},{"kind":"number","nativeSrc":"5712:2:8","nodeType":"YulLiteral","src":"5712:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5694:6:8","nodeType":"YulIdentifier","src":"5694:6:8"},"nativeSrc":"5694:21:8","nodeType":"YulFunctionCall","src":"5694:21:8"},"nativeSrc":"5694:21:8","nodeType":"YulExpressionStatement","src":"5694:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5735:9:8","nodeType":"YulIdentifier","src":"5735:9:8"},{"kind":"number","nativeSrc":"5746:2:8","nodeType":"YulLiteral","src":"5746:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5731:3:8","nodeType":"YulIdentifier","src":"5731:3:8"},"nativeSrc":"5731:18:8","nodeType":"YulFunctionCall","src":"5731:18:8"},{"kind":"number","nativeSrc":"5751:2:8","nodeType":"YulLiteral","src":"5751:2:8","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"5724:6:8","nodeType":"YulIdentifier","src":"5724:6:8"},"nativeSrc":"5724:30:8","nodeType":"YulFunctionCall","src":"5724:30:8"},"nativeSrc":"5724:30:8","nodeType":"YulExpressionStatement","src":"5724:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5774:9:8","nodeType":"YulIdentifier","src":"5774:9:8"},{"kind":"number","nativeSrc":"5785:2:8","nodeType":"YulLiteral","src":"5785:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5770:3:8","nodeType":"YulIdentifier","src":"5770:3:8"},"nativeSrc":"5770:18:8","nodeType":"YulFunctionCall","src":"5770:18:8"},{"hexValue":"496e73756666696369656e7420636f6e74726163742062616c616e6365","kind":"string","nativeSrc":"5790:31:8","nodeType":"YulLiteral","src":"5790:31:8","type":"","value":"Insufficient contract balance"}],"functionName":{"name":"mstore","nativeSrc":"5763:6:8","nodeType":"YulIdentifier","src":"5763:6:8"},"nativeSrc":"5763:59:8","nodeType":"YulFunctionCall","src":"5763:59:8"},"nativeSrc":"5763:59:8","nodeType":"YulExpressionStatement","src":"5763:59:8"},{"nativeSrc":"5831:26:8","nodeType":"YulAssignment","src":"5831:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"5843:9:8","nodeType":"YulIdentifier","src":"5843:9:8"},{"kind":"number","nativeSrc":"5854:2:8","nodeType":"YulLiteral","src":"5854:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5839:3:8","nodeType":"YulIdentifier","src":"5839:3:8"},"nativeSrc":"5839:18:8","nodeType":"YulFunctionCall","src":"5839:18:8"},"variableNames":[{"name":"tail","nativeSrc":"5831:4:8","nodeType":"YulIdentifier","src":"5831:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5510:353:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5661:9:8","nodeType":"YulTypedName","src":"5661:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5675:4:8","nodeType":"YulTypedName","src":"5675:4:8","type":""}],"src":"5510:353:8"},{"body":{"nativeSrc":"6042:177:8","nodeType":"YulBlock","src":"6042:177:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6059:9:8","nodeType":"YulIdentifier","src":"6059:9:8"},{"kind":"number","nativeSrc":"6070:2:8","nodeType":"YulLiteral","src":"6070:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6052:6:8","nodeType":"YulIdentifier","src":"6052:6:8"},"nativeSrc":"6052:21:8","nodeType":"YulFunctionCall","src":"6052:21:8"},"nativeSrc":"6052:21:8","nodeType":"YulExpressionStatement","src":"6052:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6093:9:8","nodeType":"YulIdentifier","src":"6093:9:8"},{"kind":"number","nativeSrc":"6104:2:8","nodeType":"YulLiteral","src":"6104:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6089:3:8","nodeType":"YulIdentifier","src":"6089:3:8"},"nativeSrc":"6089:18:8","nodeType":"YulFunctionCall","src":"6089:18:8"},{"kind":"number","nativeSrc":"6109:2:8","nodeType":"YulLiteral","src":"6109:2:8","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"6082:6:8","nodeType":"YulIdentifier","src":"6082:6:8"},"nativeSrc":"6082:30:8","nodeType":"YulFunctionCall","src":"6082:30:8"},"nativeSrc":"6082:30:8","nodeType":"YulExpressionStatement","src":"6082:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6132:9:8","nodeType":"YulIdentifier","src":"6132:9:8"},{"kind":"number","nativeSrc":"6143:2:8","nodeType":"YulLiteral","src":"6143:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6128:3:8","nodeType":"YulIdentifier","src":"6128:3:8"},"nativeSrc":"6128:18:8","nodeType":"YulFunctionCall","src":"6128:18:8"},{"hexValue":"576974686472617720776173206e6f74207375636365737366756c","kind":"string","nativeSrc":"6148:29:8","nodeType":"YulLiteral","src":"6148:29:8","type":"","value":"Withdraw was not successful"}],"functionName":{"name":"mstore","nativeSrc":"6121:6:8","nodeType":"YulIdentifier","src":"6121:6:8"},"nativeSrc":"6121:57:8","nodeType":"YulFunctionCall","src":"6121:57:8"},"nativeSrc":"6121:57:8","nodeType":"YulExpressionStatement","src":"6121:57:8"},{"nativeSrc":"6187:26:8","nodeType":"YulAssignment","src":"6187:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"6199:9:8","nodeType":"YulIdentifier","src":"6199:9:8"},{"kind":"number","nativeSrc":"6210:2:8","nodeType":"YulLiteral","src":"6210:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6195:3:8","nodeType":"YulIdentifier","src":"6195:3:8"},"nativeSrc":"6195:18:8","nodeType":"YulFunctionCall","src":"6195:18:8"},"variableNames":[{"name":"tail","nativeSrc":"6187:4:8","nodeType":"YulIdentifier","src":"6187:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_bcdbd0a79fce88b738eb2b21f26091c667c14f193cecf0fa3d9b5d94ed4d488a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5868:351:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6019:9:8","nodeType":"YulTypedName","src":"6019:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6033:4:8","nodeType":"YulTypedName","src":"6033:4:8","type":""}],"src":"5868:351:8"},{"body":{"nativeSrc":"6398:180:8","nodeType":"YulBlock","src":"6398:180:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6415:9:8","nodeType":"YulIdentifier","src":"6415:9:8"},{"kind":"number","nativeSrc":"6426:2:8","nodeType":"YulLiteral","src":"6426:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6408:6:8","nodeType":"YulIdentifier","src":"6408:6:8"},"nativeSrc":"6408:21:8","nodeType":"YulFunctionCall","src":"6408:21:8"},"nativeSrc":"6408:21:8","nodeType":"YulExpressionStatement","src":"6408:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6449:9:8","nodeType":"YulIdentifier","src":"6449:9:8"},{"kind":"number","nativeSrc":"6460:2:8","nodeType":"YulLiteral","src":"6460:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6445:3:8","nodeType":"YulIdentifier","src":"6445:3:8"},"nativeSrc":"6445:18:8","nodeType":"YulFunctionCall","src":"6445:18:8"},{"kind":"number","nativeSrc":"6465:2:8","nodeType":"YulLiteral","src":"6465:2:8","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"6438:6:8","nodeType":"YulIdentifier","src":"6438:6:8"},"nativeSrc":"6438:30:8","nodeType":"YulFunctionCall","src":"6438:30:8"},"nativeSrc":"6438:30:8","nodeType":"YulExpressionStatement","src":"6438:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6488:9:8","nodeType":"YulIdentifier","src":"6488:9:8"},{"kind":"number","nativeSrc":"6499:2:8","nodeType":"YulLiteral","src":"6499:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6484:3:8","nodeType":"YulIdentifier","src":"6484:3:8"},"nativeSrc":"6484:18:8","nodeType":"YulFunctionCall","src":"6484:18:8"},{"hexValue":"4c656e67746873206f662061727261797320646f206e6f74206d61746368","kind":"string","nativeSrc":"6504:32:8","nodeType":"YulLiteral","src":"6504:32:8","type":"","value":"Lengths of arrays do not match"}],"functionName":{"name":"mstore","nativeSrc":"6477:6:8","nodeType":"YulIdentifier","src":"6477:6:8"},"nativeSrc":"6477:60:8","nodeType":"YulFunctionCall","src":"6477:60:8"},"nativeSrc":"6477:60:8","nodeType":"YulExpressionStatement","src":"6477:60:8"},{"nativeSrc":"6546:26:8","nodeType":"YulAssignment","src":"6546:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"6558:9:8","nodeType":"YulIdentifier","src":"6558:9:8"},{"kind":"number","nativeSrc":"6569:2:8","nodeType":"YulLiteral","src":"6569:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6554:3:8","nodeType":"YulIdentifier","src":"6554:3:8"},"nativeSrc":"6554:18:8","nodeType":"YulFunctionCall","src":"6554:18:8"},"variableNames":[{"name":"tail","nativeSrc":"6546:4:8","nodeType":"YulIdentifier","src":"6546:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_aa03b6ea72e227ce35a48715f1d81ef0396ad12fd8f4c133eb73c8d550363fc0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6224:354:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6375:9:8","nodeType":"YulTypedName","src":"6375:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6389:4:8","nodeType":"YulTypedName","src":"6389:4:8","type":""}],"src":"6224:354:8"},{"body":{"nativeSrc":"6757:224:8","nodeType":"YulBlock","src":"6757:224:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6774:9:8","nodeType":"YulIdentifier","src":"6774:9:8"},{"kind":"number","nativeSrc":"6785:2:8","nodeType":"YulLiteral","src":"6785:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6767:6:8","nodeType":"YulIdentifier","src":"6767:6:8"},"nativeSrc":"6767:21:8","nodeType":"YulFunctionCall","src":"6767:21:8"},"nativeSrc":"6767:21:8","nodeType":"YulExpressionStatement","src":"6767:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6808:9:8","nodeType":"YulIdentifier","src":"6808:9:8"},{"kind":"number","nativeSrc":"6819:2:8","nodeType":"YulLiteral","src":"6819:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6804:3:8","nodeType":"YulIdentifier","src":"6804:3:8"},"nativeSrc":"6804:18:8","nodeType":"YulFunctionCall","src":"6804:18:8"},{"kind":"number","nativeSrc":"6824:2:8","nodeType":"YulLiteral","src":"6824:2:8","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"6797:6:8","nodeType":"YulIdentifier","src":"6797:6:8"},"nativeSrc":"6797:30:8","nodeType":"YulFunctionCall","src":"6797:30:8"},"nativeSrc":"6797:30:8","nodeType":"YulExpressionStatement","src":"6797:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6847:9:8","nodeType":"YulIdentifier","src":"6847:9:8"},{"kind":"number","nativeSrc":"6858:2:8","nodeType":"YulLiteral","src":"6858:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6843:3:8","nodeType":"YulIdentifier","src":"6843:3:8"},"nativeSrc":"6843:18:8","nodeType":"YulFunctionCall","src":"6843:18:8"},{"hexValue":"4e6f7420656e6f7567682062616c616e636520696e2074686520636f6e747261","kind":"string","nativeSrc":"6863:34:8","nodeType":"YulLiteral","src":"6863:34:8","type":"","value":"Not enough balance in the contra"}],"functionName":{"name":"mstore","nativeSrc":"6836:6:8","nodeType":"YulIdentifier","src":"6836:6:8"},"nativeSrc":"6836:62:8","nodeType":"YulFunctionCall","src":"6836:62:8"},"nativeSrc":"6836:62:8","nodeType":"YulExpressionStatement","src":"6836:62:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6918:9:8","nodeType":"YulIdentifier","src":"6918:9:8"},{"kind":"number","nativeSrc":"6929:2:8","nodeType":"YulLiteral","src":"6929:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6914:3:8","nodeType":"YulIdentifier","src":"6914:3:8"},"nativeSrc":"6914:18:8","nodeType":"YulFunctionCall","src":"6914:18:8"},{"hexValue":"6374","kind":"string","nativeSrc":"6934:4:8","nodeType":"YulLiteral","src":"6934:4:8","type":"","value":"ct"}],"functionName":{"name":"mstore","nativeSrc":"6907:6:8","nodeType":"YulIdentifier","src":"6907:6:8"},"nativeSrc":"6907:32:8","nodeType":"YulFunctionCall","src":"6907:32:8"},"nativeSrc":"6907:32:8","nodeType":"YulExpressionStatement","src":"6907:32:8"},{"nativeSrc":"6948:27:8","nodeType":"YulAssignment","src":"6948:27:8","value":{"arguments":[{"name":"headStart","nativeSrc":"6960:9:8","nodeType":"YulIdentifier","src":"6960:9:8"},{"kind":"number","nativeSrc":"6971:3:8","nodeType":"YulLiteral","src":"6971:3:8","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6956:3:8","nodeType":"YulIdentifier","src":"6956:3:8"},"nativeSrc":"6956:19:8","nodeType":"YulFunctionCall","src":"6956:19:8"},"variableNames":[{"name":"tail","nativeSrc":"6948:4:8","nodeType":"YulIdentifier","src":"6948:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab9f3546ec28940a6d6a885255bfad9360ca83920aa49c0a028cffeff1b19e5c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6583:398:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6734:9:8","nodeType":"YulTypedName","src":"6734:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6748:4:8","nodeType":"YulTypedName","src":"6748:4:8","type":""}],"src":"6583:398:8"},{"body":{"nativeSrc":"7160:229:8","nodeType":"YulBlock","src":"7160:229:8","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7177:9:8","nodeType":"YulIdentifier","src":"7177:9:8"},{"kind":"number","nativeSrc":"7188:2:8","nodeType":"YulLiteral","src":"7188:2:8","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7170:6:8","nodeType":"YulIdentifier","src":"7170:6:8"},"nativeSrc":"7170:21:8","nodeType":"YulFunctionCall","src":"7170:21:8"},"nativeSrc":"7170:21:8","nodeType":"YulExpressionStatement","src":"7170:21:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7211:9:8","nodeType":"YulIdentifier","src":"7211:9:8"},{"kind":"number","nativeSrc":"7222:2:8","nodeType":"YulLiteral","src":"7222:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7207:3:8","nodeType":"YulIdentifier","src":"7207:3:8"},"nativeSrc":"7207:18:8","nodeType":"YulFunctionCall","src":"7207:18:8"},{"kind":"number","nativeSrc":"7227:2:8","nodeType":"YulLiteral","src":"7227:2:8","type":"","value":"39"}],"functionName":{"name":"mstore","nativeSrc":"7200:6:8","nodeType":"YulIdentifier","src":"7200:6:8"},"nativeSrc":"7200:30:8","nodeType":"YulFunctionCall","src":"7200:30:8"},"nativeSrc":"7200:30:8","nodeType":"YulExpressionStatement","src":"7200:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7250:9:8","nodeType":"YulIdentifier","src":"7250:9:8"},{"kind":"number","nativeSrc":"7261:2:8","nodeType":"YulLiteral","src":"7261:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7246:3:8","nodeType":"YulIdentifier","src":"7246:3:8"},"nativeSrc":"7246:18:8","nodeType":"YulFunctionCall","src":"7246:18:8"},{"hexValue":"556e61626c6520746f207472616e7366657220746f6b656e20746f2074686520","kind":"string","nativeSrc":"7266:34:8","nodeType":"YulLiteral","src":"7266:34:8","type":"","value":"Unable to transfer token to the "}],"functionName":{"name":"mstore","nativeSrc":"7239:6:8","nodeType":"YulIdentifier","src":"7239:6:8"},"nativeSrc":"7239:62:8","nodeType":"YulFunctionCall","src":"7239:62:8"},"nativeSrc":"7239:62:8","nodeType":"YulExpressionStatement","src":"7239:62:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7321:9:8","nodeType":"YulIdentifier","src":"7321:9:8"},{"kind":"number","nativeSrc":"7332:2:8","nodeType":"YulLiteral","src":"7332:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7317:3:8","nodeType":"YulIdentifier","src":"7317:3:8"},"nativeSrc":"7317:18:8","nodeType":"YulFunctionCall","src":"7317:18:8"},{"hexValue":"6163636f756e74","kind":"string","nativeSrc":"7337:9:8","nodeType":"YulLiteral","src":"7337:9:8","type":"","value":"account"}],"functionName":{"name":"mstore","nativeSrc":"7310:6:8","nodeType":"YulIdentifier","src":"7310:6:8"},"nativeSrc":"7310:37:8","nodeType":"YulFunctionCall","src":"7310:37:8"},"nativeSrc":"7310:37:8","nodeType":"YulExpressionStatement","src":"7310:37:8"},{"nativeSrc":"7356:27:8","nodeType":"YulAssignment","src":"7356:27:8","value":{"arguments":[{"name":"headStart","nativeSrc":"7368:9:8","nodeType":"YulIdentifier","src":"7368:9:8"},{"kind":"number","nativeSrc":"7379:3:8","nodeType":"YulLiteral","src":"7379:3:8","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7364:3:8","nodeType":"YulIdentifier","src":"7364:3:8"},"nativeSrc":"7364:19:8","nodeType":"YulFunctionCall","src":"7364:19:8"},"variableNames":[{"name":"tail","nativeSrc":"7356:4:8","nodeType":"YulIdentifier","src":"7356:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_5c32e7268a4b8f21bf2436ce677b8c5dd11e6fb2f6c4046e21c82c90c0c1b20b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6986:403:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7137:9:8","nodeType":"YulTypedName","src":"7137:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7151:4:8","nodeType":"YulTypedName","src":"7151:4:8","type":""}],"src":"6986:403:8"},{"body":{"nativeSrc":"7643:718:8","nodeType":"YulBlock","src":"7643:718:8","statements":[{"nativeSrc":"7653:32:8","nodeType":"YulVariableDeclaration","src":"7653:32:8","value":{"arguments":[{"name":"headStart","nativeSrc":"7671:9:8","nodeType":"YulIdentifier","src":"7671:9:8"},{"kind":"number","nativeSrc":"7682:2:8","nodeType":"YulLiteral","src":"7682:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7667:3:8","nodeType":"YulIdentifier","src":"7667:3:8"},"nativeSrc":"7667:18:8","nodeType":"YulFunctionCall","src":"7667:18:8"},"variables":[{"name":"tail_1","nativeSrc":"7657:6:8","nodeType":"YulTypedName","src":"7657:6:8","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7701:9:8","nodeType":"YulIdentifier","src":"7701:9:8"},{"kind":"number","nativeSrc":"7712:2:8","nodeType":"YulLiteral","src":"7712:2:8","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"7694:6:8","nodeType":"YulIdentifier","src":"7694:6:8"},"nativeSrc":"7694:21:8","nodeType":"YulFunctionCall","src":"7694:21:8"},"nativeSrc":"7694:21:8","nodeType":"YulExpressionStatement","src":"7694:21:8"},{"nativeSrc":"7724:17:8","nodeType":"YulVariableDeclaration","src":"7724:17:8","value":{"name":"tail_1","nativeSrc":"7735:6:8","nodeType":"YulIdentifier","src":"7735:6:8"},"variables":[{"name":"pos","nativeSrc":"7728:3:8","nodeType":"YulTypedName","src":"7728:3:8","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"7757:6:8","nodeType":"YulIdentifier","src":"7757:6:8"},{"name":"value1","nativeSrc":"7765:6:8","nodeType":"YulIdentifier","src":"7765:6:8"}],"functionName":{"name":"mstore","nativeSrc":"7750:6:8","nodeType":"YulIdentifier","src":"7750:6:8"},"nativeSrc":"7750:22:8","nodeType":"YulFunctionCall","src":"7750:22:8"},"nativeSrc":"7750:22:8","nodeType":"YulExpressionStatement","src":"7750:22:8"},{"nativeSrc":"7781:25:8","nodeType":"YulAssignment","src":"7781:25:8","value":{"arguments":[{"name":"headStart","nativeSrc":"7792:9:8","nodeType":"YulIdentifier","src":"7792:9:8"},{"kind":"number","nativeSrc":"7803:2:8","nodeType":"YulLiteral","src":"7803:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7788:3:8","nodeType":"YulIdentifier","src":"7788:3:8"},"nativeSrc":"7788:18:8","nodeType":"YulFunctionCall","src":"7788:18:8"},"variableNames":[{"name":"pos","nativeSrc":"7781:3:8","nodeType":"YulIdentifier","src":"7781:3:8"}]},{"nativeSrc":"7815:20:8","nodeType":"YulVariableDeclaration","src":"7815:20:8","value":{"name":"value0","nativeSrc":"7829:6:8","nodeType":"YulIdentifier","src":"7829:6:8"},"variables":[{"name":"srcPtr","nativeSrc":"7819:6:8","nodeType":"YulTypedName","src":"7819:6:8","type":""}]},{"nativeSrc":"7844:10:8","nodeType":"YulVariableDeclaration","src":"7844:10:8","value":{"kind":"number","nativeSrc":"7853:1:8","nodeType":"YulLiteral","src":"7853:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7848:1:8","nodeType":"YulTypedName","src":"7848:1:8","type":""}]},{"body":{"nativeSrc":"7912:163:8","nodeType":"YulBlock","src":"7912:163:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7933:3:8","nodeType":"YulIdentifier","src":"7933:3:8"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"7961:6:8","nodeType":"YulIdentifier","src":"7961:6:8"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7942:18:8","nodeType":"YulIdentifier","src":"7942:18:8"},"nativeSrc":"7942:26:8","nodeType":"YulFunctionCall","src":"7942:26:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7978:3:8","nodeType":"YulLiteral","src":"7978:3:8","type":"","value":"160"},{"kind":"number","nativeSrc":"7983:1:8","nodeType":"YulLiteral","src":"7983:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7974:3:8","nodeType":"YulIdentifier","src":"7974:3:8"},"nativeSrc":"7974:11:8","nodeType":"YulFunctionCall","src":"7974:11:8"},{"kind":"number","nativeSrc":"7987:1:8","nodeType":"YulLiteral","src":"7987:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7970:3:8","nodeType":"YulIdentifier","src":"7970:3:8"},"nativeSrc":"7970:19:8","nodeType":"YulFunctionCall","src":"7970:19:8"}],"functionName":{"name":"and","nativeSrc":"7938:3:8","nodeType":"YulIdentifier","src":"7938:3:8"},"nativeSrc":"7938:52:8","nodeType":"YulFunctionCall","src":"7938:52:8"}],"functionName":{"name":"mstore","nativeSrc":"7926:6:8","nodeType":"YulIdentifier","src":"7926:6:8"},"nativeSrc":"7926:65:8","nodeType":"YulFunctionCall","src":"7926:65:8"},"nativeSrc":"7926:65:8","nodeType":"YulExpressionStatement","src":"7926:65:8"},{"nativeSrc":"8004:21:8","nodeType":"YulAssignment","src":"8004:21:8","value":{"arguments":[{"name":"pos","nativeSrc":"8015:3:8","nodeType":"YulIdentifier","src":"8015:3:8"},{"kind":"number","nativeSrc":"8020:4:8","nodeType":"YulLiteral","src":"8020:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8011:3:8","nodeType":"YulIdentifier","src":"8011:3:8"},"nativeSrc":"8011:14:8","nodeType":"YulFunctionCall","src":"8011:14:8"},"variableNames":[{"name":"pos","nativeSrc":"8004:3:8","nodeType":"YulIdentifier","src":"8004:3:8"}]},{"nativeSrc":"8038:27:8","nodeType":"YulAssignment","src":"8038:27:8","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8052:6:8","nodeType":"YulIdentifier","src":"8052:6:8"},{"kind":"number","nativeSrc":"8060:4:8","nodeType":"YulLiteral","src":"8060:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8048:3:8","nodeType":"YulIdentifier","src":"8048:3:8"},"nativeSrc":"8048:17:8","nodeType":"YulFunctionCall","src":"8048:17:8"},"variableNames":[{"name":"srcPtr","nativeSrc":"8038:6:8","nodeType":"YulIdentifier","src":"8038:6:8"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7874:1:8","nodeType":"YulIdentifier","src":"7874:1:8"},{"name":"value1","nativeSrc":"7877:6:8","nodeType":"YulIdentifier","src":"7877:6:8"}],"functionName":{"name":"lt","nativeSrc":"7871:2:8","nodeType":"YulIdentifier","src":"7871:2:8"},"nativeSrc":"7871:13:8","nodeType":"YulFunctionCall","src":"7871:13:8"},"nativeSrc":"7863:212:8","nodeType":"YulForLoop","post":{"nativeSrc":"7885:18:8","nodeType":"YulBlock","src":"7885:18:8","statements":[{"nativeSrc":"7887:14:8","nodeType":"YulAssignment","src":"7887:14:8","value":{"arguments":[{"name":"i","nativeSrc":"7896:1:8","nodeType":"YulIdentifier","src":"7896:1:8"},{"kind":"number","nativeSrc":"7899:1:8","nodeType":"YulLiteral","src":"7899:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7892:3:8","nodeType":"YulIdentifier","src":"7892:3:8"},"nativeSrc":"7892:9:8","nodeType":"YulFunctionCall","src":"7892:9:8"},"variableNames":[{"name":"i","nativeSrc":"7887:1:8","nodeType":"YulIdentifier","src":"7887:1:8"}]}]},"pre":{"nativeSrc":"7867:3:8","nodeType":"YulBlock","src":"7867:3:8","statements":[]},"src":"7863:212:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8095:9:8","nodeType":"YulIdentifier","src":"8095:9:8"},{"kind":"number","nativeSrc":"8106:4:8","nodeType":"YulLiteral","src":"8106:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8091:3:8","nodeType":"YulIdentifier","src":"8091:3:8"},"nativeSrc":"8091:20:8","nodeType":"YulFunctionCall","src":"8091:20:8"},{"arguments":[{"name":"pos","nativeSrc":"8117:3:8","nodeType":"YulIdentifier","src":"8117:3:8"},{"name":"headStart","nativeSrc":"8122:9:8","nodeType":"YulIdentifier","src":"8122:9:8"}],"functionName":{"name":"sub","nativeSrc":"8113:3:8","nodeType":"YulIdentifier","src":"8113:3:8"},"nativeSrc":"8113:19:8","nodeType":"YulFunctionCall","src":"8113:19:8"}],"functionName":{"name":"mstore","nativeSrc":"8084:6:8","nodeType":"YulIdentifier","src":"8084:6:8"},"nativeSrc":"8084:49:8","nodeType":"YulFunctionCall","src":"8084:49:8"},"nativeSrc":"8084:49:8","nodeType":"YulExpressionStatement","src":"8084:49:8"},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8149:3:8","nodeType":"YulIdentifier","src":"8149:3:8"},{"name":"value3","nativeSrc":"8154:6:8","nodeType":"YulIdentifier","src":"8154:6:8"}],"functionName":{"name":"mstore","nativeSrc":"8142:6:8","nodeType":"YulIdentifier","src":"8142:6:8"},"nativeSrc":"8142:19:8","nodeType":"YulFunctionCall","src":"8142:19:8"},"nativeSrc":"8142:19:8","nodeType":"YulExpressionStatement","src":"8142:19:8"},{"body":{"nativeSrc":"8205:16:8","nodeType":"YulBlock","src":"8205:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8214:1:8","nodeType":"YulLiteral","src":"8214:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"8217:1:8","nodeType":"YulLiteral","src":"8217:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8207:6:8","nodeType":"YulIdentifier","src":"8207:6:8"},"nativeSrc":"8207:12:8","nodeType":"YulFunctionCall","src":"8207:12:8"},"nativeSrc":"8207:12:8","nodeType":"YulExpressionStatement","src":"8207:12:8"}]},"condition":{"arguments":[{"name":"value3","nativeSrc":"8176:6:8","nodeType":"YulIdentifier","src":"8176:6:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8192:3:8","nodeType":"YulLiteral","src":"8192:3:8","type":"","value":"251"},{"kind":"number","nativeSrc":"8197:1:8","nodeType":"YulLiteral","src":"8197:1:8","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8188:3:8","nodeType":"YulIdentifier","src":"8188:3:8"},"nativeSrc":"8188:11:8","nodeType":"YulFunctionCall","src":"8188:11:8"},{"kind":"number","nativeSrc":"8201:1:8","nodeType":"YulLiteral","src":"8201:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8184:3:8","nodeType":"YulIdentifier","src":"8184:3:8"},"nativeSrc":"8184:19:8","nodeType":"YulFunctionCall","src":"8184:19:8"}],"functionName":{"name":"gt","nativeSrc":"8173:2:8","nodeType":"YulIdentifier","src":"8173:2:8"},"nativeSrc":"8173:31:8","nodeType":"YulFunctionCall","src":"8173:31:8"},"nativeSrc":"8170:51:8","nodeType":"YulIf","src":"8170:51:8"},{"nativeSrc":"8230:28:8","nodeType":"YulVariableDeclaration","src":"8230:28:8","value":{"arguments":[{"kind":"number","nativeSrc":"8248:1:8","nodeType":"YulLiteral","src":"8248:1:8","type":"","value":"5"},{"name":"value3","nativeSrc":"8251:6:8","nodeType":"YulIdentifier","src":"8251:6:8"}],"functionName":{"name":"shl","nativeSrc":"8244:3:8","nodeType":"YulIdentifier","src":"8244:3:8"},"nativeSrc":"8244:14:8","nodeType":"YulFunctionCall","src":"8244:14:8"},"variables":[{"name":"length","nativeSrc":"8234:6:8","nodeType":"YulTypedName","src":"8234:6:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"8284:3:8","nodeType":"YulIdentifier","src":"8284:3:8"},{"kind":"number","nativeSrc":"8289:4:8","nodeType":"YulLiteral","src":"8289:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8280:3:8","nodeType":"YulIdentifier","src":"8280:3:8"},"nativeSrc":"8280:14:8","nodeType":"YulFunctionCall","src":"8280:14:8"},{"name":"value2","nativeSrc":"8296:6:8","nodeType":"YulIdentifier","src":"8296:6:8"},{"name":"length","nativeSrc":"8304:6:8","nodeType":"YulIdentifier","src":"8304:6:8"}],"functionName":{"name":"calldatacopy","nativeSrc":"8267:12:8","nodeType":"YulIdentifier","src":"8267:12:8"},"nativeSrc":"8267:44:8","nodeType":"YulFunctionCall","src":"8267:44:8"},"nativeSrc":"8267:44:8","nodeType":"YulExpressionStatement","src":"8267:44:8"},{"nativeSrc":"8320:35:8","nodeType":"YulAssignment","src":"8320:35:8","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"8336:3:8","nodeType":"YulIdentifier","src":"8336:3:8"},{"name":"length","nativeSrc":"8341:6:8","nodeType":"YulIdentifier","src":"8341:6:8"}],"functionName":{"name":"add","nativeSrc":"8332:3:8","nodeType":"YulIdentifier","src":"8332:3:8"},"nativeSrc":"8332:16:8","nodeType":"YulFunctionCall","src":"8332:16:8"},{"kind":"number","nativeSrc":"8350:4:8","nodeType":"YulLiteral","src":"8350:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8328:3:8","nodeType":"YulIdentifier","src":"8328:3:8"},"nativeSrc":"8328:27:8","nodeType":"YulFunctionCall","src":"8328:27:8"},"variableNames":[{"name":"tail","nativeSrc":"8320:4:8","nodeType":"YulIdentifier","src":"8320:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7394:967:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7588:9:8","nodeType":"YulTypedName","src":"7588:9:8","type":""},{"name":"value3","nativeSrc":"7599:6:8","nodeType":"YulTypedName","src":"7599:6:8","type":""},{"name":"value2","nativeSrc":"7607:6:8","nodeType":"YulTypedName","src":"7607:6:8","type":""},{"name":"value1","nativeSrc":"7615:6:8","nodeType":"YulTypedName","src":"7615:6:8","type":""},{"name":"value0","nativeSrc":"7623:6:8","nodeType":"YulTypedName","src":"7623:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7634:4:8","nodeType":"YulTypedName","src":"7634:4:8","type":""}],"src":"7394:967:8"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _2 := shl(5, length)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_2, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, length)\n        dst := add(memPtr, 32)\n        let srcEnd := add(add(_1, _2), 32)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 32)\n        for { } lt(src, srcEnd) { src := add(src, 32) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 32)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d19e9a50265a9fdef5462eabd5cfd283435423cee1a1dd9ecc3e25e903b7d47e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Withdraw all was not successful\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient contract balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bcdbd0a79fce88b738eb2b21f26091c667c14f193cecf0fa3d9b5d94ed4d488a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Withdraw was not successful\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aa03b6ea72e227ce35a48715f1d81ef0396ad12fd8f4c133eb73c8d550363fc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Lengths of arrays do not match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ab9f3546ec28940a6d6a885255bfad9360ca83920aa49c0a028cffeff1b19e5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Not enough balance in the contra\")\n        mstore(add(headStart, 96), \"ct\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5c32e7268a4b8f21bf2436ce677b8c5dd11e6fb2f6c4046e21c82c90c0c1b20b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Unable to transfer token to the \")\n        mstore(add(headStart, 96), \"account\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 96)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_address(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        mstore(add(headStart, 0x20), sub(pos, headStart))\n        mstore(pos, value3)\n        if gt(value3, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value3)\n        calldatacopy(add(pos, 0x20), value2, length)\n        tail := add(add(pos, length), 0x20)\n    }\n}","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806385535cc51161006657806385535cc51461011957806388d695b21461012c5780638da5cb5b1461013f578063f2fde38b14610150578063fc0c546a1461016357600080fd5b80630194db8e146100a357806314870d2c146100c9578063430bf08a146100d357806350baa622146100fe578063715018a614610111575b600080fd5b6100b66100b1366004610996565b610176565b6040519081526020015b60405180910390f35b6100d16101b8565b005b6002546100e6906001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b6100d161010c366004610a63565b61038a565b6100d16105a8565b6100d1610127366004610a98565b6105bc565b6100d161013a366004610b06565b6105e6565b6000546001600160a01b03166100e6565b6100d161015e366004610a98565b6108c5565b6001546100e6906001600160a01b031681565b6000805b82518110156101b25782818151811061019557610195610b77565b6020026020010151826101a89190610b8d565b915060010161017a565b50919050565b6101c0610903565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d9190610bb4565b9050600081116102845760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b60015460025460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052600092919091169063a9059cbb906044016020604051808303816000875af11580156102de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103029190610bcd565b9050806103515760405162461bcd60e51b815260206004820152601f60248201527f576974686472617720616c6c20776173206e6f74207375636365737366756c00604482015260640161027b565b60405182815233907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a99060200160405180910390a25050565b610392610903565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610bb4565b9050600082116104515760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161027b565b808211156104a15760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015260640161027b565b60015460025460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052600092919091169063a9059cbb906044016020604051808303816000875af11580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610bcd565b90508061056e5760405162461bcd60e51b815260206004820152601b60248201527f576974686472617720776173206e6f74207375636365737366756c0000000000604482015260640161027b565b60405183815233907f992ee874049a42cae0757a765cd7f641b6028cc35c3478bde8330bf417c3a7a99060200160405180910390a2505050565b6105b0610903565b6105ba6000610930565b565b6105c4610903565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105ee610903565b82811461063d5760405162461bcd60e51b815260206004820152601e60248201527f4c656e67746873206f662061727261797320646f206e6f74206d617463680000604482015260640161027b565b600061067b83838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061017692505050565b6001546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610bb4565b10156107455760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f7567682062616c616e636520696e2074686520636f6e74726160448201526118dd60f21b606482015260840161027b565b60005b84811015610876576001546001600160a01b031663a9059cbb87878481811061077357610773610b77565b90506020020160208101906107889190610a98565b86868581811061079a5761079a610b77565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af11580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108129190610bcd565b61086e5760405162461bcd60e51b815260206004820152602760248201527f556e61626c6520746f207472616e7366657220746f6b656e20746f20746865206044820152661858d8dbdd5b9d60ca1b606482015260840161027b565b600101610748565b50336001600160a01b03167fd76871a3b9b205c530f73884df11af482cc4ac28f71bdb2f15a98e79a3a79076868686866040516108b69493929190610bef565b60405180910390a25050505050565b6108cd610903565b6001600160a01b0381166108f757604051631e4fbdf760e01b81526000600482015260240161027b565b61090081610930565b50565b6000546001600160a01b031633146105ba5760405163118cdaa760e01b815233600482015260240161027b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109a857600080fd5b813567ffffffffffffffff8111156109bf57600080fd5b8201601f810184136109d057600080fd5b803567ffffffffffffffff8111156109ea576109ea610980565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610a1757610a17610980565b604052918252602081840181019290810187841115610a3557600080fd5b6020850194505b83851015610a5857843580825260209586019590935001610a3c565b509695505050505050565b600060208284031215610a7557600080fd5b5035919050565b80356001600160a01b0381168114610a9357600080fd5b919050565b600060208284031215610aaa57600080fd5b610ab382610a7c565b9392505050565b60008083601f840112610acc57600080fd5b50813567ffffffffffffffff811115610ae457600080fd5b6020830191508360208260051b8501011115610aff57600080fd5b9250929050565b60008060008060408587031215610b1c57600080fd5b843567ffffffffffffffff811115610b3357600080fd5b610b3f87828801610aba565b909550935050602085013567ffffffffffffffff811115610b5f57600080fd5b610b6b87828801610aba565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610bae57634e487b7160e01b600052601160045260246000fd5b92915050565b600060208284031215610bc657600080fd5b5051919050565b600060208284031215610bdf57600080fd5b81518015158114610ab357600080fd5b6040808252810184905260008560608301825b87811015610c30576001600160a01b03610c1b84610a7c565b16825260209283019290910190600101610c02565b5083810360208501528481526001600160fb1b03851115610c5057600080fd5b8460051b91508186602083013701602001969550505050505056fea2646970667358221220ee64b43c06b45a47172c5bac23048a0d261ab2994ea0b5b54e507bf55a8718cc64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85535CC5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x85535CC5 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x194DB8E EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x14870D2C EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x50BAA622 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE6 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1B2 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x195 JUMPI PUSH2 0x195 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x17A JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616C6C20776173206E6F74207375636365737366756C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x992EE874049A42CAE0757A765CD7F641B6028CC35C3478BDE8330BF417C3A7A9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720776173206E6F74207375636365737366756C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x992EE874049A42CAE0757A765CD7F641B6028CC35C3478BDE8330BF417C3A7A9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x5B0 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0x0 PUSH2 0x930 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5EE PUSH2 0x903 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C656E67746873206F662061727261797320646F206E6F74206D617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x176 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST LT ISZERO PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520696E2074686520636F6E747261 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x18DD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x876 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xA98 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E7366657220746F6B656E20746F2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1858D8DBDD5B9D PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x748 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD76871A3B9B205C530F73884DF11AF482CC4AC28F71BDB2F15A98E79A3A79076 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x27B JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x930 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x9D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH2 0x9EA PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA17 JUMPI PUSH2 0xA17 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP8 DUP5 GT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xA58 JUMPI DUP5 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP4 POP ADD PUSH2 0xA3C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB3 DUP3 PUSH2 0xA7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB3F DUP8 DUP3 DUP9 ADD PUSH2 0xABA JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6B DUP8 DUP3 DUP9 ADD PUSH2 0xABA JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBAE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP6 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC1B DUP5 PUSH2 0xA7C JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC02 JUMP JUMPDEST POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL SWAP2 POP DUP2 DUP7 PUSH1 0x20 DUP4 ADD CALLDATACOPY ADD PUSH1 0x20 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH5 0xB43C06B45A SELFBALANCE OR 0x2C JUMPDEST 0xAC 0x23 DIV DUP11 0xD 0x26 BYTE 0xB2 SWAP10 0x4E LOG0 0xB5 0xB5 0x4E POP PUSH28 0xF55A8718CC64736F6C634300081B0033000000000000000000000000 ","sourceMap":"175:4305:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1859:241;;;;;;:::i;:::-;;:::i;:::-;;;1472:25:8;;;1460:2;1445:18;1859:241:7;;;;;;;;4052:426;;;:::i;:::-;;470:27;;;;;-1:-1:-1;;;;;470:27:7;;;;;;-1:-1:-1;;;;;1672:32:8;;;1654:51;;1642:2;1627:18;470:27:7;1508:203:8;3444:514:7;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1579:119:7:-;;;;;;:::i;:::-;;:::i;2399:909::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;2543:215;;;;;;:::i;:::-;;:::i;325:19:7:-;;;;;-1:-1:-1;;;;;325:19:7;;;1859:241;1919:13;;1944:150;1968:7;:14;1964:1;:18;1944:150;;;2073:7;2081:1;2073:10;;;;;;;;:::i;:::-;;;;;;;2064:19;;;;;:::i;:::-;;-1:-1:-1;1984:3:7;;1944:150;;;;1859:241;;;:::o;4052:426::-;1531:13:0;:11;:13::i;:::-;4127:5:7::1;::::0;:30:::1;::::0;-1:-1:-1;;;4127:30:7;;4151:4:::1;4127:30;::::0;::::1;1654:51:8::0;4109:15:7::1;::::0;-1:-1:-1;;;;;4127:5:7::1;::::0;:15:::1;::::0;1627:18:8;;4127:30:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4109:48;;4185:1;4175:7;:11;4167:53;;;::::0;-1:-1:-1;;;4167:53:7;;4433:2:8;4167:53:7::1;::::0;::::1;4415:21:8::0;4472:2;4452:18;;;4445:30;4511:31;4491:18;;;4484:59;4560:18;;4167:53:7::1;;;;;;;;;4289:5;::::0;4304:12:::1;::::0;4289:37:::1;::::0;-1:-1:-1;;;4289:37:7;;-1:-1:-1;;;;;4304:12:7;;::::1;4289:37;::::0;::::1;4763:51:8::0;4830:18;;;4823:34;;;4274:12:7::1;::::0;4289:5;;;::::1;::::0;:14:::1;::::0;4736:18:8;;4289:37:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4274:52;;4345:7;4337:51;;;::::0;-1:-1:-1;;;4337:51:7;;5352:2:8;4337:51:7::1;::::0;::::1;5334:21:8::0;5391:2;5371:18;;;5364:30;5430:33;5410:18;;;5403:61;5481:18;;4337:51:7::1;5150:355:8::0;4337:51:7::1;4437:34;::::0;1472:25:8;;;4451:10:7::1;::::0;4437:34:::1;::::0;1460:2:8;1445:18;4437:34:7::1;;;;;;;4099:379;;4052:426::o:0;3444:514::-;1531:13:0;:11;:13::i;:::-;3536:5:7::1;::::0;:30:::1;::::0;-1:-1:-1;;;3536:30:7;;3560:4:::1;3536:30;::::0;::::1;1654:51:8::0;3513:20:7::1;::::0;-1:-1:-1;;;;;3536:5:7::1;::::0;:15:::1;::::0;1627:18:8;;3536:30:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3513:53;;3594:1;3584:7;:11;3576:53;;;::::0;-1:-1:-1;;;3576:53:7;;4433:2:8;3576:53:7::1;::::0;::::1;4415:21:8::0;4472:2;4452:18;;;4445:30;4511:31;4491:18;;;4484:59;4560:18;;3576:53:7::1;4231:353:8::0;3576:53:7::1;3658:12;3647:7;:23;;3639:65;;;::::0;-1:-1:-1;;;3639:65:7;;5712:2:8;3639:65:7::1;::::0;::::1;5694:21:8::0;5751:2;5731:18;;;5724:30;5790:31;5770:18;;;5763:59;5839:18;;3639:65:7::1;5510:353:8::0;3639:65:7::1;3773:5;::::0;3788:12:::1;::::0;3773:37:::1;::::0;-1:-1:-1;;;3773:37:7;;-1:-1:-1;;;;;3788:12:7;;::::1;3773:37;::::0;::::1;4763:51:8::0;4830:18;;;4823:34;;;3758:12:7::1;::::0;3773:5;;;::::1;::::0;:14:::1;::::0;4736:18:8;;3773:37:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3758:52;;3829:7;3821:47;;;::::0;-1:-1:-1;;;3821:47:7;;6070:2:8;3821:47:7::1;::::0;::::1;6052:21:8::0;6109:2;6089:18;;;6082:30;6148:29;6128:18;;;6121:57;6195:18;;3821:47:7::1;5868:351:8::0;3821:47:7::1;3917:34;::::0;1472:25:8;;;3931:10:7::1;::::0;3917:34:::1;::::0;1460:2:8;1445:18;3917:34:7::1;;;;;;;3503:455;;3444:514:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1579:119:7:-;1531:13:0;:11;:13::i;:::-;1655:12:7::1;:36:::0;;-1:-1:-1;;;;;;1655:36:7::1;-1:-1:-1::0;;;;;1655:36:7;;;::::1;::::0;;;::::1;::::0;;1579:119::o;2399:909::-;1531:13:0;:11;:13::i;:::-;2589:37:7;;::::1;2568:114;;;::::0;-1:-1:-1;;;2568:114:7;;6426:2:8;2568:114:7::1;::::0;::::1;6408:21:8::0;6465:2;6445:18;;;6438:30;6504:32;6484:18;;;6477:60;6554:18;;2568:114:7::1;6224:354:8::0;2568:114:7::1;2747:19;2769:12;2773:7;;2769:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2769:3:7::1;::::0;-1:-1:-1;;;2769:12:7:i:1;:::-;2812:5;::::0;:30:::1;::::0;-1:-1:-1;;;2812:30:7;;2836:4:::1;2812:30;::::0;::::1;1654:51:8::0;2747:34:7;;-1:-1:-1;2747:34:7;;-1:-1:-1;;;;;2812:5:7;;::::1;::::0;:15:::1;::::0;1627:18:8;;2812:30:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;2791:126;;;::::0;-1:-1:-1;;;2791:126:7;;6785:2:8;2791:126:7::1;::::0;::::1;6767:21:8::0;6824:2;6804:18;;;6797:30;6863:34;6843:18;;;6836:62;-1:-1:-1;;;6914:18:8;;;6907:32;6956:19;;2791:126:7::1;6583:398:8::0;2791:126:7::1;2970:13;2965:236;2989:27:::0;;::::1;2965:236;;;3066:5;::::0;-1:-1:-1;;;;;3066:5:7::1;:14;3081:12:::0;;3094:5;3081:19;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3102:7;;3110:5;3102:14;;;;;;;:::i;:::-;3066:51;::::0;-1:-1:-1;;;;;;3066:51:7::1;::::0;;;;;;-1:-1:-1;;;;;4781:32:8;;;3066:51:7::1;::::0;::::1;4763::8::0;3102:14:7::1;;::::0;;;::::1;;4830:18:8::0;;;4823:34;-1:-1:-1;4736:18:8;;3066:51:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3041:149;;;::::0;-1:-1:-1;;;3041:149:7;;7188:2:8;3041:149:7::1;::::0;::::1;7170:21:8::0;7227:2;7207:18;;;7200:30;7266:34;7246:18;;;7239:62;-1:-1:-1;;;7317:18:8;;;7310:37;7364:19;;3041:149:7::1;6986:403:8::0;3041:149:7::1;3018:7;;2965:236;;;;3267:10;-1:-1:-1::0;;;;;3253:48:7::1;;3279:12;;3293:7;;3253:48;;;;;;;;;:::i;:::-;;;;;;;;2524:784;2399:909:::0;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1654:51:8::0;1627:18;;2672:31:0::1;1508:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;1654:51:8;1627:18;;1901:40:0;1508:203:8;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1175;230:6;283:2;271:9;262:7;258:23;254:32;251:52;;;299:1;296;289:12;251:52;339:9;326:23;372:18;364:6;361:30;358:50;;;404:1;401;394:12;358:50;427:22;;480:4;472:13;;468:27;-1:-1:-1;458:55:8;;509:1;506;499:12;458:55;549:2;536:16;575:18;567:6;564:30;561:56;;;597:18;;:::i;:::-;643:6;640:1;636:14;679:2;673:9;742:2;738:7;733:2;729;725:11;721:25;713:6;709:38;813:6;801:10;798:22;777:18;765:10;762:34;759:62;756:88;;;824:18;;:::i;:::-;860:2;853:22;910;;;960:2;990:11;;;986:20;;;910:22;948:15;;1018:19;;;1015:39;;;1050:1;1047;1040:12;1015:39;1082:2;1078;1074:11;1063:22;;1094:196;1110:6;1105:3;1102:15;1094:196;;;1200:17;;1230:18;;;1277:2;1127:12;;;;1200:17;;-1:-1:-1;1268:12:8;1094:196;;;-1:-1:-1;1309:6:8;146:1175;-1:-1:-1;;;;;;146:1175:8:o;1716:226::-;1775:6;1828:2;1816:9;1807:7;1803:23;1799:32;1796:52;;;1844:1;1841;1834:12;1796:52;-1:-1:-1;1889:23:8;;1716:226;-1:-1:-1;1716:226:8:o;1947:173::-;2015:20;;-1:-1:-1;;;;;2064:31:8;;2054:42;;2044:70;;2110:1;2107;2100:12;2044:70;1947:173;;;:::o;2125:186::-;2184:6;2237:2;2225:9;2216:7;2212:23;2208:32;2205:52;;;2253:1;2250;2243:12;2205:52;2276:29;2295:9;2276:29;:::i;:::-;2266:39;2125:186;-1:-1:-1;;;2125:186:8:o;2316:367::-;2379:8;2389:6;2443:3;2436:4;2428:6;2424:17;2420:27;2410:55;;2461:1;2458;2451:12;2410:55;-1:-1:-1;2484:20:8;;2527:18;2516:30;;2513:50;;;2559:1;2556;2549:12;2513:50;2596:4;2588:6;2584:17;2572:29;;2656:3;2649:4;2639:6;2636:1;2632:14;2624:6;2620:27;2616:38;2613:47;2610:67;;;2673:1;2670;2663:12;2610:67;2316:367;;;;;:::o;2688:768::-;2810:6;2818;2826;2834;2887:2;2875:9;2866:7;2862:23;2858:32;2855:52;;;2903:1;2900;2893:12;2855:52;2943:9;2930:23;2976:18;2968:6;2965:30;2962:50;;;3008:1;3005;2998:12;2962:50;3047:70;3109:7;3100:6;3089:9;3085:22;3047:70;:::i;:::-;3136:8;;-1:-1:-1;3021:96:8;-1:-1:-1;;3224:2:8;3209:18;;3196:32;3253:18;3240:32;;3237:52;;;3285:1;3282;3275:12;3237:52;3324:72;3388:7;3377:8;3366:9;3362:24;3324:72;:::i;:::-;2688:768;;;;-1:-1:-1;3415:8:8;-1:-1:-1;;;;2688:768:8:o;3683:127::-;3744:10;3739:3;3735:20;3732:1;3725:31;3775:4;3772:1;3765:15;3799:4;3796:1;3789:15;3815:222;3880:9;;;3901:10;;;3898:133;;;3953:10;3948:3;3944:20;3941:1;3934:31;3988:4;3985:1;3978:15;4016:4;4013:1;4006:15;3898:133;3815:222;;;;:::o;4042:184::-;4112:6;4165:2;4153:9;4144:7;4140:23;4136:32;4133:52;;;4181:1;4178;4171:12;4133:52;-1:-1:-1;4204:16:8;;4042:184;-1:-1:-1;4042:184:8:o;4868:277::-;4935:6;4988:2;4976:9;4967:7;4963:23;4959:32;4956:52;;;5004:1;5001;4994:12;4956:52;5036:9;5030:16;5089:5;5082:13;5075:21;5068:5;5065:32;5055:60;;5111:1;5108;5101:12;7394:967;7682:2;7694:21;;;7667:18;;7750:22;;;7634:4;7829:6;7803:2;7788:18;;7634:4;7863:212;7877:6;7874:1;7871:13;7863:212;;;-1:-1:-1;;;;;7942:26:8;7961:6;7942:26;:::i;:::-;7938:52;7926:65;;8020:4;8048:17;;;;8011:14;;;;7899:1;7892:9;7863:212;;;-1:-1:-1;8113:19:8;;;8106:4;8091:20;;8084:49;8142:19;;;-1:-1:-1;;;;;8173:31:8;;8170:51;;;8217:1;8214;8207:12;8170:51;8251:6;8248:1;8244:14;8230:28;;8304:6;8296;8289:4;8284:3;8280:14;8267:44;8332:16;8350:4;8328:27;;7394:967;-1:-1:-1;;;;;;7394:967:8:o"},"gasEstimates":{"creation":{"codeDepositCost":"646600","executionCost":"infinite","totalCost":"infinite"},"external":{"batchTransfer(address[],uint256[])":"infinite","owner()":"2375","renounceOwnership()":"infinite","setVaultAddress(address)":"26735","sum(uint256[])":"infinite","token()":"2425","transferOwnership(address)":"28399","vaultAddress()":"2382","withdrawAllToken()":"infinite","withdrawToken(uint256)":"infinite"}},"methodIdentifiers":{"batchTransfer(address[],uint256[])":"88d695b2","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setVaultAddress(address)":"85535cc5","sum(uint256[])":"0194db8e","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","vaultAddress()":"430bf08a","withdrawAllToken()":"14870d2c","withdrawToken(uint256)":"50baa622"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenHolders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultAdress\",\"type\":\"address\"}],\"name\":\"setVaultAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"BatchTransfer(address,address[],uint256[])\":{\"details\":\"Event to be emited on token batch transfer.\",\"params\":{\"amounts\":\"unit256[] The amounts sent.\",\"recipients\":\"address[] The address of the holders.\",\"sender\":\"address The address of the sender.\"}},\"WithdrawToken(address,uint256)\":{\"details\":\"Event to be emited on token withdrawal.\",\"params\":{\"amount\":\"unit256 The amount withdrawn.\",\"sender\":\"address The address of the sender.\"}}},\"kind\":\"dev\",\"methods\":{\"batchTransfer(address[],uint256[])\":{\"details\":\"Function to transfer tokens from contract to the provided list of token holders with respective amount.\",\"params\":{\"amounts\":\"uint256[] The list of amount per address to transfer.\",\"tokenHolders\":\"address[] The list of addresses to transfer token.\"}},\"constructor\":{\"details\":\"Constructor function.\",\"params\":{\"_token\":\"address The address of the token contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setVaultAddress(address)\":{\"details\":\"Set the vault address.\",\"params\":{\"_vaultAdress\":\"address The address of the vault.\"}},\"sum(uint256[])\":{\"details\":\"Function to return the sum of an array of uint256.\",\"params\":{\"amounts\":\"uint256[] The list of amount per address to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawAllToken()\":{\"details\":\"Withdraw all the PIXEL funds to the vaultAdress using call.\"},\"withdrawToken(uint256)\":{\"details\":\"Withdraw funds to the vault using transferFrom.\",\"params\":{\"_amount\":\"uint256 The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"token()\":{\"notice\":\"The token contract address.Must be set during deployment.\"},\"vaultAddress()\":{\"notice\":\"Vault address.This address will receive all the funds after withdrawal.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenBatchTransfer.sol\":\"TokenBatchTransfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/TokenBatchTransfer.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract TokenBatchTransfer is Ownable {\\n    /**\\n     * @notice The token contract address.\\n     * @notice Must be set during deployment.\\n     */\\n    IERC20 public token;\\n\\n    /**\\n     * @notice Vault address.\\n     * @notice This address will receive all the funds after withdrawal.\\n     */\\n    address public vaultAddress;\\n\\n    /**\\n     * @dev Event to be emited on token withdrawal.\\n     * @param sender address The address of the sender.\\n     * @param amount unit256 The amount withdrawn.\\n     */\\n    event WithdrawToken(address indexed sender, uint256 amount);\\n\\n    /**\\n     * @dev Event to be emited on token batch transfer.\\n     * @param sender address The address of the sender.\\n     * @param recipients address[] The address of the holders.\\n     * @param amounts unit256[] The amounts sent.\\n     */\\n    event BatchTransfer(\\n        address indexed sender,\\n        address[] recipients,\\n        uint256[] amounts\\n    );\\n\\n    /**\\n     * @dev Constructor function.\\n     * @param _token address The address of the token contract.\\n     */\\n    constructor(address _token) Ownable(msg.sender) {\\n        // Set the token contract address\\n        token = IERC20(_token);\\n\\n        // Set the owner and vaultAddress as the contract creator\\n        vaultAddress = payable(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Set the vault address.\\n     * @param _vaultAdress address The address of the vault.\\n     */\\n    function setVaultAddress(address _vaultAdress) external onlyOwner {\\n        vaultAddress = payable(_vaultAdress);\\n    }\\n\\n    /**\\n     * @dev Function to return the sum of an array of uint256.\\n     * @param amounts uint256[] The list of amount per address to transfer.\\n     */\\n    function sum(uint256[] memory amounts) public pure returns (uint256 total) {\\n        for (uint256 i = 0; i < amounts.length; i++) {\\n            // Solidity 0.8+ prevents overflow automatically\\n            total += amounts[i];\\n        }\\n    }\\n\\n    /**\\n     * @dev Function to transfer tokens from contract to the provided list\\n     * of token holders with respective amount.\\n     * @param tokenHolders address[] The list of addresses to transfer token.\\n     * @param amounts uint256[] The list of amount per address to transfer.\\n     */\\n    function batchTransfer(\\n        address[] calldata tokenHolders,\\n        uint256[] calldata amounts\\n    ) external onlyOwner {\\n        // Validate array lengths\\n        require(\\n            tokenHolders.length == amounts.length,\\n            \\\"Lengths of arrays do not match\\\"\\n        );\\n\\n        // Check if contract has the required balance\\n        uint256 totalAmount = sum(amounts);\\n        require(\\n            token.balanceOf(address(this)) >= totalAmount,\\n            \\\"Not enough balance in the contract\\\"\\n        );\\n\\n        // Transfer token to holders\\n        for (uint256 index = 0; index < tokenHolders.length; index++) {\\n            require(\\n                token.transfer(tokenHolders[index], amounts[index]),\\n                \\\"Unable to transfer token to the account\\\"\\n            );\\n        }\\n\\n        // Emit batch transfer event\\n        emit BatchTransfer(msg.sender, tokenHolders, amounts);\\n    }\\n\\n    /**\\n     * @dev Withdraw funds to the vault using transferFrom.\\n     * @param _amount uint256 The amount to withdraw.\\n     */\\n    function withdrawToken(uint256 _amount) external onlyOwner {\\n        uint256 pixelBalance = token.balanceOf(address(this));\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(_amount <= pixelBalance, \\\"Insufficient contract balance\\\");\\n\\n        // Transfer token to vault address\\n        bool success = token.transfer(vaultAddress, _amount);\\n\\n        require(success, \\\"Withdraw was not successful\\\");\\n\\n        // Emit withdrawal event\\n        emit WithdrawToken(msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @dev Withdraw all the PIXEL funds to the vaultAdress using call.\\n     */\\n    function withdrawAllToken() external onlyOwner {\\n        uint256 _amount = token.balanceOf(address(this));\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n\\n        // Transfer token to vault address\\n        bool success = token.transfer(vaultAddress, _amount);\\n\\n        require(success, \\\"Withdraw all was not successful\\\");\\n\\n        // Emit withdrawal event\\n        emit WithdrawToken(msg.sender, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xc30ab515c858fab75b14a1ee9e3f3775293488f3062264a5c631e8765386b014\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/TokenBatchTransfer.sol:TokenBatchTransfer","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":998,"contract":"contracts/TokenBatchTransfer.sol:TokenBatchTransfer","label":"token","offset":0,"slot":"1","type":"t_contract(IERC20)877"},{"astId":1001,"contract":"contracts/TokenBatchTransfer.sol:TokenBatchTransfer","label":"vaultAddress","offset":0,"slot":"2","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IERC20)877":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"token()":{"notice":"The token contract address.Must be set during deployment."},"vaultAddress()":{"notice":"Vault address.This address will receive all the funds after withdrawal."}},"version":1}}}}}}